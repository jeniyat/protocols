{"uri":"bioinformatic-pipeline-for-studying-transcriptome-ntpdemn","version_id":"3","protocol_name":"Bioinformatic pipeline for studying transcriptome and regulome dynamics during neural differentiation","protocol_name_html":"Bioinformatic pipeline for studying transcriptome and regulome dynamics during neural differentiation","is_prepublished":"0","can_edit":"0","parent_id":"10763","api_version":"1","is_new_mode":"0","last_modified":"1522231932","type_id":"1","link":null,"fork_id":"","public_fork_note":"","number_of_steps":"12","has_versions":"1","first_published_date":"1520995840","publish_date":"2018-03-14 05:37:24","documents":null,"have_protocol_in_step":"0","is_protocol_in_step":"0","vendor_name":"Contributed by users","vendor_link":"https:\/\/www.protocols.io","vendor_logo":"\/img\/vendors\/1.png","mod_mins":"-45","mod_secs":"1","description":"<p>Here we present a bioinformatic pipeline for dissecting transcriptional regulation of neural differentiation process. Single cell RNA-seq and bulk ATAC-seq with two biological replicates was applied to the indicated cell stages including human induced pluripotent stem cells (hiPSCs), embryo body (EB), early rosettes (Ros-E), late rosettes (Ros-L), NPCs, and the original somatic fibroblasts (Fib) for a deeper understanding of the regulatory mechanisms driving the differentiation of the neural lineage. This pipeline could be applied to study transcriptome and regulome dynamics of other lineages.<\/p>","is_bookmarked":"0","can_reassign":"1","before_start":null,"has_guidelines":"0","materials":[],"warning":null,"version_class":"10763","public":"1","is_owner":"1","is_original_owner":"1","created_on":"1520995746","protocol_affiliation":"BGI-shenzhen, Shenzhen, China","affiliation":null,"doi":"dx.doi.org\/10.17504\/protocols.io.ntpdemn","doi_status":"2","changed_fork_steps":null,"profile_url":"y2038413y2","protocol_img":"https:\/\/www.protocols.io\/img\/default_protocol.png","profile_image":"\/img\/avatars\/011.png","full_name":"wang shengpeng","created_by":"wang shengpeng","private_link":"B0DE3551616E2DF975C3E8191108477B","original_img":"1","username":"wang-shengpeng","is_retracted":"0","retraction_reason":null,"plos_id":null,"manuscript_citation":null,"journal_name":null,"is_donations_disabled":"0","is_donations_disabled_by_user":"9","item_record_id":294869,"fork_info":[],"compare_forks":[],"protocols":[],"groups":[],"number_of_shared_runs":[],"ownership_history":[],"keywords":"","transfer_to_user":[],"sub_transfer":false,"is_transfer_pending":false,"number_of_bookmarks":"1","collections":[],"tags":[],"archived":0,"sub_authors":[],"sub_protocols_number":0,"can_edit_shared":0,"shared_runs":[],"is_shared_run":0,"is_shared":1,"banner":null,"contact_badges":[{"badge_id":"2","badge_image":"\/img\/badges\/bronze.svg","badge_description":"Author!"}],"number_of_comments":0,"is_locked":0,"is_locked_by":false,"authors":"Zhouchun Shang,Dongsheng Chen,Quanlei Wang,Shengpeng Wang","authors_list":[{"name":"Zhouchun Shang","affiliation":"BGI-shenzhen, Shenzhen, China","username":null,"profile_image":null},{"name":"Dongsheng Chen","affiliation":"BGI-shenzhen, Shenzhen, China","username":null,"profile_image":null},{"name":"Quanlei Wang","affiliation":"BGI-shenzhen, Shenzhen, China","username":null,"profile_image":null},{"name":"Shengpeng Wang","affiliation":"BGI-shenzhen, Shenzhen, China","username":null,"profile_image":null}],"user":{"profile_image":"\/img\/avatars\/011.png","username":"wang-shengpeng","full_name":"wang shengpeng","created_by":"wang shengpeng"},"access":{"can_view":"1","can_remove":"0","can_add":"0","can_edit":0,"can_publish":0,"can_get_doi":0,"can_share":"0","can_move":"1","can_transfer":"1","can_download":"1","is_locked":"0"},"is_contact_suspended":0,"guidelines":null,"status_id":"1","is_research":"1","status_info":"We use this protocol in our group and it is working","steps":[{"id":"614332","is_changed":0,"original_id":"614316","is_skipped":"0","is_checked":"0","guid":"4452F3A9B857419DBBD6EC72AD939A3B","previous_guid":null,"previous_id":null,"last_modified":"1520995808","components":[{"component_id":"1071467","previous_id":0,"original_id":"1071434","guid":"1A2C4BDD38634EED991AE6A16FF2A1A5","previous_guid":null,"component_type_id":"6","data_id":null,"data":"Raw data description","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Raw data description"},"is_project":0},{"component_id":"1071468","previous_id":"1071467","original_id":"1071435","guid":"EBBC9536F4A344D29AC59C7F9C35C074","previous_guid":"1A2C4BDD38634EED991AE6A16FF2A1A5","component_type_id":"1","data_id":null,"data":"<p>Single cell RNA-seq: 50bp single-end sequencing was performed using the BGISEQ-500 platform<\/p>\n<p>Bulk RNA-seq: 50bp single-end sequencing was performed using the BGISEQ-500 platform<\/p>\n<p>Assay for Transposase-Accessible Chromatin using sequencing (ATAC-seq) was sequenced on BGISEQ-500 platform<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Single cell RNA-seq: 50bp single-end sequencing was performed using the BGISEQ-500 platform<\/p>\n<p>Bulk RNA-seq: 50bp single-end sequencing was performed using the BGISEQ-500 platform<\/p>\n<p>Assay for Transposase-Accessible Chromatin using sequencing (ATAC-seq) was sequenced on BGISEQ-500 platform<\/p>"},"is_project":0}],"available_protocols":[]},{"id":"614333","is_changed":"0","original_id":"614317","is_skipped":"0","is_checked":"0","guid":"DB1133BCD2824D09A361D0D8299D372C","previous_guid":"4452F3A9B857419DBBD6EC72AD939A3B","previous_id":"614332","last_modified":"1520995746","components":[{"component_id":"1071469","previous_id":0,"original_id":"1071436","guid":"041AC4202F814DB3985F2AB2A9797CBF","previous_guid":null,"component_type_id":"6","data_id":null,"data":"Assess read qualities of read files (fastq files) using FASTQC","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Assess read qualities of read files (fastq files) using FASTQC"},"is_project":0},{"component_id":"1071470","previous_id":"1071469","original_id":"1071437","guid":"901093562A124A2D9B3E65AABD3B0AF0","previous_guid":"041AC4202F814DB3985F2AB2A9797CBF","component_type_id":"1","data_id":null,"data":"<p>FASTQC<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>FASTQC<\/p>"},"is_project":0}]},{"id":"614334","is_changed":"0","original_id":"614318","is_skipped":"0","is_checked":"0","guid":"905B34A415644A0C89D2EE6A2AF58881","previous_guid":"DB1133BCD2824D09A361D0D8299D372C","previous_id":"614333","last_modified":"1520995746","components":[{"component_id":"1071471","previous_id":0,"original_id":"1071438","guid":"C372E623FF7740F29C5C36032B43CC02","previous_guid":null,"component_type_id":"6","data_id":null,"data":"Pre-processing of raw data","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Pre-processing of raw data"},"is_project":0},{"component_id":"1071472","previous_id":"1071471","original_id":"1071439","guid":"53CB276AAB3D43FD8384BAB165C1B77A","previous_guid":"C372E623FF7740F29C5C36032B43CC02","component_type_id":"1","data_id":null,"data":"<p>The original FASTQ data of the 527 samples were aligned to the rRNA database (downloaded from NCBI) to remove rRNAs and the remaining reads were processed with SOAPnuke (version 1.5.3) to trim adaptors and filter out the low-quality reads. The filtered data were aligned to the reference genome (hg19) using hisat2 (HISAT2 version 2.0.1-beta). Reads were counted using the R package GenomicAlignments (mode='Union', inter.feature=FALSE), and normalized to RPKM with edgeR.<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>The original FASTQ data of the 527 samples were aligned to the rRNA database (downloaded from NCBI) to remove rRNAs and the remaining reads were processed with SOAPnuke (version 1.5.3) to trim adaptors and filter out the low-quality reads. The filtered data were aligned to the reference genome (hg19) using hisat2 (HISAT2 version 2.0.1-beta). Reads were counted using the R package GenomicAlignments (mode='Union', inter.feature=FALSE), and normalized to RPKM with edgeR.<\/p>"},"is_project":0}]},{"id":"614335","is_changed":"0","original_id":"614319","is_skipped":"0","is_checked":"0","guid":"71B4A627EDE3432A99368BF1AA93D8CA","previous_guid":"905B34A415644A0C89D2EE6A2AF58881","previous_id":"614334","last_modified":"1520995746","components":[{"component_id":"1071473","previous_id":0,"original_id":"1071440","guid":"9479CEC71B0E4E83A2F3A8FAC0ABB4F1","previous_guid":null,"component_type_id":"6","data_id":null,"data":"Quality control of single cell RNA-seq","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Quality control of single cell RNA-seq"},"is_project":0},{"component_id":"1071474","previous_id":"1071473","original_id":"1071441","guid":"01F18AFCCE67482AAB90156A073E302C","previous_guid":"9479CEC71B0E4E83A2F3A8FAC0ABB4F1","component_type_id":"1","data_id":null,"data":"<p>Cells were filtered using following parameters: genome mapping rate more than 70%, fraction of reads mapped to mitochondrial genes less than 20%, mRNA mapping rate more than 80%, ERCC ratio less than 10%, and gene number more than 5000. Further, correlation of ERCC among cells was used to evaluate the quality of each cell (threshold=0.9). At last, 445 single cells remained for further analysis in this project.<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Cells were filtered using following parameters: genome mapping rate more than 70%, fraction of reads mapped to mitochondrial genes less than 20%, mRNA mapping rate more than 80%, ERCC ratio less than 10%, and gene number more than 5000. Further, correlation of ERCC among cells was used to evaluate the quality of each cell (threshold=0.9). At last, 445 single cells remained for further analysis in this project.<\/p>"},"is_project":0}]},{"id":"614336","is_changed":"0","original_id":"614320","is_skipped":"0","is_checked":"0","guid":"EE91F01D6F804737A1449386CCB56C7A","previous_guid":"71B4A627EDE3432A99368BF1AA93D8CA","previous_id":"614335","last_modified":"1520995746","components":[{"component_id":"1071475","previous_id":0,"original_id":"1071442","guid":"6051F73685E1416B82789AB3DE741E92","previous_guid":null,"component_type_id":"6","data_id":null,"data":"Identification of differentially expressed genes","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Identification of differentially expressed genes"},"is_project":0},{"component_id":"1071476","previous_id":"1071475","original_id":"1071443","guid":"BD4EC033283C42B5BE85A796D298E3AC","previous_guid":"6051F73685E1416B82789AB3DE741E92","component_type_id":"1","data_id":null,"data":"<p>Differentially expressed genes\u00a0 in iPSCs, EB, Ros-E, Ros-L, and NPCs was determined using SCDE (single cell differential expression analysis) with default parameters except requiring a minimum of 100 genes (parameter min.lib.size = 100 to call scde.error. models function). The Z scores and corrected Z scores (cZ) to adjust for the multiple testing were converted into two-tailed p-values and adjusted to control for FDR using pnorm function in R. The significantly differentially expressed genes were selected based on following criteria: adjusted p-value &lt; 0.01 and fold-change &gt; 2.<\/p>\n<p>##################Detailed script in this step####################<\/p>\n<p>da = read.table('expression_matrix.txt',header=T,row.names=1,check.names=FALSE,sep='\\t')<\/p>\n<p>####do Differential Expression<br \/>library(methods)<br \/>library(scde)<br \/>EB=da[,grep('EB',colnames(da))]<br \/>all=da[,c(-grep('EB',colnames(da)),-grep('Fib',colnames(da)))]<br \/>x = cbind(EB,all)<br \/>sg1 &lt;- gsub('(b[0-9]+).(EB|all)*', '\\\\2', colnames(x))<br \/>sg &lt;- factor(gsub('(EB|all).*', '\\\\1', sg1), levels = c('EB', 'all'))<br \/>sg[is.na(sg)] = 'all'<br \/>names(sg) &lt;- colnames(x)<br \/>table(sg)\u00a0<br \/>cd &lt;- clean.counts(x, min.lib.size=100, min.reads = 1, min.detected = 1)<br \/>o.ifm &lt;- scde.error.models(counts = cd, groups = sg, n.cores = 1, threshold.segmentation = TRUE, save.crossfit.plots = FALSE, save.model.plots = FALSE, verbose = 1)<\/p>\n<p>save(o.ifm,file='EB_VS_all.scde.error.models.RData')<br \/>#load('EB_VS_all.scde.error.models.RData')<\/p>\n<p>valid.cells &lt;- o.ifm$corr.a &gt; 0<br \/>table(valid.cells)<br \/>o.ifm &lt;- o.ifm[valid.cells, ]<br \/>o.prior &lt;- scde.expression.prior(models = o.ifm, counts = cd, length.out = 400, show.plot = FALSE)<\/p>\n<p>group1 &lt;- gsub('(b[0-9]+).(EB|all)*', '\\\\2', rownames(o.ifm))<br \/>group &lt;- factor(gsub('(EB|all).*', '\\\\1', group1), levels = c('EB', 'all'))<br \/>group[is.na(group)] = 'all'<br \/>names(group) &lt;- row.names(o.ifm)<br \/>ediff &lt;- scde.expression.difference(o.ifm, cd, o.prior, groups = group, n.randomizations = 100, n.cores = 1, verbose = 1)<\/p>\n<p>p.values &lt;- 2*pnorm(abs(ediff$Z),lower.tail=F) # 2-tailed p-value<br \/>p.values.adj &lt;- 2*pnorm(abs(ediff$cZ),lower.tail=F) # Adjusted to control for FDR<br \/>significant.genes &lt;- which(p.values.adj&lt;0.05)<br \/>length(significant.genes)<br \/>ord &lt;- order(p.values.adj[significant.genes]) # order by p-value<br \/>de &lt;- cbind(ediff[significant.genes,1:3],p.values.adj[significant.genes])[ord,]<br \/>colnames(de) &lt;- c('Lower bound','log2 fold change','Upper bound','p-value')<br \/>write.table(de, file = 'EB_VS_all.scde.FDR.xls', row.names = TRUE, col.names = TRUE, sep = '\\t', quote = FALSE)<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Differentially expressed genes\u00a0 in iPSCs, EB, Ros-E, Ros-L, and NPCs was determined using SCDE (single cell differential expression analysis) with default parameters except requiring a minimum of 100 genes (parameter min.lib.size = 100 to call scde.error. models function). The Z scores and corrected Z scores (cZ) to adjust for the multiple testing were converted into two-tailed p-values and adjusted to control for FDR using pnorm function in R. The significantly differentially expressed genes were selected based on following criteria: adjusted p-value &lt; 0.01 and fold-change &gt; 2.<\/p>\n<p>##################Detailed script in this step####################<\/p>\n<p>da = read.table('expression_matrix.txt',header=T,row.names=1,check.names=FALSE,sep='\\t')<\/p>\n<p>####do Differential Expression<br \/>library(methods)<br \/>library(scde)<br \/>EB=da[,grep('EB',colnames(da))]<br \/>all=da[,c(-grep('EB',colnames(da)),-grep('Fib',colnames(da)))]<br \/>x = cbind(EB,all)<br \/>sg1 &lt;- gsub('(b[0-9]+).(EB|all)*', '\\\\2', colnames(x))<br \/>sg &lt;- factor(gsub('(EB|all).*', '\\\\1', sg1), levels = c('EB', 'all'))<br \/>sg[is.na(sg)] = 'all'<br \/>names(sg) &lt;- colnames(x)<br \/>table(sg)\u00a0<br \/>cd &lt;- clean.counts(x, min.lib.size=100, min.reads = 1, min.detected = 1)<br \/>o.ifm &lt;- scde.error.models(counts = cd, groups = sg, n.cores = 1, threshold.segmentation = TRUE, save.crossfit.plots = FALSE, save.model.plots = FALSE, verbose = 1)<\/p>\n<p>save(o.ifm,file='EB_VS_all.scde.error.models.RData')<br \/>#load('EB_VS_all.scde.error.models.RData')<\/p>\n<p>valid.cells &lt;- o.ifm$corr.a &gt; 0<br \/>table(valid.cells)<br \/>o.ifm &lt;- o.ifm[valid.cells, ]<br \/>o.prior &lt;- scde.expression.prior(models = o.ifm, counts = cd, length.out = 400, show.plot = FALSE)<\/p>\n<p>group1 &lt;- gsub('(b[0-9]+).(EB|all)*', '\\\\2', rownames(o.ifm))<br \/>group &lt;- factor(gsub('(EB|all).*', '\\\\1', group1), levels = c('EB', 'all'))<br \/>group[is.na(group)] = 'all'<br \/>names(group) &lt;- row.names(o.ifm)<br \/>ediff &lt;- scde.expression.difference(o.ifm, cd, o.prior, groups = group, n.randomizations = 100, n.cores = 1, verbose = 1)<\/p>\n<p>p.values &lt;- 2*pnorm(abs(ediff$Z),lower.tail=F) # 2-tailed p-value<br \/>p.values.adj &lt;- 2*pnorm(abs(ediff$cZ),lower.tail=F) # Adjusted to control for FDR<br \/>significant.genes &lt;- which(p.values.adj&lt;0.05)<br \/>length(significant.genes)<br \/>ord &lt;- order(p.values.adj[significant.genes]) # order by p-value<br \/>de &lt;- cbind(ediff[significant.genes,1:3],p.values.adj[significant.genes])[ord,]<br \/>colnames(de) &lt;- c('Lower bound','log2 fold change','Upper bound','p-value')<br \/>write.table(de, file = 'EB_VS_all.scde.FDR.xls', row.names = TRUE, col.names = TRUE, sep = '\\t', quote = FALSE)<\/p>"},"is_project":0}]},{"id":"614337","is_changed":0,"original_id":"614321","is_skipped":"0","is_checked":"0","guid":"B077070F1AE449168BFBD593BC8B2813","previous_guid":"EE91F01D6F804737A1449386CCB56C7A","previous_id":"614336","last_modified":"1520995797","components":[{"component_id":"1071477","previous_id":0,"original_id":"1071444","guid":"10523FD7F7AA49AA9A08594361A9D621","previous_guid":null,"component_type_id":"6","data_id":null,"data":"Constructing trajectory using variable genes","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Constructing trajectory using variable genes"},"is_project":0},{"component_id":"1071478","previous_id":"1071477","original_id":"1071445","guid":"A3817D10282D4367BDF1872D46337578","previous_guid":"10523FD7F7AA49AA9A08594361A9D621","component_type_id":"1","data_id":null,"data":"<p>Monocle ordering was conducted for all iPSCs, EB, Ros-E, Ros-L and NPCs cells using the set of variable genes with default parameters except we specified reduction_method =\u201dDDRTree\u201d in the reduceDimension function. The variable genes were selected using the Seurat R package.<\/p>\n<p>##################Detailed script in this step####################<\/p>\n<p>myda\u00a0= read.table('expression_matrix.txt',sep='\\t',header = T,row.names = 1)<\/p>\n<p>exp = subset(exp,select=c(-grep('H9|Fib',colnames(exp))))<\/p>\n<p>library(Seurat)<br \/>marrow &lt;- CreateSeuratObject(raw.data = myda)<br \/>marrow &lt;- NormalizeData(object = marrow)<br \/>marrow &lt;- FindVariableGenes(object = marrow,<br \/>mean.function = ExpMean,<br \/>dispersion.function = LogVMR,<br \/>x.low.cutoff = 0, x.high.cutoff = 100,<br \/>y.cutoff = 0.5,<br \/>do.plot = TRUE)<br \/>dim(x = marrow@var.genes)<\/p>\n<p>myda = myda[as.matrix(marrow@var.genes),]<\/p>\n<p>\u00a0<\/p>\n<p>pheno.data1 &lt;- colnames(myda)<br \/>pheno.data2 &lt;- unlist(lapply(pheno.data1, function(x) strsplit(x,'.',fixed = TRUE)[[1]][2]))<br \/>pheno.data3 &lt;- unlist(lapply(pheno.data2, function(x) strsplit(x,'_',fixed = TRUE)[[1]][1])) ##remove the quantity id for each samples<br \/>pheno.data4 &lt;- unlist(lapply(pheno.data1, function(x) strsplit(x,'_',fixed = TRUE)[[1]][1]))<br \/>pheno.data5 &lt;- unlist(lapply(pheno.data4, function(x) strsplit(x,'.',fixed = TRUE)[[1]][1]))<\/p>\n<p>mode(pheno.data5)<br \/>pheno.data.df &lt;- data.frame(type=pheno.data3)<br \/>rownames(pheno.data.df) &lt;- colnames(myda)<br \/>pd &lt;- new('AnnotatedDataFrame', data = pheno.data.df)<\/p>\n<p><br \/>feature.fd = rownames(myda)<br \/>feature.fd &lt;- unlist(lapply(feature.fd, function(x) strsplit(x, '.')[[1]][1]))<br \/>feature.data.fd = data.frame(type=feature.fd)<br \/>rownames(feature.data.fd) &lt;- rownames(myda)<br \/>fd &lt;- new('AnnotatedDataFrame', data = feature.data.fd)<\/p>\n<p>HSMM &lt;- newCellDataSet(as(as.matrix(myda), 'sparseMatrix'),<br \/>phenoData = pd,<br \/>featureData = fd,<br \/>lowerDetectionLimit=1,<br \/>expressionFamily=tobit())<\/p>\n<p>ordering.genes &lt;- rownames(feature.data.fd)<br \/>data &lt;- setOrderingFilter(HSMM, ordering.genes)<br \/>data &lt;- reduceDimension(data,max_components=2,reduction_method = c('DDRTree'),norm_method = 'none')<br \/>data &lt;- orderCells(data, num_paths = 2, reverse = FALSE)<br \/>save(data,file='monocle_simple_used_391sample.gene.RData')<\/p>\n<p>\u00a0<\/p>\n<p>pdf('monocle_simple_used__main_subtype.gene_subtype.pdf')<\/p>\n<p>plot_cell_trajectory(data, color_by = 'type',show_branch_points = FALSE)<\/p>\n<p>dev.off()<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Monocle ordering was conducted for all iPSCs, EB, Ros-E, Ros-L and NPCs cells using the set of variable genes with default parameters except we specified reduction_method =\u201dDDRTree\u201d in the reduceDimension function. The variable genes were selected using the Seurat R package.<\/p>\n<p>##################Detailed script in this step####################<\/p>\n<p>myda\u00a0= read.table('expression_matrix.txt',sep='\\t',header = T,row.names = 1)<\/p>\n<p>exp = subset(exp,select=c(-grep('H9|Fib',colnames(exp))))<\/p>\n<p>library(Seurat)<br \/>marrow &lt;- CreateSeuratObject(raw.data = myda)<br \/>marrow &lt;- NormalizeData(object = marrow)<br \/>marrow &lt;- FindVariableGenes(object = marrow,<br \/>mean.function = ExpMean,<br \/>dispersion.function = LogVMR,<br \/>x.low.cutoff = 0, x.high.cutoff = 100,<br \/>y.cutoff = 0.5,<br \/>do.plot = TRUE)<br \/>dim(x = marrow@var.genes)<\/p>\n<p>myda = myda[as.matrix(marrow@var.genes),]<\/p>\n<p>\u00a0<\/p>\n<p>pheno.data1 &lt;- colnames(myda)<br \/>pheno.data2 &lt;- unlist(lapply(pheno.data1, function(x) strsplit(x,'.',fixed = TRUE)[[1]][2]))<br \/>pheno.data3 &lt;- unlist(lapply(pheno.data2, function(x) strsplit(x,'_',fixed = TRUE)[[1]][1])) ##remove the quantity id for each samples<br \/>pheno.data4 &lt;- unlist(lapply(pheno.data1, function(x) strsplit(x,'_',fixed = TRUE)[[1]][1]))<br \/>pheno.data5 &lt;- unlist(lapply(pheno.data4, function(x) strsplit(x,'.',fixed = TRUE)[[1]][1]))<\/p>\n<p>mode(pheno.data5)<br \/>pheno.data.df &lt;- data.frame(type=pheno.data3)<br \/>rownames(pheno.data.df) &lt;- colnames(myda)<br \/>pd &lt;- new('AnnotatedDataFrame', data = pheno.data.df)<\/p>\n<p><br \/>feature.fd = rownames(myda)<br \/>feature.fd &lt;- unlist(lapply(feature.fd, function(x) strsplit(x, '.')[[1]][1]))<br \/>feature.data.fd = data.frame(type=feature.fd)<br \/>rownames(feature.data.fd) &lt;- rownames(myda)<br \/>fd &lt;- new('AnnotatedDataFrame', data = feature.data.fd)<\/p>\n<p>HSMM &lt;- newCellDataSet(as(as.matrix(myda), 'sparseMatrix'),<br \/>phenoData = pd,<br \/>featureData = fd,<br \/>lowerDetectionLimit=1,<br \/>expressionFamily=tobit())<\/p>\n<p>ordering.genes &lt;- rownames(feature.data.fd)<br \/>data &lt;- setOrderingFilter(HSMM, ordering.genes)<br \/>data &lt;- reduceDimension(data,max_components=2,reduction_method = c('DDRTree'),norm_method = 'none')<br \/>data &lt;- orderCells(data, num_paths = 2, reverse = FALSE)<br \/>save(data,file='monocle_simple_used_391sample.gene.RData')<\/p>\n<p>\u00a0<\/p>\n<p>pdf('monocle_simple_used__main_subtype.gene_subtype.pdf')<\/p>\n<p>plot_cell_trajectory(data, color_by = 'type',show_branch_points = FALSE)<\/p>\n<p>dev.off()<\/p>"},"is_project":0}],"available_protocols":[]},{"id":"614338","is_changed":"0","original_id":"614322","is_skipped":"0","is_checked":"0","guid":"471728258F5E47E2803218B9231FDC81","previous_guid":"B077070F1AE449168BFBD593BC8B2813","previous_id":"614337","last_modified":"1520995746","components":[{"component_id":"1071479","previous_id":0,"original_id":"1071446","guid":"163B6CC91C2E463381D712FCC93FC4A0","previous_guid":null,"component_type_id":"6","data_id":null,"data":"Analysis of heterogeneity in each cell stage","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Analysis of heterogeneity in each cell stage"},"is_project":0},{"component_id":"1071480","previous_id":"1071479","original_id":"1071447","guid":"1526D0E524D94F47BFEBE4BB768E3747","previous_guid":"163B6CC91C2E463381D712FCC93FC4A0","component_type_id":"1","data_id":null,"data":"<p>The heterogeneity of each cell stage was determined using Seurat R package.<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>The heterogeneity of each cell stage was determined using Seurat R package.<\/p>"},"is_project":0}]},{"id":"614339","is_changed":"0","original_id":"614323","is_skipped":"0","is_checked":"0","guid":"B5CB8842B2584CEE80C80E1FD9A2C6B0","previous_guid":"471728258F5E47E2803218B9231FDC81","previous_id":"614338","last_modified":"1520995746","components":[{"component_id":"1071481","previous_id":0,"original_id":"1071448","guid":"5B1883266DA14E0FB41B67BB3E67739C","previous_guid":null,"component_type_id":"6","data_id":null,"data":"ATAC peak calling","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"ATAC peak calling"},"is_project":0},{"component_id":"1071482","previous_id":"1071481","original_id":"1071449","guid":"5D0EC3559CC64F22888E93CA63B21369","previous_guid":"5B1883266DA14E0FB41B67BB3E67739C","component_type_id":"1","data_id":null,"data":"<p>We aligned ATAC-seq data to hg19 using Bowtie2 and called peaks using MACS2. We established a standard peak set by merging all overlapping peaks. The IDR pipeline was used to identify reproducible peaks between two biological replicates. Only peaks with IDR&lt;0.01 were considered reproducible and retained for downstream analysis. Pearson correlation coefficients of two biological replicates at each stage were calculated. Stage-specific peaks were defined as peaks having no overlap with any peaks in other stages. Novel peaks were defined as peaks non-overlapping with previous stages. In the case of iPSCs, all peaks were annotated as novel peaks.\u00a0<\/p>\n<p>For reproducible peaks, we applied HOMER to assign putative targets for peaks. For stage-specific peaks, ChIPseeker was used for putative target assignment. In both strategies, the putative target of a certain peak is defined as the gene with TSS closest to the peak summit location.<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>We aligned ATAC-seq data to hg19 using Bowtie2 and called peaks using MACS2. We established a standard peak set by merging all overlapping peaks. The IDR pipeline was used to identify reproducible peaks between two biological replicates. Only peaks with IDR&lt;0.01 were considered reproducible and retained for downstream analysis. Pearson correlation coefficients of two biological replicates at each stage were calculated. Stage-specific peaks were defined as peaks having no overlap with any peaks in other stages. Novel peaks were defined as peaks non-overlapping with previous stages. In the case of iPSCs, all peaks were annotated as novel peaks.\u00a0<\/p>\n<p>For reproducible peaks, we applied HOMER to assign putative targets for peaks. For stage-specific peaks, ChIPseeker was used for putative target assignment. In both strategies, the putative target of a certain peak is defined as the gene with TSS closest to the peak summit location.<\/p>"},"is_project":0}]},{"id":"614340","is_changed":"0","original_id":"614324","is_skipped":"0","is_checked":"0","guid":"F4E070A1642B4CA2BA36CE2458DC3BE8","previous_guid":"B5CB8842B2584CEE80C80E1FD9A2C6B0","previous_id":"614339","last_modified":"1520995746","components":[{"component_id":"1071483","previous_id":0,"original_id":"1071450","guid":"ECA458D8D4394075972221DCB7F1AE91","previous_guid":null,"component_type_id":"6","data_id":null,"data":"GO term and KEGG pathway enrichment analysis","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"GO term and KEGG pathway enrichment analysis"},"is_project":0},{"component_id":"1071484","previous_id":"1071483","original_id":"1071451","guid":"79ECF2B9712C446989467ECA80517CCA","previous_guid":"ECA458D8D4394075972221DCB7F1AE91","component_type_id":"1","data_id":null,"data":"<p>Lists of genes were analysed using DAVID and the BH method was used for multiple test correction. GO terms with a FDR less than 0.01 or 0.05 were considered as significantly enriched. Target genes of stage-specific ATAC peaks were analysed using the R package, clusterProfiler, in which an adjusted p-value of 0.05 was used to identify significantly enriched GO and KEGG terms associated with each set of peaks.<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Lists of genes were analysed using DAVID and the BH method was used for multiple test correction. GO terms with a FDR less than 0.01 or 0.05 were considered as significantly enriched. Target genes of stage-specific ATAC peaks were analysed using the R package, clusterProfiler, in which an adjusted p-value of 0.05 was used to identify significantly enriched GO and KEGG terms associated with each set of peaks.<\/p>"},"is_project":0}]},{"id":"614341","is_changed":"0","original_id":"614325","is_skipped":"0","is_checked":"0","guid":"5ECCBF39401E410FA6FF3125F57BE5C5","previous_guid":"F4E070A1642B4CA2BA36CE2458DC3BE8","previous_id":"614340","last_modified":"1520995746","components":[{"component_id":"1071485","previous_id":0,"original_id":"1071452","guid":"89326FBA98524C03AAED2245ABF44E60","previous_guid":null,"component_type_id":"6","data_id":null,"data":"Regulatory network construction","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Regulatory network construction"},"is_project":0},{"component_id":"1071486","previous_id":"1071485","original_id":"1071453","guid":"6A2D76743B904B3EB61F602ACB5B894B","previous_guid":"89326FBA98524C03AAED2245ABF44E60","component_type_id":"1","data_id":null,"data":"<p>The scRNA-seq profiles among each cell types were compared using SCDE package. TFs significantly differentially expressed, with adjusted p-value threshold of 0.05, among neighboring cell types were submitted to STRING database to infer regulatory networks based on known interaction relationships (supported by data from curated databases, experiments and text-mining). TFs without any interactions with other proteins were removed from the network. To select key regulators, we used a threshold of 5 and all TFs with number of interactions above the threshold were considered as key regulators.<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>The scRNA-seq profiles among each cell types were compared using SCDE package. TFs significantly differentially expressed, with adjusted p-value threshold of 0.05, among neighboring cell types were submitted to STRING database to infer regulatory networks based on known interaction relationships (supported by data from curated databases, experiments and text-mining). TFs without any interactions with other proteins were removed from the network. To select key regulators, we used a threshold of 5 and all TFs with number of interactions above the threshold were considered as key regulators.<\/p>"},"is_project":0}]},{"id":"614342","is_changed":"0","original_id":"614326","is_skipped":"0","is_checked":"0","guid":"2588619876314AEC8325C6D791210B2D","previous_guid":"5ECCBF39401E410FA6FF3125F57BE5C5","previous_id":"614341","last_modified":"1520995746","components":[{"component_id":"1071487","previous_id":0,"original_id":"1071454","guid":"20EEDA58C5EB4E489BF016E29DD2C39A","previous_guid":null,"component_type_id":"6","data_id":null,"data":"Construction of cellular communication network","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Construction of cellular communication network"},"is_project":0},{"component_id":"1071488","previous_id":"1071487","original_id":"1071455","guid":"E6F2747F4ABD4311954E461E4A1EA9F4","previous_guid":"20EEDA58C5EB4E489BF016E29DD2C39A","component_type_id":"1","data_id":null,"data":"<p>The ligand-receptor interaction relationships were downloaded from the database, IUPHAR\/BPS Guide to PHARMACOLOGY, and the Database of Ligand-Receptor Partners (DLRP). The average expression level of RPKM of 1 was used as a threshold. Ligands and receptors above the threshold were considered as expressed in the corresponding cluster. The R package Circlize was used to visualize the interactions.<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>The ligand-receptor interaction relationships were downloaded from the database, IUPHAR\/BPS Guide to PHARMACOLOGY, and the Database of Ligand-Receptor Partners (DLRP). The average expression level of RPKM of 1 was used as a threshold. Ligands and receptors above the threshold were considered as expressed in the corresponding cluster. The R package Circlize was used to visualize the interactions.<\/p>"},"is_project":0}]},{"id":"614343","is_changed":"0","original_id":"614327","is_skipped":"0","is_checked":"0","guid":"7C8BB599F94A410C8280C3F601017B88","previous_guid":"2588619876314AEC8325C6D791210B2D","previous_id":"614342","last_modified":"1520995746","components":[{"component_id":"1071489","previous_id":0,"original_id":"1071456","guid":"CF6919F108B64393A7925951B10A702F","previous_guid":null,"component_type_id":"6","data_id":null,"data":"Motif enrichment analysis","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Motif enrichment analysis"},"is_project":0},{"component_id":"1071490","previous_id":"1071489","original_id":"1071457","guid":"9C2F2C90EC954B3EAC0BF4B92E7E9FF3","previous_guid":"CF6919F108B64393A7925951B10A702F","component_type_id":"1","data_id":null,"data":"<p>Motifs enriched in each set of ATAC peaks were identified using findMotifsGenome.pl from HOMER using following parameters: -size -100,100 -len 4,5,6,7,8,9,10,11,12.<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Motifs enriched in each set of ATAC peaks were identified using findMotifsGenome.pl from HOMER using following parameters: -size -100,100 -len 4,5,6,7,8,9,10,11,12.<\/p>"},"is_project":0}]}]}