{"uri":"biol-354w-research-methods-in-advance-microbiology-nysdfwe","version_id":"13","protocol_name":"BIOL 354W - Research Methods in Advance Microbiology","protocol_name_html":"BIOL 354W - Research Methods in Advance Microbiology","is_prepublished":"0","can_edit":"0","parent_id":"9611","api_version":"1","is_new_mode":"0","last_modified":"1522231931","type_id":"1","link":null,"fork_id":"","public_fork_note":"","number_of_steps":"16","has_versions":"1","first_published_date":"1521681461","publish_date":"2018-03-22 01:17:41","documents":null,"have_protocol_in_step":"0","is_protocol_in_step":"0","vendor_name":"Contributed by users","vendor_link":"https:\/\/www.protocols.io","vendor_logo":"\/img\/vendors\/1.png","mod_mins":"-45","mod_secs":"1","description":"<p>This protocol series will guide students through the experience of analyzing metagenomic data.\u00a0<\/p>","is_bookmarked":"0","can_reassign":"1","before_start":null,"has_guidelines":"0","materials":[],"warning":null,"version_class":"9611","public":"1","is_owner":"1","is_original_owner":"1","created_on":"1521673873","protocol_affiliation":"Willamette University","affiliation":"Willamette University","doi":"dx.doi.org\/10.17504\/protocols.io.nysdfwe","doi_status":"2","changed_fork_steps":null,"profile_url":"Rosa-w203c4x2y2","protocol_img":"https:\/\/www.protocols.io\/img\/default_protocol.png","profile_image":"\/img\/avatars\/002.png","full_name":"Rosa Leon","created_by":"Rosa Leon","private_link":"48E638EBE09B5C3388F665EFB7519669","original_img":"1","username":"rosa-leon","is_retracted":"0","retraction_reason":null,"plos_id":null,"manuscript_citation":null,"journal_name":null,"is_donations_disabled":"0","is_donations_disabled_by_user":"9","item_record_id":231093,"fork_info":[],"compare_forks":[],"protocols":[],"groups":[{"group_id":"402","group_uri":"leon-zayas-lab","group_name":"Leon Zayas Lab","group_logo":"","requested_uid":null,"request_flag":null,"my_request":"1"}],"number_of_shared_runs":[],"ownership_history":[],"keywords":"","transfer_to_user":[],"sub_transfer":false,"is_transfer_pending":false,"number_of_bookmarks":"0","collections":[],"tags":[],"archived":0,"sub_authors":[],"sub_protocols_number":0,"can_edit_shared":0,"shared_runs":[],"is_shared_run":0,"is_shared":1,"banner":null,"contact_badges":[{"badge_id":"2","badge_image":"\/img\/badges\/bronze.svg","badge_description":"Author!"},{"badge_id":"5","badge_image":"\/img\/badges\/earlyadopter.svg","badge_description":"Early adopter"},{"badge_id":"6","badge_image":"\/img\/badges\/socialbutterfly.svg","badge_description":"Social butterfly"}],"number_of_comments":0,"is_locked":0,"is_locked_by":false,"authors":"Rosa Leon","authors_list":[{"name":"Rosa Leon","affiliation":"Willamette University","username":"rosa-leon","profile_image":"\/img\/avatars\/002.png"}],"user":{"profile_image":"\/img\/avatars\/002.png","username":"rosa-leon","full_name":"Rosa Leon","created_by":"Rosa Leon"},"access":{"can_view":"1","can_remove":"0","can_add":"0","can_edit":0,"can_publish":0,"can_get_doi":0,"can_share":"0","can_move":"1","can_transfer":"1","can_download":"1","is_locked":"0"},"is_contact_suspended":0,"guidelines":null,"status_id":"2","is_research":"1","status_info":"We are still developing and optimizing this protocol","steps":[{"id":"616229","is_changed":"0","original_id":"613081","is_skipped":"0","is_checked":"0","guid":"C30EDD787BE746B89A6289F7C1275897","previous_guid":null,"previous_id":null,"last_modified":"1521673873","components":[{"component_id":"1076307","previous_id":0,"original_id":"1068462","guid":"4E4088126CDF4EFAB1B2914EBD03C961","previous_guid":null,"component_type_id":"1","data_id":null,"data":"<p><a href=\"https:\/\/docs.google.com\/presentation\/d\/19c71q-aMePLZrz0915Z7_wO2L62HZi25oManfE5K6HY\/edit?usp=sharing\" target=\"_blank\">BIOL 354W Jan 16th<\/a><\/p>\n<p>\u00a0<\/p>\n<p><a href=\"https:\/\/docs.google.com\/presentation\/d\/1kjORdMRDvTxMVx6gNqLWdB0ph6zbTg0S9n6Jr_rsQzg\/edit?usp=sharing\" target=\"_blank\">BIOL 354W Jan 18th<\/a><\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><a href=\"https:\/\/docs.google.com\/presentation\/d\/19c71q-aMePLZrz0915Z7_wO2L62HZi25oManfE5K6HY\/edit?usp=sharing\" target=\"_blank\">BIOL 354W Jan 16th<\/a><\/p>\n<p>\u00a0<\/p>\n<p><a href=\"https:\/\/docs.google.com\/presentation\/d\/1kjORdMRDvTxMVx6gNqLWdB0ph6zbTg0S9n6Jr_rsQzg\/edit?usp=sharing\" target=\"_blank\">BIOL 354W Jan 18th<\/a><\/p>"},"is_project":0},{"component_id":"1076308","previous_id":"1076307","original_id":"1068463","guid":"AACF74E054FC42B29C0B6AD9DB8CFEE7","previous_guid":"4E4088126CDF4EFAB1B2914EBD03C961","component_type_id":"6","data_id":null,"data":"Introduction to BIOL 354W, sequencing data and bioinformatics","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Introduction to BIOL 354W, sequencing data and bioinformatics"},"is_project":0}]},{"id":"616230","is_changed":"0","original_id":"613082","is_skipped":"0","is_checked":"0","guid":"B86BEF7FF763422D95D81B2B18BE1826","previous_guid":"C30EDD787BE746B89A6289F7C1275897","previous_id":"616229","last_modified":"1521673873","components":[{"component_id":"1076309","previous_id":0,"original_id":"1068464","guid":"B7BA66622E8A44F5BE4F5CF69E592A4D","previous_guid":null,"component_type_id":"6","data_id":null,"data":"Command line tutorial ","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Command line tutorial "},"is_project":0},{"component_id":"1076310","previous_id":"1076309","original_id":"1068465","guid":"AB25D189CC0A4CB58DC06C3BA5E513DF","previous_guid":"B7BA66622E8A44F5BE4F5CF69E592A4D","component_type_id":"1","data_id":null,"data":"<p>In order to do bioinformatics, we first need to become comfortable using the computational language and basic skills that will allow you to analyze data.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>Open this link in Chrome<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>In order to do bioinformatics, we first need to become comfortable using the computational language and basic skills that will allow you to analyze data.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>Open this link in Chrome<\/p>"},"is_project":0},{"component_id":"1076311","previous_id":"1076310","original_id":"1068466","guid":"04A5BCE88E0E4AB59E85F3DBCAF56482","previous_guid":"AB25D189CC0A4CB58DC06C3BA5E513DF","component_type_id":"7","data_id":"3120","data":"http:\/\/rik.smith-unna.com\/command_line_bootcamp\/?","order_id":"2","name":"External Link","data_by_id":"1","type_id":"7","source_data":{"link":"http:\/\/rik.smith-unna.com\/command_line_bootcamp\/?"},"is_project":0},{"component_id":"1076312","previous_id":"1076311","original_id":"1068467","guid":"D70154F825F8480EA234776C3BFE189C","previous_guid":"04A5BCE88E0E4AB59E85F3DBCAF56482","component_type_id":"26","data_id":"17351","data":"","order_id":"3","name":"Note","data_by_id":"1","type_id":"26","source_data":{"annotation_id":"17351","thread_id":"17351","id":"17351","thread_title":"Comment on step 2 of BIOL 354W - Research Methods in Advance Microbiology","uri":"comment-on-step-2-of-biol-354w-research-methods-in","thread_uri":"comment-on-step-2-of-biol-354w-research-methods-in","step_id":"605184","protocol_uri":"biol-354w-research-methods-in-advance-microbiology-mvec63e","protocol_name":"BIOL 354W - Research Methods in Advance Microbiology","protocol_name_html":"BIOL 354W - Research Methods in Advance Microbiology","annotation":"<p>change to:<\/p>\n<p>\u00a0<\/p>\n<p>In order to do bioinformatics, we first need to become comfortable using the computational language and basic skills that will allow you to analyze data.\u00a0<\/p>","thread_text":"<p>change to:<\/p>\n<p>\u00a0<\/p>\n<p>In order to do bioinformatics, we first need to become comfortable using the computational language and basic skills that will allow you to analyze data.\u00a0<\/p>","body":"<p>change to:<\/p>\n<p>\u00a0<\/p>\n<p>In order to do bioinformatics, we first need to become comfortable using the computational language and basic skills that will allow you to analyze data.\u00a0<\/p>","is_private":"1","public_protocol":"1","can_edit":0,"can_delete":"0","show_name":"1","created_date":"1517269460","created_on":"1517269460","modified_on":null,"last_updated":null,"profile_image":"\/img\/avatars\/012.png","full_name":"Marcia Smith","affiliation":null,"username":"marcia-smith","email":"rleonzayas@willamette.edu","pa_useranme":"rosa-leon","comments":[]},"is_project":0}]},{"id":"616231","is_changed":"0","original_id":"613083","is_skipped":"0","is_checked":"0","guid":"A130B08D986F4CE9BEE2CB8A1F4D30F4","previous_guid":"B86BEF7FF763422D95D81B2B18BE1826","previous_id":"616230","last_modified":"1521673873","components":[{"component_id":"1076313","previous_id":0,"original_id":"1068468","guid":"22076F8F7DDC49288FE978565EACB103","previous_guid":null,"component_type_id":"1","data_id":null,"data":"<p>he first step in analyzing the sequencing data set is to asses the quality of the sequence, and then to edit the dataset in order to retain only the highest quality sequences for the following analysis.<\/p>\n<p>\u00a0<\/p>\n<p>To this end we will use:\u00a0FastQC - A high throughput sequence QC analysis tool\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>Familiarize your self with the software by looking at their <a href=\"https:\/\/www.bioinformatics.babraham.ac.uk\/projects\/fastqc\/\" target=\"_blank\">web page<\/a>\u00a0- check out the video tutorial!<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>he first step in analyzing the sequencing data set is to asses the quality of the sequence, and then to edit the dataset in order to retain only the highest quality sequences for the following analysis.<\/p>\n<p>\u00a0<\/p>\n<p>To this end we will use:\u00a0FastQC - A high throughput sequence QC analysis tool\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>Familiarize your self with the software by looking at their <a href=\"https:\/\/www.bioinformatics.babraham.ac.uk\/projects\/fastqc\/\" target=\"_blank\">web page<\/a>\u00a0- check out the video tutorial!<\/p>"},"is_project":0},{"component_id":"1076314","previous_id":"1076313","original_id":"1068469","guid":"2F01BF2CDF7F49B4A1F69074B1FBB9EE","previous_guid":"22076F8F7DDC49288FE978565EACB103","component_type_id":"6","data_id":null,"data":"DNA quality assessment and assurance","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"DNA quality assessment and assurance"},"is_project":0},{"component_id":"1076315","previous_id":"1076314","original_id":"1068470","guid":"F3BDFC32CC114562BC6E33D8D822B75B","previous_guid":"2F01BF2CDF7F49B4A1F69074B1FBB9EE","component_type_id":"15","data_id":"3647","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"alias fastqc=\/opt\/BioInfo_tools\/FastQC\/fastqc","description":"Create an alias for the command \"fastqc\" by providing it the path to the fastqc command. Using alias tells the computer that when you type fastqc , you expect the computer to look in \/opt\/BioInfo_tools\/FastQC\/fastqc ","os_name":"","os_version":"","can_edit":"1"},"is_project":0},{"component_id":"1076316","previous_id":"1076315","original_id":"1068471","guid":"665D9849442D40A68F3B77DFD073C943","previous_guid":"F3BDFC32CC114562BC6E33D8D822B75B","component_type_id":"15","data_id":"3648","data":"","order_id":"3","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"fastqc seqfile1.fastq","description":"Now that the computer knows where to find the software, you can use a the \"fastqc\" command to assess the quality of your sequence. First you would write the command \"fastqc\" followed by the sequence that you want to analyze \"seqfile1.fastq\"","os_name":"","os_version":"","can_edit":"1"},"is_project":0},{"component_id":"1076317","previous_id":"1076316","original_id":"1068472","guid":"95DFE057B7F7494EBB8D83FB4C06BA09","previous_guid":"665D9849442D40A68F3B77DFD073C943","component_type_id":"26","data_id":"17214","data":"","order_id":"4","name":"Note","data_by_id":"1","type_id":"26","source_data":{"annotation_id":"17214","thread_id":"17214","id":"17214","thread_title":"Comment on step 3 of BIOL 354W - Research Methods in Advance Microbiology","uri":"comment-on-step-3-of-biol-354w-research-methods-in","thread_uri":"comment-on-step-3-of-biol-354w-research-methods-in","step_id":"602964","protocol_uri":"biol-354w-research-methods-in-advance-microbiology-mmjc44n","protocol_name":"BIOL 354W - Research Methods in Advance Microbiology","protocol_name_html":"BIOL 354W - Research Methods in Advance Microbiology","annotation":"<p>You can perform the fastqc file on .fastq files and also in .fastq.gz files or compressed files<\/p>","thread_text":"<p>You can perform the fastqc file on .fastq files and also in .fastq.gz files or compressed files<\/p>","body":"<p>You can perform the fastqc file on .fastq files and also in .fastq.gz files or compressed files<\/p>","is_private":"0","public_protocol":"0","can_edit":1,"can_delete":"1","show_name":"0","created_date":"1515953695","created_on":"1515953695","modified_on":null,"last_updated":null,"profile_image":"\/img\/avatars\/002.png","full_name":"Rosa Leon","affiliation":"Willamette University","username":"rosa-leon","email":"rleonzayas@willamette.edu","pa_useranme":"rosa-leon","comments":[]},"is_project":0},{"component_id":"1076318","previous_id":"1076317","original_id":"1068473","guid":"DEEEC6643188426693E72267D538C382","previous_guid":"95DFE057B7F7494EBB8D83FB4C06BA09","component_type_id":"15","data_id":"3649","data":"","order_id":"5","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"scp -r username@bio-server-2.willamette.edu:\/home\/username\/folder_with_fastqc_file ~\/Desktop\/","description":"Now that the software has run and you have folders and files with date, you should look at the data to assess the quality and make decision about the quality control step that we will work on next. For this you can unzip you folder where there will be detail information about the results, as well as a summary of the run. You can also download the .html file to look at the graphic representation of the run, the same format you experienced on the fasqc web and tutorial","os_name":"","os_version":"","can_edit":"1"},"is_project":0},{"component_id":"1076319","previous_id":"1076318","original_id":"1068474","guid":"D8300FB8AD8F431BB25B081504365F1D","previous_guid":"DEEEC6643188426693E72267D538C382","component_type_id":"26","data_id":"17353","data":"","order_id":"6","name":"Note","data_by_id":"1","type_id":"26","source_data":{"annotation_id":"17353","thread_id":"17353","id":"17353","thread_title":"Comment on step 3 of BIOL 354W - Research Methods in Advance Microbiology","uri":"comment-on-step-3-of-biol-354w-research-methods-in2","thread_uri":"comment-on-step-3-of-biol-354w-research-methods-in2","step_id":"605185","protocol_uri":"biol-354w-research-methods-in-advance-microbiology-mvec63e","protocol_name":"BIOL 354W - Research Methods in Advance Microbiology","protocol_name_html":"BIOL 354W - Research Methods in Advance Microbiology","annotation":"<p>This step most be done from a Terminal window that is looking at your own computer\u00a0and not conected to the\u00a0sever<\/p>","thread_text":"<p>This step most be done from a Terminal window that is looking at your own computer\u00a0and not conected to the\u00a0sever<\/p>","body":"<p>This step most be done from a Terminal window that is looking at your own computer\u00a0and not conected to the\u00a0sever<\/p>","is_private":"0","public_protocol":"1","can_edit":0,"can_delete":"0","show_name":"0","created_date":"1517277640","created_on":"1517277640","modified_on":null,"last_updated":null,"profile_image":"\/img\/avatars\/002.png","full_name":"Rosa Leon","affiliation":"Willamette University","username":"rosa-leon","email":"rleonzayas@willamette.edu","pa_useranme":"rosa-leon","comments":[]},"is_project":0},{"component_id":"1076320","previous_id":"1076319","original_id":"1068475","guid":"EEE0FCD0C4A74F389732218BD6B0D625","previous_guid":"D8300FB8AD8F431BB25B081504365F1D","component_type_id":"26","data_id":"17352","data":"","order_id":"7","name":"Note","data_by_id":"1","type_id":"26","source_data":{"annotation_id":"17352","thread_id":"17352","id":"17352","thread_title":"Comment on step 3 of BIOL 354W - Research Methods in Advance Microbiology","uri":"comment-on-step-3-of-biol-354w-research-methods-in1","thread_uri":"comment-on-step-3-of-biol-354w-research-methods-in1","step_id":"605185","protocol_uri":"biol-354w-research-methods-in-advance-microbiology-mvec63e","protocol_name":"BIOL 354W - Research Methods in Advance Microbiology","protocol_name_html":"BIOL 354W - Research Methods in Advance Microbiology","annotation":"<p>Change to:\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>The first step in analyzing the sequencing data set is to asses the quality of the sequence, and then to edit the dataset in order to retain only the highest quality sequences for the following analysis.\u00a0<\/p>","thread_text":"<p>Change to:\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>The first step in analyzing the sequencing data set is to asses the quality of the sequence, and then to edit the dataset in order to retain only the highest quality sequences for the following analysis.\u00a0<\/p>","body":"<p>Change to:\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>The first step in analyzing the sequencing data set is to asses the quality of the sequence, and then to edit the dataset in order to retain only the highest quality sequences for the following analysis.\u00a0<\/p>","is_private":"1","public_protocol":"1","can_edit":0,"can_delete":"0","show_name":"1","created_date":"1517269607","created_on":"1517269607","modified_on":null,"last_updated":null,"profile_image":"\/img\/avatars\/012.png","full_name":"Marcia Smith","affiliation":null,"username":"marcia-smith","email":"rleonzayas@willamette.edu","pa_useranme":"rosa-leon","comments":[]},"is_project":0}]},{"id":"616232","is_changed":"0","original_id":"613084","is_skipped":"0","is_checked":"0","guid":"C6F0850368CD4E6A9E2BFFEA7185A532","previous_guid":"8915892CBC1B4B7C81CACE9CFA7EC73C","previous_id":"616236","last_modified":"1521673873","components":[{"component_id":"1076321","previous_id":0,"original_id":"1068476","guid":"EA0FA1F1FF3545CC85333D0950354BED","previous_guid":null,"component_type_id":"1","data_id":null,"data":"<p>To assemble our metagenomes we will try two differnet assemblies and compare them. \u00a0We will try IDBA_UD and Megahit assemblies. These is going to be one of the most time intensive process that we will do in the class.<\/p>\n<p>\u00a0<\/p>\n<p>Megahit github -\u00a0https:\/\/github.com\/voutcn\/megahit\/<\/p>\n<p>Megahit article - https:\/\/academic.oup.com\/bioinformatics\/article\/31\/10\/1674\/177884<\/p>\n<p>\u00a0<\/p>\n<p>IDBA_UD -\u00a0https:\/\/github.com\/loneknightpy\/idba<\/p>\n<p>IDBA_UD article -\u00a0https:\/\/academic.oup.com\/bioinformatics\/article\/28\/11\/1420\/266973<\/p>\n<p>\u00a0<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>To assemble our metagenomes we will try two differnet assemblies and compare them. \u00a0We will try IDBA_UD and Megahit assemblies. These is going to be one of the most time intensive process that we will do in the class.<\/p>\n<p>\u00a0<\/p>\n<p>Megahit github -\u00a0https:\/\/github.com\/voutcn\/megahit\/<\/p>\n<p>Megahit article - https:\/\/academic.oup.com\/bioinformatics\/article\/31\/10\/1674\/177884<\/p>\n<p>\u00a0<\/p>\n<p>IDBA_UD -\u00a0https:\/\/github.com\/loneknightpy\/idba<\/p>\n<p>IDBA_UD article -\u00a0https:\/\/academic.oup.com\/bioinformatics\/article\/28\/11\/1420\/266973<\/p>\n<p>\u00a0<\/p>"},"is_project":0},{"component_id":"1076322","previous_id":"1076321","original_id":"1068477","guid":"CBBDCC7906194B5CA31069E219524C8E","previous_guid":"EA0FA1F1FF3545CC85333D0950354BED","component_type_id":"6","data_id":null,"data":"Metagenomic assembly ","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Metagenomic assembly "},"is_project":0},{"component_id":"1076323","previous_id":"1076322","original_id":"1068478","guid":"751EAD71F38D4F13AD027F74E896BAB5","previous_guid":"CBBDCC7906194B5CA31069E219524C8E","component_type_id":"15","data_id":"3650","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"\/opt\/BioInfo_tools\/megahit\/megahit -1 file_R1.fq.gz -2 file_R2.fq.gz -o megahit_out -t 5","description":"file_R1.fq.gz = your trimmed forward or R1 reads\nfile_R2.fq.gz = your trimmed reversed or R2 reads\nmegahit_out = output folder - you can call it what ever you want and you don't need to make it before your run the software\n\nIf you run the command unsuccessfully the first time, it will still make a (mostly)blank \"megahit_out\" folder. Before running the command again, make sure to delete the (mostly)empty \"megahit_out\" folder ( rm -r megahit_out or rmdir megahit_out)","os_name":"","os_version":"","can_edit":"1"},"is_project":0},{"component_id":"1076324","previous_id":"1076323","original_id":"1068479","guid":"4C1CA8C4A826469AAB962910ECE4610B","previous_guid":"751EAD71F38D4F13AD027F74E896BAB5","component_type_id":"15","data_id":"3651","data":"","order_id":"3","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"\/opt\/BioInfo_tools\/idba\/bin\/fq2fa read.fq read.fa","description":"While this is a command we could use, we will not be doing this for the purpose of our assembly. Instead we will use the paired reads R1 and R2 below. You would use this command if you had a single sequence file or were converting your unpaired fastq files to fasta\n\nIDBA series assemblers accept FASTA format reads. FASTQ format reads can be converted by fq2fa program in the package. This is the command to convert one fastq file at a time","os_name":"","os_version":"","can_edit":"1"},"is_project":0},{"component_id":"1076325","previous_id":"1076324","original_id":"1068480","guid":"6AE88B013439446BA0EF153E3889C7C6","previous_guid":"4C1CA8C4A826469AAB962910ECE4610B","component_type_id":"15","data_id":"3652","data":"","order_id":"4","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"\/opt\/BioInfo_tools\/idba\/bin\/fq2fa --merge --filter read_R1.fq read_R2.fq merged_reads.fa","description":"IDBA-UD requires paired-end reads stored in the same FASTA file. A pair of reads should be in two consecutive lines. If not, please use fq2fa to merge two FASTQ read files to single file\n\nread_R1.fq = your uncompressed forward or R1 sequence file\nread_R2.fq = your uncompressed reverse or R2 sequence file\nmerged_reads.fa = a name you give your merged fasta e.g. 3A_trimmed_merged_R1R2.fasta\n\nWhile you could use the command above to convert each individual file to fasta format and then merger\/concatenate the files, IDBA provides a was to do both at the same time. The fq2fa command will convert and merge your files all at once. \n\nIMPORTANT NOTE:\nTo use the IDBA commands your sequences need to be uncompressed, or the cannot be in a .gz format. To uncompress your sequences you can use the gunzip commands e.g. gunzip read_R1.fq.gz ","os_name":"","os_version":"","can_edit":"1"},"is_project":0},{"component_id":"1076326","previous_id":"1076325","original_id":"1068481","guid":"406B1228841342B39FDF0FF8244034EE","previous_guid":"6AE88B013439446BA0EF153E3889C7C6","component_type_id":"15","data_id":"3653","data":"","order_id":"5","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"\/opt\/BioInfo_tools\/idba\/bin\/idba_ud -r merged_reads.fa -o output_dir --num_threads 5","description":"Once the read files are converted into fasta and in consecutive order then the assembly can be run\n\nmerged_reads.fa = your new generated merged fasta sequences files exactly as you called them\noutput_dir = a folder to store the assembly output, you choose the folder name\n","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"616233","is_changed":"0","original_id":"613085","is_skipped":"0","is_checked":"0","guid":"396DB9278EB447D9B14FD78365C9C0AD","previous_guid":"C6F0850368CD4E6A9E2BFFEA7185A532","previous_id":"616232","last_modified":"1521673873","components":[{"component_id":"1076327","previous_id":0,"original_id":"1068482","guid":"2B72D965955246CBB4EC948111E659E0","previous_guid":null,"component_type_id":"6","data_id":null,"data":"Assessing the quality of the assemblies","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Assessing the quality of the assemblies"},"is_project":0},{"component_id":"1076329","previous_id":"1076327","original_id":"1068484","guid":"1C3887AFF59847DB99C238E55E7B2ADC","previous_guid":"2B72D965955246CBB4EC948111E659E0","component_type_id":"1","data_id":null,"data":"<p>We can investigate assembly statistics to compare which assembly is best between the two assemblies utilized. For this we can use a software called Quast.<\/p>\n<p>\u00a0<\/p>\n<p>Metrics based only on contigs:<\/p>\n<ul>\n<li>Number of large contigs (i.e., longer than 500 bp) and total length of them.<\/li>\n<li>Length of the largest contig.<\/li>\n<li>N50 (length of a contig, such that all the contigs of at least the same length together cover at least 50% of the assembly).<\/li>\n<li>Number of predicted genes, discovered either by GeneMark.hmm (for prokaryotes), GeneMark-ES or GlimmerHMM (for eukaryotes), or MetaGeneMark (for metagenomes).<\/li>\n<\/ul>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>We can investigate assembly statistics to compare which assembly is best between the two assemblies utilized. For this we can use a software called Quast.<\/p>\n<p>\u00a0<\/p>\n<p>Metrics based only on contigs:<\/p>\n<ul>\n<li>Number of large contigs (i.e., longer than 500 bp) and total length of them.<\/li>\n<li>Length of the largest contig.<\/li>\n<li>N50 (length of a contig, such that all the contigs of at least the same length together cover at least 50% of the assembly).<\/li>\n<li>Number of predicted genes, discovered either by GeneMark.hmm (for prokaryotes), GeneMark-ES or GlimmerHMM (for eukaryotes), or MetaGeneMark (for metagenomes).<\/li>\n<\/ul>"},"is_project":0},{"component_id":"1076328","previous_id":"1076329","original_id":"1068483","guid":"2440BEF986CB462497C2C907FE0FB98D","previous_guid":"1C3887AFF59847DB99C238E55E7B2ADC","component_type_id":"15","data_id":"3654","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"\/opt\/BioInfo_tools\/quast\/metaquast.py contig.fa --gene-finding -t  5","description":"QUAST evaluates genome assemblies by computing various metrics. \n","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"616234","is_changed":"0","original_id":"613086","is_skipped":"0","is_checked":"0","guid":"DBEB3A1059564823A9A8EE1717FE89E0","previous_guid":"396DB9278EB447D9B14FD78365C9C0AD","previous_id":"616233","last_modified":"1521673873","components":[{"component_id":"1076330","previous_id":0,"original_id":"1068485","guid":"AFCC7170958A4F4585A86C59D405C156","previous_guid":null,"component_type_id":"6","data_id":null,"data":"Binning assembled metagenomes with MaxBin","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Binning assembled metagenomes with MaxBin"},"is_project":0},{"component_id":"1076331","previous_id":"1076330","original_id":"1068486","guid":"F37D4E9A166B43AE9513F6A4747D239A","previous_guid":"AFCC7170958A4F4585A86C59D405C156","component_type_id":"1","data_id":null,"data":"<p>MaxBin is a software for binning assembled metagenomic sequences based on an Expectation-Maximization algorithm.<\/p>\n<p>\u00a0<\/p>\n<p>Users provide the assembled metagenomic sequences and the reads coverage information or sequencing reads. MaxBin will report genome-related statistics, including estimated completeness, GC content and genome size in the binning summary page.<\/p>\n<p>\u00a0<\/p>\n<p>MaxBin article -\u00a0https:\/\/academic.oup.com\/bioinformatics\/article\/32\/4\/605\/1744462<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>MaxBin is a software for binning assembled metagenomic sequences based on an Expectation-Maximization algorithm.<\/p>\n<p>\u00a0<\/p>\n<p>Users provide the assembled metagenomic sequences and the reads coverage information or sequencing reads. MaxBin will report genome-related statistics, including estimated completeness, GC content and genome size in the binning summary page.<\/p>\n<p>\u00a0<\/p>\n<p>MaxBin article -\u00a0https:\/\/academic.oup.com\/bioinformatics\/article\/32\/4\/605\/1744462<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>"},"is_project":0},{"component_id":"1076332","previous_id":"1076331","original_id":"1068487","guid":"8230C1E50D2A429DB30D237E1D0AADE2","previous_guid":"F37D4E9A166B43AE9513F6A4747D239A","component_type_id":"15","data_id":"3655","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"perl \/opt\/BioInfo_tools\/MaxBin-2.2.4\/run_MaxBin.pl -contig \"assembled_contigs.fa\" -reads \"interleaved reads fasta\" -out \"out directory\" -thread 5","description":"MaxBin requires the assembled contains file and also the file that contains the sequence reads\n\nassembled_contigs.fa = your contigs file (remember to add the full path if you are in a different directory)\nconcatenated reads fasta = the path to your reads, these reads most all be in one file and concatenate ( or paired R1 followed by R2 reads). This you can get from your IDBA fq2fa run\nout directory = a directory that you create to save your bins\n","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"616235","is_changed":"0","original_id":"613087","is_skipped":"0","is_checked":"0","guid":"BB47A263F64744C7983FF371BA9C7DF3","previous_guid":"DBEB3A1059564823A9A8EE1717FE89E0","previous_id":"616234","last_modified":"1521673873","components":[{"component_id":"1076333","previous_id":0,"original_id":"1068488","guid":"C60B980C4AE84831A43898E1E9E3A039","previous_guid":null,"component_type_id":"6","data_id":null,"data":"Assessing the quality of your bins via CheckM","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Assessing the quality of your bins via CheckM"},"is_project":0},{"component_id":"1076334","previous_id":"1076333","original_id":"1068489","guid":"A45617290A8746FEB609B14C96393316","previous_guid":"C60B980C4AE84831A43898E1E9E3A039","component_type_id":"1","data_id":null,"data":"<p>Checkm article -\u00a0http:\/\/genome.cshlp.org\/content\/25\/7\/1043<\/p>\n<p>\u00a0<\/p>\n<p>Also check out the websit for information on CheckM - <a href=\"https:\/\/github.com\/Ecogenomics\/CheckM\/wiki\" target=\"_blank\">CheckM website<\/a><\/p>\n<p>\u00a0<\/p>\n<p>Befor running Checkm the software pplacer must be included in the PATH by addind\u00a0<\/p>\n<p>export PATH=\"\/opt\/anaconda3\/bin:$PATH\" to the .bashrc file in your home directory under the\u00a0<\/p>\n<p># User specific aliases and functions section.\u00a0<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Checkm article -\u00a0http:\/\/genome.cshlp.org\/content\/25\/7\/1043<\/p>\n<p>\u00a0<\/p>\n<p>Also check out the websit for information on CheckM - <a href=\"https:\/\/github.com\/Ecogenomics\/CheckM\/wiki\" target=\"_blank\">CheckM website<\/a><\/p>\n<p>\u00a0<\/p>\n<p>Befor running Checkm the software pplacer must be included in the PATH by addind\u00a0<\/p>\n<p>export PATH=\"\/opt\/anaconda3\/bin:$PATH\" to the .bashrc file in your home directory under the\u00a0<\/p>\n<p># User specific aliases and functions section.\u00a0<\/p>"},"is_project":0},{"component_id":"1076335","previous_id":"1076334","original_id":"1068490","guid":"4327C16395824BD99430AE9A715A8B49","previous_guid":"A45617290A8746FEB609B14C96393316","component_type_id":"15","data_id":"3656","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"nano .bashrc\n\n##copy and paste\n\nUser specific aliases and functions \nexport PATH=\"\/opt\/anaconda3\/bin:$PATH\" \n\n## Save file changes by \"control + O\" and then \"control + X\", then close the window and log in again to the server","description":"Add export PATH=\"\/opt\/anaconda3\/bin:$PATH\"  underneath the section # User specific aliases and functions by using nano to modify the file .bashrc in you home directory","os_name":"","os_version":"","can_edit":"1"},"is_project":0},{"component_id":"1076336","previous_id":"1076335","original_id":"1068491","guid":"3B968BF6A5EA437493648A9946D23333","previous_guid":"4327C16395824BD99430AE9A715A8B49","component_type_id":"15","data_id":"3657","data":"","order_id":"3","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"\/usr\/bin\/checkm lineage_wf -x fasta .\/bins_folder .\/checkm_out_folder -t 5","description":"CheckM will assess the quality of each of your bins. All bins most be in the same directory\/folder. All bins most have a .fasta ending \n\nbins_folder = the path to the folder where your bins are located","os_name":"","os_version":"","can_edit":"1"},"is_project":0},{"component_id":"1076337","previous_id":"1076336","original_id":"1068492","guid":"FE7D90DBA0B2476C8A591FE3429152BC","previous_guid":"3B968BF6A5EA437493648A9946D23333","component_type_id":"15","data_id":"3658","data":"","order_id":"4","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"\/usr\/bin\/checkm qa lineage.ms . -o 2","description":"This command will help you generate an expanded information table about each of your bins. Run this command from within the directory where your checkm data is located\n\ncopy the table that this command generated onto an excel sheet and analyze to then run VizBin","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"616236","is_changed":"0","original_id":"613088","is_skipped":"0","is_checked":"0","guid":"8915892CBC1B4B7C81CACE9CFA7EC73C","previous_guid":"A130B08D986F4CE9BEE2CB8A1F4D30F4","previous_id":"616231","last_modified":"1521673873","components":[{"component_id":"1076338","previous_id":0,"original_id":"1068493","guid":"736EB3A20C784C309209C7D8A09C05F4","previous_guid":null,"component_type_id":"6","data_id":null,"data":"Assuring DNA sequencing quality using Trimmomatic","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Assuring DNA sequencing quality using Trimmomatic"},"is_project":0},{"component_id":"1076339","previous_id":"1076338","original_id":"1068494","guid":"314F58CCEDEE4DE5BCE5E8383BECDEAC","previous_guid":"736EB3A20C784C309209C7D8A09C05F4","component_type_id":"1","data_id":null,"data":"<p>Trimmomatic: A flexible read trimming tool for Illumina NGS data (<a href=\"http:\/\/www.usadellab.org\/cms\/?page=trimmomatic\" target=\"_blank\">Website<\/a>\u00a0)<\/p>\n<p>\u00a0<\/p>\n<p>Description<\/p>\n<p>Trimmomatic performs a variety of useful trimming tasks for illumina paired-end and single ended data.The selection of trimming steps and their associated parameters are supplied on the command line.<\/p>\n<p>The current trimming steps are:<\/p>\n<ul>\n<li>ILLUMINACLIP: Cut adapter and other illumina-specific sequences from the read.<\/li>\n<li>SLIDINGWINDOW: Perform a sliding window trimming, cutting once the average quality within the window falls below a threshold.<\/li>\n<li>LEADING: Cut bases off the start of a read, if below a threshold quality<\/li>\n<li>TRAILING: Cut bases off the end of a read, if below a threshold quality<\/li>\n<li>CROP: Cut the read to a specified length<\/li>\n<li>HEADCROP: Cut the specified number of bases from the start of the read<\/li>\n<li>MINLEN: Drop the read if it is below a specified length<\/li>\n<li>TOPHRED33: Convert quality scores to Phred-33<\/li>\n<li>TOPHRED64: Convert quality scores to Phred-64<\/li>\n<\/ul>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Trimmomatic: A flexible read trimming tool for Illumina NGS data (<a href=\"http:\/\/www.usadellab.org\/cms\/?page=trimmomatic\" target=\"_blank\">Website<\/a>\u00a0)<\/p>\n<p>\u00a0<\/p>\n<p>Description<\/p>\n<p>Trimmomatic performs a variety of useful trimming tasks for illumina paired-end and single ended data.The selection of trimming steps and their associated parameters are supplied on the command line.<\/p>\n<p>The current trimming steps are:<\/p>\n<ul>\n<li>ILLUMINACLIP: Cut adapter and other illumina-specific sequences from the read.<\/li>\n<li>SLIDINGWINDOW: Perform a sliding window trimming, cutting once the average quality within the window falls below a threshold.<\/li>\n<li>LEADING: Cut bases off the start of a read, if below a threshold quality<\/li>\n<li>TRAILING: Cut bases off the end of a read, if below a threshold quality<\/li>\n<li>CROP: Cut the read to a specified length<\/li>\n<li>HEADCROP: Cut the specified number of bases from the start of the read<\/li>\n<li>MINLEN: Drop the read if it is below a specified length<\/li>\n<li>TOPHRED33: Convert quality scores to Phred-33<\/li>\n<li>TOPHRED64: Convert quality scores to Phred-64<\/li>\n<\/ul>"},"is_project":0},{"component_id":"1076340","previous_id":"1076339","original_id":"1068495","guid":"A6FE25A8CC8142A8A7CE49BCE370AF90","previous_guid":"314F58CCEDEE4DE5BCE5E8383BECDEAC","component_type_id":"15","data_id":"3659","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":" java -jar \/opt\/BioInfo_tools\/Trimmomatic-0.36\/trimmomatic-0.36.jar PE -threads 5 -phred33 input_forward.fq.gz input_reverse.fq.gz output_forward_paired.fq.gz output_forward_unpaired.fq.gz output_reverse_paired.fq.gz output_reverse_unpaired.fq.gz ILLUMINACLIP:\/opt\/BioInfo_tools\/Trimmomatic-0.36\/adapters\/TruSeq3-PE.fa:2:30:10 LEADING:15 TRAILING:15 SLIDINGWINDOW:4:15 MINLEN:36","description":"input_forward.fq.gz = \" the exact name of your forward or R1 sequence file\" input_reverse.fq.gz = \" the exact name of your forward or R2 sequence file\"\noutput_forward_paired.fq.gz  = write in what you would like the output to be called Eg. 3A_trimmed_R1_paired.fastq.gz\"\noutput_forward_unpaired.fq.gz =  write in what you would like the output to be called Eg. 3A_trimmed_R1_unpaired.fastq.gz\"\noutput_reverse_paired.fq.gz  = write in what you would like the output to be called Eg. 3A_trimmed_R2_paired.fastq.gz\"\noutput_reverse_unpaired.fq.gz  = write in what you would like the output to be called Eg. 3A_trimmed_R2_unpaired.fastq.gz\"\n\nTry to run this command as it is with quality of Q15 (SLIDINGWINDOW:4:15) as currently stated in the command and then with Q30 (SLIDINGWINDOW:4:30). Record the number % of out put sequences per each.","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"616237","is_changed":"0","original_id":"613089","is_skipped":"0","is_checked":"0","guid":"8016B25FC83240D5BCCF5C219A3C3C53","previous_guid":"BB47A263F64744C7983FF371BA9C7DF3","previous_id":"616235","last_modified":"1521673873","components":[{"component_id":"1076341","previous_id":0,"original_id":"1068496","guid":"399503B5FD7948DBB972520BEB7858DD","previous_guid":null,"component_type_id":"1","data_id":null,"data":"<p>\u00a0VizBin is a java software that calculates kmer composition and creats a pictographical output that shows the similatity between contigs realted to how close they are postition to each other. We will use VizBin to help us de-contaminate out bins<\/p>\n<p>\u00a0<\/p>\n<p>VizBin will generate a visualization window. Each point represents a genomic fragment (by default of length &gt;= 1,000nt).\u00a0VizBin is designed with the user in mind. All that is needed is a fasta file containing the sequences of interest. A step-by-step guide on using VizBin - including a description of loading the data, selecting points, and exporting the sequences represented by the selected points - is provided on the tutorial page of <a href=\"https:\/\/github.com\/claczny\/VizBin\/wiki\/Tutorial\" target=\"_blank\">VizBin's github wiki<\/a><\/p>\n<p>\u00a0<\/p>\n<p>In order to run VizBin with you data you must download you bins fasta files onto your desktop.<\/p>\n<p>\u00a0<\/p>\n<p>To download go to the\u00a0<a href=\"http:\/\/claczny.github.io\/VizBin\/\" target=\"_blank\">VizBin page<\/a><\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>\u00a0VizBin is a java software that calculates kmer composition and creats a pictographical output that shows the similatity between contigs realted to how close they are postition to each other. We will use VizBin to help us de-contaminate out bins<\/p>\n<p>\u00a0<\/p>\n<p>VizBin will generate a visualization window. Each point represents a genomic fragment (by default of length &gt;= 1,000nt).\u00a0VizBin is designed with the user in mind. All that is needed is a fasta file containing the sequences of interest. A step-by-step guide on using VizBin - including a description of loading the data, selecting points, and exporting the sequences represented by the selected points - is provided on the tutorial page of <a href=\"https:\/\/github.com\/claczny\/VizBin\/wiki\/Tutorial\" target=\"_blank\">VizBin's github wiki<\/a><\/p>\n<p>\u00a0<\/p>\n<p>In order to run VizBin with you data you must download you bins fasta files onto your desktop.<\/p>\n<p>\u00a0<\/p>\n<p>To download go to the\u00a0<a href=\"http:\/\/claczny.github.io\/VizBin\/\" target=\"_blank\">VizBin page<\/a><\/p>"},"is_project":0},{"component_id":"1076342","previous_id":"1076341","original_id":"1068497","guid":"31FCB580515C436EB97BAB422C1EE4EE","previous_guid":"399503B5FD7948DBB972520BEB7858DD","component_type_id":"6","data_id":null,"data":"Use VizBin to further curate your bins","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Use VizBin to further curate your bins"},"is_project":0}]},{"id":"616238","is_changed":"0","original_id":"613090","is_skipped":"0","is_checked":"0","guid":"9582C21643654FAFA38730ABD8383D4D","previous_guid":"8016B25FC83240D5BCCF5C219A3C3C53","previous_id":"616237","last_modified":"1521673873","components":[{"component_id":"1076343","previous_id":0,"original_id":"1068498","guid":"C8AC258702DD4DB4B87E2A9116AF1F95","previous_guid":null,"component_type_id":"1","data_id":null,"data":"<p>Phylosift software searches for single copy marker genes and finds thier taxonomic classification<\/p>\n<p>\u00a0<\/p>\n<p>Before running this command take a moment to learn about the sorftware at the <a href=\"https:\/\/phylosift.wordpress.com\/tutorials\/running-phylosift\/illumina-tutorial\/\" target=\"_blank\">Phylosift webpage<\/a><\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Phylosift software searches for single copy marker genes and finds thier taxonomic classification<\/p>\n<p>\u00a0<\/p>\n<p>Before running this command take a moment to learn about the sorftware at the <a href=\"https:\/\/phylosift.wordpress.com\/tutorials\/running-phylosift\/illumina-tutorial\/\" target=\"_blank\">Phylosift webpage<\/a><\/p>"},"is_project":0},{"component_id":"1076344","previous_id":"1076343","original_id":"1068499","guid":"BAC15BE29AC3444680A13504258FD88B","previous_guid":"C8AC258702DD4DB4B87E2A9116AF1F95","component_type_id":"6","data_id":null,"data":"Perform taxonomic identification using Phylosift","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Perform taxonomic identification using Phylosift"},"is_project":0},{"component_id":"1076345","previous_id":"1076344","original_id":"1068500","guid":"1A8895F802384F09AF2991C7220CE8E6","previous_guid":"BAC15BE29AC3444680A13504258FD88B","component_type_id":"15","data_id":"3660","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"\/usr\/local\/phylosift_v1.0.1\/bin\/phylosift all your_bin.fasta --threads 3","description":"To run Phylosfit you only need to have change your_bin.fasta for the files (and path if required) for each of your individual bins","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"616239","is_changed":"0","original_id":"613091","is_skipped":"0","is_checked":"0","guid":"D71EAA2B6CB148F597BA3C241D818ADB","previous_guid":"9582C21643654FAFA38730ABD8383D4D","previous_id":"616238","last_modified":"1521673873","components":[{"component_id":"1076346","previous_id":0,"original_id":"1068501","guid":"A35393513767490C85235930AA0A00C8","previous_guid":null,"component_type_id":"1","data_id":null,"data":"<p>Learn about how to set up a prokka run and what the outputs are by looking at the git hub <a href=\"https:\/\/github.com\/tseemann\/prokka#output-files\" target=\"_blank\">prokka webpage<\/a><\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Learn about how to set up a prokka run and what the outputs are by looking at the git hub <a href=\"https:\/\/github.com\/tseemann\/prokka#output-files\" target=\"_blank\">prokka webpage<\/a><\/p>"},"is_project":0},{"component_id":"1076347","previous_id":"1076346","original_id":"1068502","guid":"3BF4B753DCB64C31B0BC42187BCE0508","previous_guid":"A35393513767490C85235930AA0A00C8","component_type_id":"6","data_id":null,"data":"Prokka - software for annotations","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Prokka - software for annotations"},"is_project":0},{"component_id":"1076348","previous_id":"1076347","original_id":"1068503","guid":"3991E6399FA946CFAF1E6CE12E3CB4A9","previous_guid":"3BF4B753DCB64C31B0BC42187BCE0508","component_type_id":"15","data_id":"3661","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"First export the executable files in the bin directory :\nexport PATH=$PATH:\/opt\/BioInfo_tools\/prokka-1.11\/bin\/\n\nThen run PROKKA:\n\/opt\/BioInfo_tools\/prokka-1.11\/bin\/prokka contigs.fasta","description":"We will annotated our curated bins using PROKKA","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"616240","is_changed":1,"original_id":"613092","is_skipped":"0","is_checked":"0","guid":"AE3B3AC50A47462E94A4D41B2B647EDD","previous_guid":"D71EAA2B6CB148F597BA3C241D818ADB","previous_id":"616239","last_modified":"1521681444","components":[{"component_id":"1076349","previous_id":0,"original_id":"1068504","guid":"52000A7BC928452DB79CC68F9F7FB436","previous_guid":null,"component_type_id":"6","data_id":null,"data":"Compare genomes to various databases","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Compare genomes to various databases"},"is_project":0},{"component_id":"1076350","previous_id":"1076349","original_id":"1068505","guid":"4C418E91CD96446AA95A85FBC3FAEEB7","previous_guid":"52000A7BC928452DB79CC68F9F7FB436","component_type_id":"1","data_id":null,"data":"<p><span style=\"font-weight: 400;\">In order to assess the metabolic potential of you Metagenome Assembled Genomes (MAGs) we will compare their predicted proteins against a few different databases. These databases will provide information about what pathways or protein groups your annotated proteins belong to. This will help you assess what kind of metabolic potential your organisms possess.<\/span><\/p>\n<p>\u00a0<\/p>\n<p><span style=\"font-weight: 400;\">We will start by taking our annotated proteins and running it in the BlastKoala web platform. http:\/\/www.kegg.jp\/blastkoala\/ <\/span><\/p>\n<p><span style=\"font-weight: 400;\">Use your PROKKA.faa file to copy the protein annotations and past on the box label Enter FASTA sequences or upload the PROKKA.faa file. Add you email so they can keep you update on the progress of your analysis.<\/span><\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>\n<p><span style=\"font-weight: 400;\">Once you submit your PROKKA.faa and receive an email that your results are ready to view. Go to the View tab on top of the pie chart and press download details to get information about what metabolic pathway your proteins are associated with. After doing this, go back to the pie chart webpage and click on the Reconstruct Modules link at the bottom of the page. This will show metabolic pathways and in the detailed tab will show you which of your proteins fall within each pathways. Copy this and use as a text or save as PDF (by using Safari web browser)<\/span><\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><span style=\"font-weight: 400;\">In order to assess the metabolic potential of you Metagenome Assembled Genomes (MAGs) we will compare their predicted proteins against a few different databases. These databases will provide information about what pathways or protein groups your annotated proteins belong to. This will help you assess what kind of metabolic potential your organisms possess.<\/span><\/p>\n<p>\u00a0<\/p>\n<p><span style=\"font-weight: 400;\">We will start by taking our annotated proteins and running it in the BlastKoala web platform. http:\/\/www.kegg.jp\/blastkoala\/ <\/span><\/p>\n<p><span style=\"font-weight: 400;\">Use your PROKKA.faa file to copy the protein annotations and past on the box label Enter FASTA sequences or upload the PROKKA.faa file. Add you email so they can keep you update on the progress of your analysis.<\/span><\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>\n<p><span style=\"font-weight: 400;\">Once you submit your PROKKA.faa and receive an email that your results are ready to view. Go to the View tab on top of the pie chart and press download details to get information about what metabolic pathway your proteins are associated with. After doing this, go back to the pie chart webpage and click on the Reconstruct Modules link at the bottom of the page. This will show metabolic pathways and in the detailed tab will show you which of your proteins fall within each pathways. Copy this and use as a text or save as PDF (by using Safari web browser)<\/span><\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>"},"is_project":0}],"available_protocols":["10676"]},{"id":"616241","is_changed":"0","original_id":"613093","is_skipped":"0","is_checked":"0","guid":"C37D65BC2498448682E8545B433C7ED5","previous_guid":"472CE44D852C4884A3CFFB03D67382B1","previous_id":"616242","last_modified":"1521673873","components":[{"component_id":"1076351","previous_id":0,"original_id":"1068506","guid":"856422B6E229437882EE81AAE255449C","previous_guid":null,"component_type_id":"6","data_id":null,"data":"Compare genomes to various databases","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Compare genomes to various databases"},"is_project":0},{"component_id":"1076352","previous_id":"1076351","original_id":"1068507","guid":"DB0CC816CCA34361B021A176DDB04416","previous_guid":"856422B6E229437882EE81AAE255449C","component_type_id":"1","data_id":null,"data":"<p>Compare annotated proteins to the Cluster of Orthologous Genes (COG)\u00a0<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Compare annotated proteins to the Cluster of Orthologous Genes (COG)\u00a0<\/p>"},"is_project":0},{"component_id":"1076353","previous_id":"1076352","original_id":"1068508","guid":"9C96D26A81C04BFEACDDF9A0EAF1C1B0","previous_guid":"DB0CC816CCA34361B021A176DDB04416","component_type_id":"15","data_id":"3662","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"rpsblast -query PROKKA.faa_file (include the path if necessary)  -db \/opt\/BioInfo_tools\/Cog -out output_file.out -evalue 0.00001 -outfmt \"6 qseqid sseqid evalue pident score qstart qend sstart send length slen\" -max_target_seqs 1","description":"","os_name":"","os_version":"","can_edit":"1"},"is_project":0},{"component_id":"1076354","previous_id":"1076353","original_id":"1068509","guid":"F696DDF576354F64AB99ADF9DD5DA97D","previous_guid":"9C96D26A81C04BFEACDDF9A0EAF1C1B0","component_type_id":"15","data_id":"3663","data":"","order_id":"3","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"perl \/opt\/BioInfo_tools\/cdd2cog.pl -r output_file.out -c \/opt\/BioInfo_tools\/COG\/cddid.tbl -f \/opt\/BioInfo_tools\/COG\/fun.txt -w \/opt\/BioInfo_tools\/COG\/whog -a","description":"Once we have generated a  blast output, which provides a comparison of our annotated bins to the COG database we can use the cdd2cog perl script to count and parse that information for us","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"616242","is_changed":"0","original_id":"613094","is_skipped":"0","is_checked":"0","guid":"472CE44D852C4884A3CFFB03D67382B1","previous_guid":"AE3B3AC50A47462E94A4D41B2B647EDD","previous_id":"616240","last_modified":"1521673873","components":[{"component_id":"1076355","previous_id":0,"original_id":"1068510","guid":"92BE43D46A7F411393267792F22B6885","previous_guid":null,"component_type_id":"6","data_id":null,"data":"Compare genomes to various databases","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Compare genomes to various databases"},"is_project":0},{"component_id":"1076357","previous_id":"1076355","original_id":"1068512","guid":"73EE0C5F2F164164B2E29A55FD674A94","previous_guid":"92BE43D46A7F411393267792F22B6885","component_type_id":"1","data_id":null,"data":"<p>In order to run the next few steps we need to add another set of software to our path<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>In order to run the next few steps we need to add another set of software to our path<\/p>"},"is_project":0},{"component_id":"1076356","previous_id":"1076357","original_id":"1068511","guid":"828C89B871474ADDAD1ECE4429B87A87","previous_guid":"73EE0C5F2F164164B2E29A55FD674A94","component_type_id":"15","data_id":"3664","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"nano .bashrc\n\n##copy and paste\n\nUser specific aliases and functions \nexport PATH=$PATH:\/opt\/ncbi-blast-2.7.1+\/bin\/\n\n## Save file changes by \"control + O\" and then \"control + X\", then close the window and log in again to the server","description":"This step is crucial to successfully run the next few steps ","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"616243","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"0ACB1437D8B44FD790C03132D927F9CF","previous_guid":"C37D65BC2498448682E8545B433C7ED5","previous_id":"616241","last_modified":"1521676812","components":[{"component_id":"1076359","previous_id":0,"original_id":"0","guid":"34F9FAE76CCC410DA11E12D642D151AE","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Running Phylosift on metagenomic reads using tmux","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Running Phylosift on metagenomic reads using tmux"},"is_project":0},{"component_id":"1076358","previous_id":"1076359","original_id":"0","guid":"4262ACC88F874A059FDA096375C729DC","previous_guid":"34F9FAE76CCC410DA11E12D642D151AE","component_type_id":"1","data_id":null,"data":"<p><span style=\"font-weight: 400;\">In order to assess the community composition of the whole metagenome we can use phylosift to find short pieces of markers in our reads. While running Phylosift with out bins\/genomes takes maybe one to a few hours running Phylosift with millions of reads will take multiple hours to days. For this reason we need to use a a window manager software call tmux . tmux will allow us to set up a process\/job to run in a parallel window and exit the window while the process keeps running in the background. <\/span><\/p>\n<p>\u00a0<\/p>\n<p><span style=\"font-weight: 400;\">In order to run Phylosift using tmux :<\/span><\/p>\n<p>\u00a0<\/p>\n<p><span style=\"font-weight: 400;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Type =\u00a0tmux new -s session-name \u00a0 \u00a0 \u00a0 \u00a0example of a session-name - phylosft_3B<\/span><\/p>\n<p><span style=\"font-weight: 400;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- On the new window write your script command for Phylosift<\/span><\/p>\n<p><span style=\"font-weight: 400;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\/usr\/local\/phylosift_v1.0.1\/bin\/phylosift all --paired R1.fastq R2.fastq <\/span><\/p>\n<p><span style=\"font-weight: 400;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Verify that is running by typing =\u00a0tmux ls<\/span><\/p>\n<p><span style=\"font-weight: 400;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Press together the keys \u00a0control+b+z in your keyboard to disconnect from the parallel window <\/span><\/p>\n<p><span style=\"font-weight: 400;\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0- To go back to that window type \u00a0= tmux a -t\u00a0session-name \u00a0 \u00a0 for example\u00a0tmux a -t\u00a0phylosft_3B<\/span><\/p>\n<p><span style=\"font-weight: 400;\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0- If something went terrible wrong you can kill your parallel window by typing =\u00a0tmux kill-session -t\u00a0phylosft_3B<\/span><\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><span style=\"font-weight: 400;\">In order to assess the community composition of the whole metagenome we can use phylosift to find short pieces of markers in our reads. While running Phylosift with out bins\/genomes takes maybe one to a few hours running Phylosift with millions of reads will take multiple hours to days. For this reason we need to use a a window manager software call tmux . tmux will allow us to set up a process\/job to run in a parallel window and exit the window while the process keeps running in the background. <\/span><\/p>\n<p>\u00a0<\/p>\n<p><span style=\"font-weight: 400;\">In order to run Phylosift using tmux :<\/span><\/p>\n<p>\u00a0<\/p>\n<p><span style=\"font-weight: 400;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Type =\u00a0tmux new -s session-name \u00a0 \u00a0 \u00a0 \u00a0example of a session-name - phylosft_3B<\/span><\/p>\n<p><span style=\"font-weight: 400;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- On the new window write your script command for Phylosift<\/span><\/p>\n<p><span style=\"font-weight: 400;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\/usr\/local\/phylosift_v1.0.1\/bin\/phylosift all --paired R1.fastq R2.fastq <\/span><\/p>\n<p><span style=\"font-weight: 400;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Verify that is running by typing =\u00a0tmux ls<\/span><\/p>\n<p><span style=\"font-weight: 400;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Press together the keys \u00a0control+b+z in your keyboard to disconnect from the parallel window <\/span><\/p>\n<p><span style=\"font-weight: 400;\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0- To go back to that window type \u00a0= tmux a -t\u00a0session-name \u00a0 \u00a0 for example\u00a0tmux a -t\u00a0phylosft_3B<\/span><\/p>\n<p><span style=\"font-weight: 400;\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0- If something went terrible wrong you can kill your parallel window by typing =\u00a0tmux kill-session -t\u00a0phylosft_3B<\/span><\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>"},"is_project":0}]},{"id":"616244","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"2ED6C7ED8C0F472AB0851C15723703CE","previous_guid":"0ACB1437D8B44FD790C03132D927F9CF","previous_id":"616243","last_modified":"1521681012","components":[{"component_id":"1076361","previous_id":0,"original_id":"0","guid":"5CC1EDC428F1424FA6E37C1807095153","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Running PROKKA and COG on your metagenomic contigs","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Running PROKKA and COG on your metagenomic contigs"},"is_project":0},{"component_id":"1076360","previous_id":"1076361","original_id":"0","guid":"F7D6E1F4EEAC48FCAA1EEA3D7165D600","previous_guid":"5CC1EDC428F1424FA6E37C1807095153","component_type_id":"1","data_id":null,"data":"<p><span style=\"font-weight: 400;\">Given that we decided that we will be working with megahit assemblies - we will use the final_contigs.fa file to run both PROKKA on the full metagenome ( as opposed to bins recovered from the metagenome) and COG on the full metagenome.<\/span><\/p>\n<p>\u00a0<\/p>\n<p><span style=\"font-weight: 400;\">To do this use the same commands as above for both PROKKA and COG, but change the fasta file to the final_contigs.fa from your whole metagenome<\/span><\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><span style=\"font-weight: 400;\">Given that we decided that we will be working with megahit assemblies - we will use the final_contigs.fa file to run both PROKKA on the full metagenome ( as opposed to bins recovered from the metagenome) and COG on the full metagenome.<\/span><\/p>\n<p>\u00a0<\/p>\n<p><span style=\"font-weight: 400;\">To do this use the same commands as above for both PROKKA and COG, but change the fasta file to the final_contigs.fa from your whole metagenome<\/span><\/p>"},"is_project":0}]}]}