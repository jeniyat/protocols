{"uri":"hello-bash-jvgcn3w","version_id":"0","protocol_name":"Hello (bash)","protocol_name_html":"Hello (bash)","is_prepublished":"0","can_edit":"0","parent_id":null,"api_version":"1","is_new_mode":"0","last_modified":"1517637603","type_id":"1","link":null,"fork_id":"","public_fork_note":"","number_of_steps":"2","has_versions":"0","first_published_date":"1505257407","publish_date":"2017-09-12 23:03:27","documents":null,"have_protocol_in_step":"0","is_protocol_in_step":"0","vendor_name":"Contributed by users","vendor_link":"https:\/\/www.protocols.io","vendor_logo":"\/img\/vendors\/1.png","mod_mins":"-45","mod_secs":"1","description":null,"is_bookmarked":"0","can_reassign":"1","before_start":null,"has_guidelines":"0","materials":[],"warning":null,"version_class":"7816","public":"1","is_owner":"1","is_original_owner":"1","created_on":"1505256466","protocol_affiliation":"University of Arizona","affiliation":"University of Arizona","doi":"dx.doi.org\/10.17504\/protocols.io.jvgcn3w","doi_status":"2","changed_fork_steps":null,"profile_url":"Ken-w2u26413","protocol_img":"https:\/\/s3.amazonaws.com\/pr-journal\/nkki6d.jpg","profile_image":"https:\/\/s3.amazonaws.com\/pr-journal\/caii6d.png","full_name":"Ken Youens-Clark","created_by":"Ken Youens-Clark","private_link":"64E90685D05545FA9D8B33637DEAF2E2","original_img":"1","username":"ken-youensclark","is_retracted":"0","retraction_reason":null,"plos_id":null,"manuscript_citation":null,"journal_name":null,"is_donations_disabled":"0","is_donations_disabled_by_user":"9","item_record_id":207416,"fork_info":[],"compare_forks":[],"protocols":[],"groups":[{"group_id":"464","group_uri":"metafunc-course-2017","group_name":"Metafunc Course 2017","group_logo":"https:\/\/s3.amazonaws.com\/pr-journal\/m3qbvtw.png","requested_uid":null,"request_flag":null,"my_request":"1"}],"number_of_shared_runs":[],"ownership_history":[],"keywords":"","transfer_to_user":[],"sub_transfer":false,"is_transfer_pending":false,"number_of_bookmarks":"0","collections":[],"tags":[],"archived":0,"sub_authors":[],"sub_protocols_number":0,"can_edit_shared":0,"shared_runs":[],"is_shared_run":0,"is_shared":1,"banner":null,"contact_badges":[{"badge_id":"4","badge_image":"\/img\/badges\/gold.svg","badge_description":"Gold power author!"},{"badge_id":"5","badge_image":"\/img\/badges\/earlyadopter.svg","badge_description":"Early adopter"},{"badge_id":"6","badge_image":"\/img\/badges\/socialbutterfly.svg","badge_description":"Social butterfly"}],"number_of_comments":0,"is_locked":0,"is_locked_by":false,"authors":"Ken Youens-Clark","authors_list":[{"name":"Ken Youens-Clark","affiliation":"University of Arizona","username":"ken-youensclark","profile_image":"https:\/\/s3.amazonaws.com\/pr-journal\/caii6d.png"}],"user":{"profile_image":"https:\/\/s3.amazonaws.com\/pr-journal\/caii6d.png","username":"ken-youensclark","full_name":"Ken Youens-Clark","created_by":"Ken Youens-Clark"},"access":{"can_view":"1","can_remove":"0","can_add":"0","can_edit":0,"can_publish":0,"can_get_doi":0,"can_share":"0","can_move":"1","can_transfer":"1","can_download":"1","is_locked":"0"},"is_contact_suspended":0,"guidelines":null,"status_id":"1","is_research":"1","status_info":null,"steps":[{"id":"586894","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"0E6CF9E21A42444EB49C7C0D35C5F3B6","previous_guid":null,"previous_id":"0","last_modified":"1505257083","components":[{"component_id":"1003195","previous_id":0,"original_id":"0","guid":"A934FEB7437F4757BF364B69E67246DC","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Clone Github repos","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Clone Github repos"},"is_project":0},{"component_id":"1003194","previous_id":"1003195","original_id":"0","guid":"C476770190054EC388674C9E8BBB9C8E","previous_guid":"A934FEB7437F4757BF364B69E67246DC","component_type_id":"1","data_id":null,"data":"<p>You need to have both Ken's 'metagenomics-book' and your own 'abe487' repos checked out onto the HPC. \u00a0From your local machine (laptop), 'ssh hpc' then jump to 'ocelote.' \u00a0From there, do the following:<\/p>\n<p>\u00a0<\/p>\n<pre class=\"language-markup\"><code>$ cd work\n$ git clone https:\/\/github.com\/kyclark\/metagenomics-book.git\n$ git clone git@github.com:&lt;GithubID&gt;\/abe487.git<\/code><\/pre>\n<p>\u00a0<\/p>\n<p>Notice that the two repos are side-by-side, not one inside the other.<\/p>\n<p>\u00a0<\/p>\n<p>Then copy the 'hello' directory into your repo:<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>\n<pre class=\"language-markup\"><code>$ mkdir abe487\/problems\n$ cp metagenomics-book\/problems\/hello abe487\/problems\n$ cd abe487\n$ git add -A problems\n$ git commit -am 'adding problems'\n$ git push<\/code><\/pre>\n<p>\u00a0<\/p>\n<p>Now you have all the files needed to complete the homework, and you should be able to see the new files on the Github site.<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>You need to have both Ken's 'metagenomics-book' and your own 'abe487' repos checked out onto the HPC. \u00a0From your local machine (laptop), 'ssh hpc' then jump to 'ocelote.' \u00a0From there, do the following:<\/p>\n<p>\u00a0<\/p>\n<pre class=\"language-markup\"><code>$ cd work\n$ git clone https:\/\/github.com\/kyclark\/metagenomics-book.git\n$ git clone git@github.com:&lt;GithubID&gt;\/abe487.git<\/code><\/pre>\n<p>\u00a0<\/p>\n<p>Notice that the two repos are side-by-side, not one inside the other.<\/p>\n<p>\u00a0<\/p>\n<p>Then copy the 'hello' directory into your repo:<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>\n<pre class=\"language-markup\"><code>$ mkdir abe487\/problems\n$ cp metagenomics-book\/problems\/hello abe487\/problems\n$ cd abe487\n$ git add -A problems\n$ git commit -am 'adding problems'\n$ git push<\/code><\/pre>\n<p>\u00a0<\/p>\n<p>Now you have all the files needed to complete the homework, and you should be able to see the new files on the Github site.<\/p>"},"is_project":0}]},{"id":"586895","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"CA37C656823E4E97ACBD7E24289C2846","previous_guid":"0E6CF9E21A42444EB49C7C0D35C5F3B6","previous_id":"586894","last_modified":"1505257326","components":[{"component_id":"1003197","previous_id":0,"original_id":"0","guid":"EAE1B82F37FB41968D9094BF90069A66","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Solve the homework","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Solve the homework"},"is_project":0},{"component_id":"1003196","previous_id":"1003197","original_id":"0","guid":"B2357122E926401F951F3E9E2B791FCC","previous_guid":"EAE1B82F37FB41968D9094BF90069A66","component_type_id":"1","data_id":null,"data":"<p>Read the \"README.md\" to understand what is expected.<\/p>\n<p>\u00a0<\/p>\n<p>When \"make test\" looks like this:<\/p>\n<p>\u00a0<\/p>\n<pre class=\"language-markup\"><code>$ make test\npython3 -m pytest -v test.py\n============================= test session starts ==============================\nplatform darwin -- Python 3.6.1, pytest-3.0.7, py-1.4.33, pluggy-0.4.0 -- \/Users\/kyclark\/anaconda\/bin\/python3\ncachedir: .cache\nrootdir: \/Users\/kyclark\/work\/secret-book\/problems\/hello, inifile:\ncollected 6 items\n\ntest.py::test_exists PASSED\ntest.py::test_hello_out PASSED\ntest.py::test_hello_arg_usage PASSED\ntest.py::test_hello_arg PASSED\ntest.py::test_hello_arg2_usage PASSED\ntest.py::test_hello_arg2 PASSED<\/code><\/pre>\n<p>\u00a0<\/p>\n<p>Then you should do:<\/p>\n<p>\u00a0<\/p>\n<pre class=\"language-markup\"><code>$ git commit -am 'complete homework\/hello'\n$ git push<\/code><\/pre>\n<p>\u00a0<\/p>\n<p>If you can see your working scripts on the Github site, then I will be able to \"git pull\" your work and check that your tests pass.<\/p>\n<p>\u00a0<\/p>\n<p><strong>REMEMBER: All tests must pass to get full credit. \u00a0There is no partial credit for some tests passing.<\/strong><\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Read the \"README.md\" to understand what is expected.<\/p>\n<p>\u00a0<\/p>\n<p>When \"make test\" looks like this:<\/p>\n<p>\u00a0<\/p>\n<pre class=\"language-markup\"><code>$ make test\npython3 -m pytest -v test.py\n============================= test session starts ==============================\nplatform darwin -- Python 3.6.1, pytest-3.0.7, py-1.4.33, pluggy-0.4.0 -- \/Users\/kyclark\/anaconda\/bin\/python3\ncachedir: .cache\nrootdir: \/Users\/kyclark\/work\/secret-book\/problems\/hello, inifile:\ncollected 6 items\n\ntest.py::test_exists PASSED\ntest.py::test_hello_out PASSED\ntest.py::test_hello_arg_usage PASSED\ntest.py::test_hello_arg PASSED\ntest.py::test_hello_arg2_usage PASSED\ntest.py::test_hello_arg2 PASSED<\/code><\/pre>\n<p>\u00a0<\/p>\n<p>Then you should do:<\/p>\n<p>\u00a0<\/p>\n<pre class=\"language-markup\"><code>$ git commit -am 'complete homework\/hello'\n$ git push<\/code><\/pre>\n<p>\u00a0<\/p>\n<p>If you can see your working scripts on the Github site, then I will be able to \"git pull\" your work and check that your tests pass.<\/p>\n<p>\u00a0<\/p>\n<p><strong>REMEMBER: All tests must pass to get full credit. \u00a0There is no partial credit for some tests passing.<\/strong><\/p>"},"is_project":0}]}]}