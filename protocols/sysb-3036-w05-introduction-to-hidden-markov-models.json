{"id":20752,"title":"SYSB 3036 W05 Introduction to Hidden Markov Models","title_html":"SYSB 3036 W05 Introduction to Hidden Markov Models","image":{"source":"https:\/\/www.protocols.io\/img\/default_protocol.png","placeholder":"https:\/\/www.protocols.io\/img\/default_protocol.png"},"doi":"dx.doi.org\/10.17504\/protocols.io.yhqft5w","doi_status":2,"uri":"sysb-3036-w05-introduction-to-hidden-markov-models-yhqft5w","type_id":1,"published_on":1551357993,"version_id":0,"created_on":1551048448,"categories":null,"creator":{"name":"Frank Aylward","affiliation":"Virginia Tech","username":"frank-aylward","link":null,"image":{"source":"https:\/\/s3.amazonaws.com\/pr-journal\/v39jtte.png","placeholder":"https:\/\/s3.amazonaws.com\/pr-journal\/v39jtte.png"},"badges":[{"id":4,"image":{"source":"\/img\/badges\/gold.svg","placeholder":"\/img\/badges\/gold.svg"},"name":"Gold power author!"}],"research_interests":null},"journal":null,"journal_name":null,"journal_link":null,"public":1,"has_versions":0,"link":null,"total_collections":0,"number_of_steps":10,"authors":[{"name":"Frank Aylward","affiliation":"Virginia Tech","username":"frank-aylward","link":null,"image":{"source":"https:\/\/s3.amazonaws.com\/pr-journal\/v39jtte.png","placeholder":"https:\/\/s3.amazonaws.com\/pr-journal\/v39jtte.png"},"badges":[],"research_interests":null}],"versions":[],"groups":[],"has_subprotocols":0,"is_subprotocol":0,"is_bookmarked":0,"forks_count":{"private":0,"public":0},"steps":[{"id":714640,"guid":"D4B64BD03B5011E9958957C00B15EADA","previous_id":null,"previous_guid":null,"modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"4764098B9F444076A00DAFB8F7EEDA2F","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"2C94CD491A864D2D8C054274AAC2C9C2","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">First let's download some data from GitHub:<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">git clone <\/span><\/div><div class = \"text-block\"><a style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">https:\/\/github.com\/faylward\/hmm_introduction<\/span><\/a><\/div><div class = \"text-block\">and then <\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">cd hmm_introduction<\/span><\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":null},{"id":714641,"guid":"EA2952F03B5011E9958957C00B15EADA","previous_id":714640,"previous_guid":"D4B64BD03B5011E9958957C00B15EADA","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"BF4516829AB940FD818D750CB551E5F3","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"730AC22806EC44CAB8BE640967FCE619","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">There should be two files there, nifh.faa.gz and nosz.faa.gz. <\/div><div class = \"text-block\">We will use the nifh.faa.gz file today, and the nosz.faa.gz file will be for your homework.<\/div><div class = \"text-block\">The nifh.faa.gz file contains proteins that belong to the NifH family. NifH is a core component of the nitrogenase enzyme, which fixes atmospheric nitrogen into ammonia. It is a key component of the global nitrogen cycle.  <\/div><div class = \"text-block\">Let's unzip the nifh.faa.gz file<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">gunzip nifh.faa.gz<\/span><\/div><div class = \"text-block\">And now let's get some stats on how many sequences are in this file, and how long they are:<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">seqkit fx2tab -inl nifh.faa<\/span><\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":null},{"id":714644,"guid":"3CE967F03B5111E9958957C00B15EADA","previous_id":714641,"previous_guid":"EA2952F03B5011E9958957C00B15EADA","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"C8E42108B92A4A5493F5423D302E288F","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"690BB896321B4C2B9C7627494F2B5C48","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">For starters we are going to create a global alignment of these NifH proteins using Clustal Omega, a popular alignment program. Because it is nice to visualize these things we will go to the main webpage and use the web interface:<\/div><div class = \"text-block\"><a style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">https:\/\/www.ebi.ac.uk\/Tools\/msa\/clustalo\/<\/span><\/a><\/div><div class = \"text-block\">In the window you can paste the contents of the nifh.faa file (you can open the file in a text editor to copy the contents, or you can use the \"more\" command, scroll through all of the contents, and then copy the sequences directly from the command line if you prefer).<\/div><div class = \"text-block\">Click the \"submit\" button and wait for the results to appear. You should eventually see a multi-sequence alignment.  <\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":null},{"id":714670,"guid":"094B56003B5211E9958957C00B15EADA","previous_id":714644,"previous_guid":"3CE967F03B5111E9958957C00B15EADA","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"2740082160C049F59754A0D0A4769C53","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"92AF9AF682DE4D68975212FA926C96C4","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Click on the \"send to mview\" button to export the alignment to the MView tool. This will take you to a new submission website, where all you should need to do is click \"submit\" again. You should eventually see a multi-sequence alignment with statistics for base conservation on the bottom. <\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":null},{"id":714671,"guid":"5704F3103B5211E9958957C00B15EADA","previous_id":714670,"previous_guid":"094B56003B5211E9958957C00B15EADA","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"DCEBB984DE074BE8B17C23CA2070BCF9","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"93C09A9278E846D291DDF94F7E14B818","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Now we want to do something similar in the command line. <\/div><div class = \"text-block\">For alignment we can still use Clustal Omega:<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">clustalo -i nifh.faa -o nifh.aln<\/span><\/div><div class = \"text-block\">And now let's take a look at the file:<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">more nifh.aln<\/span><\/div><div class = \"text-block\">Note that the alignment file is still in FASTA format, though now there are \"-\" characters to signify gaps. FASTA format is generally used for alignments, though for visualization tools like MView are nicer since you can see all of the aligned regions more clearly. <\/div><div class = \"text-block\">Let's see how long these sequences are:<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">seqkit fx2tab -iln nifh.aln<\/span><\/div><div class = \"text-block\">Note that all of the sequences are the same length now. This should always be the case for an alignment, since gap characters should effectively lengthen shorter sequences. <\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":null},{"id":714672,"guid":"432F2BC03B5311E9958957C00B15EADA","previous_id":714671,"previous_guid":"5704F3103B5211E9958957C00B15EADA","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"0B626BB5B8AE4620998729D075BE1F59","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"65718D345C0E4E5B9DDF9CEFD522C0A1","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Now let's create an HMM from the multi-sequence alignment of NifH proteins. For this we can use the hmmbuild command in HMMER. <\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">hmmbuild nifh.hmm nifh.aln<\/span><\/div><div class = \"text-block\"><span>You should see the nifh.hmm file now. Take a look with \"more\". <\/span><span style = \"font-weight:bold;\"> <\/span><\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":null},{"id":714673,"guid":"CE6301303B5311E9958957C00B15EADA","previous_id":714672,"previous_guid":"432F2BC03B5311E9958957C00B15EADA","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"4EDBD57EE0764CEC9D71B45D1E32A0FD","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"579046A7D5554CC1960148776D727660","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Now we want to test this new nifh.hmm out to see how well it predicts NifH proteins. <\/div><div class = \"text-block\">For this we will download the genome of Methanococcus vinelandii<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">wget -O methanococcus.faa.gz <\/span><\/div><div class = \"text-block\"><a style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">ftp:\/\/ftp.ncbi.nlm.nih.gov\/genomes\/all\/GCF\/000\/017\/165\/GCF_000017165.1_ASM1716v1\/GCF_000017165.1_ASM1716v1_protein.faa.gz<\/span><\/a><\/div><div class = \"text-block\">and unzip it:<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">gunzip methanococcus.faa.gz<\/span><\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":null},{"id":714674,"guid":"14666FA03B5411E9958957C00B15EADA","previous_id":714673,"previous_guid":"CE6301303B5311E9958957C00B15EADA","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"E239B56F57AA492192DB3C3DDA4B32B3","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"72B1198E72764D34BCCD3CA80D11D8F0","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">To compare a protein file to a HMM we can use the hmmsearch command in HMMER. <\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">hmmsearch nifh.hmm methanococcus.faa > hmmout.txt<\/span><\/div><div class = \"text-block\">Or, if we want a tabulated output and introduce an E-value threshold, <\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">hmmsearch --tblout hmm_table.txt  -E 1e-10  nifh.hmm  methanococcus.faa > hmmout.txt<\/span><\/div><div class = \"text-block\">We can  browse the results with \"more\". There are two proteins with very good matches to our HMM. <\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":null},{"id":714675,"guid":"76A8DAE03B5411E9958957C00B15EADA","previous_id":714674,"previous_guid":"14666FA03B5411E9958957C00B15EADA","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"07F3338AC8F7411C8660597167C90261","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"2DF75AE6F4074109B6B5B6BDA93EADAD","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Now let's compare this annotation to one that we would do with BLASTP. <\/div><div class = \"text-block\">First we need to make a BLASTP database from the nifh.faa file. <\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">makeblastdb -in nifh.faa -dbtype prot<\/span><\/div><div class = \"text-block\">And then we can compare all of the Methanococcus proteins to this BLAST database. <\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">blastp -query methanococcus.faa -db nifh.faa -evalue 1e-5 -outfmt 6 > blastpout.txt<\/span><\/div><div class = \"text-block\">Here the annotations are not as clear as with hmmsearch. Note that some of the hits that we are getting for our query proteins have very low % identity, so it is difficult to assess with BLASTP alone whether or not the proteins belong to the same family. <\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":null},{"id":714678,"guid":"322316503B5511E9958957C00B15EADA","previous_id":714675,"previous_guid":"76A8DAE03B5411E9958957C00B15EADA","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"3E84C4F24E1A484B92D2A9A004698CB9","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"4E8F9309C0494F668D00A060646D180C","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":null}],"materials":[],"description":null,"changed_on":1551357993}