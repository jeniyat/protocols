{"id":28309,"title":"allele.variability","title_html":"<p>allele.variability<\/p>","image":{"source":"https:\/\/www.protocols.io\/img\/default_protocol.png","placeholder":"https:\/\/www.protocols.io\/img\/default_protocol.png"},"doi":"dx.doi.org\/10.17504\/protocols.io.7vvhn66","doi_status":2,"uri":"allele-variability-7vvhn66","type_id":1,"published_on":1571417529,"parent_protocols":[],"parent_collections":[],"version_id":0,"created_on":1570020908,"categories":null,"creator":{"name":"Sara Beier","affiliation":null,"affiliations":[],"username":"sara-beier","link":null,"image":{"source":"\/img\/avatars\/016.png","placeholder":"\/img\/avatars\/016.png"},"badges":[{"id":2,"image":{"source":"\/img\/badges\/bronze.svg","placeholder":"\/img\/badges\/bronze.svg"},"name":"Author"}],"research_interests":null,"blocked_by_you":false,"blocked_you":false},"journal":null,"journal_name":null,"journal_link":null,"article_citation":null,"public":1,"has_versions":0,"link":null,"total_collections":0,"number_of_steps":10,"authors":[{"name":"Sara Beier","affiliation":"Leibniz Institute for Baltic Sea Research","affiliations":[],"username":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"research_interests":null,"blocked_by_you":false,"blocked_you":false}],"versions":[],"groups":[],"has_subprotocols":0,"is_subprotocol":0,"is_bookmarked":0,"can_be_copied":1,"can_remove_fork":1,"forks_count":{"private":0,"public":0},"access":{"can_view":1,"can_remove":0,"can_add":0,"can_edit":0,"can_publish":0,"can_get_doi":0,"can_share":1,"can_move":1,"can_move_outside":1,"can_transfer":1,"can_download":1,"is_locked":0},"guid":"27685F6640ED4F36968CB7658C200E8A","steps":[{"id":821109,"guid":"96ADE50DAFBA4B1086A56B8335D40191","previous_id":null,"previous_guid":null,"modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"13303D8934F541C58AADA5848034AD3F","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"4DC0B0E646994A25821B0E9613E0D68A","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">removal of nextera adaptors (cutadapt v1.8.3)<\/div><\/div>"}},{"id":1054725,"guid":"ED126F50C3EB11E9B44281DDF65A77D8","order_id":2,"type_id":15,"title":"command","source":{"id":6561,"name":"cutadapt -a CTGTCTCTTATA -o ca.file.forward.fastq.gz file.forward.fastq.gz\ncutadapt -a CTGTCTCTTATA -o ca.file.reverse.fastq.gz file.reverse.fastq.gz","command_name":"Removal of nextera adaptors (Cutadapt v1.8.3)","command":"Run for all raw data sequence revers and forward read-files from BATS and HOT","os_name":"","os_version":""}}],"cases":[],"data":null,"section":null,"section_color":"","critical":null,"critical_id":null,"duration":0},{"id":821110,"guid":"073D3C6FC63D4E6CBEDB87636C7BEF90","previous_id":821109,"previous_guid":"96ADE50DAFBA4B1086A56B8335D40191","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"52A12F92C2C4496FB411FD158D4F6D34","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"0C77C08A34B84534A0C67100770165DA","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><\/div>"}},{"id":1054725,"guid":"68A4BBD0C3EE11E9B44281DDF65A77D8","order_id":2,"type_id":15,"title":"command","source":{"id":6562,"name":"sickle pe \\\n-f \/data\/sara\/LTG\/pacific\/BAT1\/cutadapt\/ca.file.forward.fastq.gz \\\n-r \/data\/sara\/LTG\/pacific\/BAT1\/cutadapt\/ca.file.reverse.fastq.gz \\\n-t sanger \\\n-o \/data\/sara\/LTG\/pacific\/BAT1\/sickle\/qtrim.file.forward.fastq \\\n-p \/data\/sara\/LTG\/pacific\/BAT1\/sickle\/qtrim.file.reverse.fastq \\\n-s \/data\/sara\/gesifus.strains\/sickle\/qtrim.file.unpaired.fastq \\\n-q 20 -l 50","command_name":"Quality trimming (Sickle v1.33)","command":"Run on BATS and HOT  output files from step 1 and on LMO rawdata sequence files","os_name":"","os_version":""}}],"cases":[],"data":null,"section":null,"section_color":"","critical":null,"critical_id":null,"duration":0},{"id":821111,"guid":"1013C54A36874CD099C07E12E231DCA3","previous_id":821110,"previous_guid":"073D3C6FC63D4E6CBEDB87636C7BEF90","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"E155D91EF6714572A1497A3CF8467EB7","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"D69B62789DF6467D9E0864ACED749615","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><\/div>"}},{"id":1054725,"guid":"39B8F1E0C3F011E9B44281DDF65A77D8","order_id":2,"type_id":15,"title":"command","source":{"id":6563,"name":"#interleave reads\nmerge-paired-reads.sh qtrim.file.forward.fastq qtrim.file.reverse.fastq file.inter.fastq\n#sortmerna\nsortmerna --I file.inter.fastq --paired-in -n 2 --db personal_default_rRNA_DBs.fna --other file.inter.protein -a 20\n#unmerge protein data\nunmerge-paired-reads.sh file.inter.protein.fastq file.forward.protein.fastq file.reverse.protein.fastq","command_name":"rRNA removal (SortMeRna v1.9)","command":"Run for SOLA (output files step 2). The presonal referenece database (personal_default_rRNA_DBs.fna) contains the silve rRNA sequences (downloaded 2013)","os_name":"","os_version":""}}],"cases":[],"data":null,"section":null,"section_color":"","critical":null,"critical_id":null,"duration":0},{"id":821112,"guid":"AD678EE9AA3948E796A99988E5F0C98A","previous_id":821111,"previous_guid":"1013C54A36874CD099C07E12E231DCA3","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"C96467D76C6A4330AC07B19BDFE78274","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"1F661BBC80424F4FA2510DEFBF875027","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><\/div>"}},{"id":1054725,"guid":"0B2A0A70C3F111E9B44281DDF65A77D8","order_id":2,"type_id":15,"title":"command","source":{"id":6564,"name":"fq2fa --merge --filter qtrim.file.1.fastq qtrim.file.2.fastq file.merged.fa #interleave paired reads\ncat file*.merged.fa > all.merged.fa #concatenate all individual merged read files of a time series into one file\nidba_ud --mink=25 --maxk=99 --step=4 -l all.merged.fa -o IDBAoutput #run assembly","command_name":"Assembly (IDBA-UD v1.1.3)","command":"Run for BATS, HOT (using output from step 2, only data from 10 sample days considered in this study) and SOLA (using output from step 3, data fro all available sample days)","os_name":"","os_version":""}}],"cases":[],"data":null,"section":null,"section_color":"","critical":null,"critical_id":null,"duration":0},{"id":821113,"guid":"839142367F894875AD051460349D7024","previous_id":821112,"previous_guid":"AD678EE9AA3948E796A99988E5F0C98A","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"36C105F1284C4366A4EAE3D7835501A8","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"2530CE4EFE8641208F1F92DB255A6477","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><\/div>"}},{"id":1054725,"guid":"775785B0C3F111E9B44281DDF65A77D8","order_id":2,"type_id":15,"title":"command","source":{"id":6565,"name":"prodigal -i IDBA.contig.fa -a prod.pep -d prod.fas -o prod.gff -f gff","command_name":"Gene calling (Prodigal v2.6.1)","command":"Run for BATS, HOT and SOLA using the outpute file from step 4","os_name":"","os_version":""}}],"cases":[],"data":null,"section":null,"section_color":"","critical":null,"critical_id":null,"duration":0},{"id":821114,"guid":"3548EB4CC85849948ACB7A2C7D6F70D0","previous_id":821113,"previous_guid":"839142367F894875AD051460349D7024","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"5A885ECE107143C4A9CF92D35F039F79","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"D2615773C50D463BB4CC0254B3D6FA03","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><\/div>"}},{"id":1054725,"guid":"9AC4F8A0C3F311E9B44281DDF65A77D8","order_id":2,"type_id":15,"title":"command","source":{"id":6566,"name":"makeblastdb -in KEGG.faa -parse_seqids -dbtype prot #create database for blastp\nblastp -db KEGG.faa -query prod.pep -outfmt 6 -num_alignments 1 -num_threads 16 -out blastout.tab #run blastp","command_name":"Blast annotation (NCBI-BLAST v2.2.31+)","command":"run for SOLA (predicted genes from step 5) and LMO (predicted genes from BARM assembly that were different from the public available data translated with table 11). The reference KEGG database (KEGG.faa) was downloaded on 15.05.2016.","os_name":"","os_version":""}}],"cases":[],"data":null,"section":null,"section_color":"","critical":null,"critical_id":null,"duration":0},{"id":821115,"guid":"3ACEDCCCA0134B00AEC13CA78E87BE1F","previous_id":821114,"previous_guid":"3548EB4CC85849948ACB7A2C7D6F70D0","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"BDCD80CB019F4716A37FB87B8324E0D3","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"48959454EA1746F4B4B1D6873C410103","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><\/div>"}},{"id":1054725,"guid":"92EDDF10C3F411E9B44281DDF65A77D8","order_id":2,"type_id":15,"title":"command","source":{"id":6567,"name":"diamond makedb --in KEGG.faa -d KEGG #create diamond database\ndiamond blastp -d KEGG -q prod.pep  --more-sensitive -k 1 -o diamond.tab  -p 26 #run diamond blast","command_name":"Diamond-Blast annotation (DIAMOND v0.8.22.84)","command":"","os_name":"","os_version":""}}],"cases":[],"data":null,"section":null,"section_color":"","critical":null,"critical_id":null,"duration":0},{"id":821116,"guid":"8D5CF0F1D2ED46F88A85D177CFEB8BD2","previous_id":821115,"previous_guid":"3ACEDCCCA0134B00AEC13CA78E87BE1F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"73B5749AC8AA4134A6B8485C484165D9","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"8032C8089A4949C68668701F17A9380A","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><\/div>"}},{"id":1054725,"guid":"0F00B820C3F511E9B44281DDF65A77D8","order_id":2,"type_id":15,"title":"command","source":{"id":6568,"name":"bowtie2-build contig.fa contigs #build indexed reference file\nbowtie2 --very-sensitive-local --no-unal -x contigs -1 qtrim.file.forrward.fastq -2 qtrim.file.reverse.fastq -S file.sam #for LMO, SOLA, BATS, HOT with paired-end reads\nbowtie2 --very-sensitive-local --no-unal -x contigs -U qtrim.file.fastq -S file.sam #for MENDOTA with single-end reads","command_name":"Mapping (Bowtie2 v2.2.9)","command":"run for BATS, HOT, LMO (quality trimmed reads, step 3), SOLA (protein-coding reads, step 4) and MENDOTA (quality trimmed reads provided by collaborators). Assembled contigs were used as reference (BATS, HOT, SOLA: output from step 4; LMO: BARM assembly, MENDOTA: assembly provided by collaborators)","os_name":"","os_version":""}}],"cases":[],"data":null,"section":null,"section_color":"","critical":null,"critical_id":null,"duration":0},{"id":821117,"guid":"E9522AF269C74890B4B35C7B54954BEE","previous_id":821116,"previous_guid":"8D5CF0F1D2ED46F88A85D177CFEB8BD2","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"EB8B2B4CE4E642AEBD508AB0B6A6DEBE","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"0DAF14C7494D47A3A76C2A2C2DF406A2","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><\/div>"}},{"id":1054725,"guid":"50A16150C3F811E9B44281DDF65A77D8","order_id":2,"type_id":15,"title":"command","source":{"id":6569,"name":"convert_prodigal_GFF_to_subread_featureCount_SAF.pl -g prod.gff -s prod.saf #converts prodigal output into prod.saf\nfeatureCounts -p -a prod.saf -T 30 -F SAF -o feature.tab *sam #for LMO, SOLA, BATS, HOT with paired-end reads\nfeatureCounts -a prod.saf -T 12 -F SAF -o feature.tab *sam #for MENDOTA with single-end reads","command_name":"summarize mapped reads (Subread v1.4.6)","command":"the prod.gff outputfile from step 5 was reformatted using a personal script (convert_prodigal_GFF_to_subread_featureCount_SAF.pl) to prod.saf concerning the requirements of the featureCounts software. For BATS, HOT, LMO, SOLA and MENDOTS sam-files produced during step 7 were used.","os_name":"","os_version":""}}],"cases":[],"data":null,"section":null,"section_color":"","critical":null,"critical_id":null,"duration":0},{"id":821118,"guid":"4F6C0C8137DE40FF924DCE6A59D8A53B","previous_id":821117,"previous_guid":"E9522AF269C74890B4B35C7B54954BEE","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"CF8DF1C096C54D34897EFB1A8B4A47CD","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"A623F77B016C4228AF8588DA3D2D7BF7","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><\/div>"}},{"id":1054725,"guid":"33F15DC0C3F911E9B44281DDF65A77D8","order_id":2,"type_id":15,"title":"command","source":{"id":6570,"name":"psort -n K*.prokaryotes.faa -o terse |awk -F'\\t' '{$1=\"XXX\" FS $1;}1' OFS='\\t'|sed 1d > psort.K*.prok.tab #create psortoutput for each KEGG ortholog\ncat psort.K* >psort.all.prok.tab #concatenate results","command_name":"Subcellular location (PSORTb v.3.0)","command":"Run for prokaryotic amino acid sequences from the KEGG database (downloaded Nov 2015) representing each  KEGG ortrholog (K*.prokaryotes.faa).","os_name":"","os_version":""}}],"cases":[],"data":null,"section":null,"section_color":"","critical":null,"critical_id":null,"duration":0}],"document":null,"materials":[],"description":"<div class = \"text-blocks\"><div class = \"text-block\">A prerequisite to improve the predictability of microbial community dynamics is to understand their assembly mechanisms. To study factors that contribute to microbial community assembly, we examined temporal dynamics of genes in five aquatic metagenome time series, originating from marine off-shore or coastal sites and one lake, while focusing on a trait-based data evaluation.<\/div><div class = \"text-block\">We expected to find gene-specific patterns for the temporal allele variability depending on the metacommunity size of carrier-taxa and variability of the milieu and the substrates that the resulting enzymes are exposed to. In more detail we hypothesized that a larger metacommunity would cause increased temporal variability of functional units, as shown previously for taxonomic units. Furthermore, we hypothesized that multi-copy genes feature higher temporal variability then single-copy genes, because gene multiplication is often the consequence of increased variability in (subtil) changes of substrate quality and quantity. Finally, we hypothesized that direct exposure of proteins to the extracellular environment would result in increased temporal variability of the respective gene compared to intracellular proteins as they would be exposed to highly variable conditions. The first two hypotheses were confirmed in all, while an effect of the subcellular location of gene-products was only seen in three out of the five time series. <\/div><div class = \"text-block\">The gene with highest allele variability throughout all datasets was an iron transporter, which also represents a target for phage infections. This finding points to the general importance of iron transporter mediated phage infections on the assembly and maintenance of diversity of aquatic prokaryotes.<\/div><\/div>","changed_on":1571417529}