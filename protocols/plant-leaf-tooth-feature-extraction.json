{"id":18950,"title":"Plant leaf tooth feature extraction","title_html":"Plant leaf tooth feature extraction","image":{"source":"https:\/\/www.protocols.io\/img\/default_protocol.png","placeholder":"https:\/\/www.protocols.io\/img\/default_protocol.png"},"doi":"dx.doi.org\/10.17504\/protocols.io.wrefd3e","doi_status":2,"uri":"plant-leaf-tooth-feature-extraction-wrefd3e","type_id":1,"published_on":1546536717,"version_id":3,"created_on":1546535821,"categories":null,"creator":{"name":"Di Tian","affiliation":null,"username":"di-tian","link":null,"image":{"source":"\/img\/avatars\/002.png","placeholder":"\/img\/avatars\/002.png"},"badges":[{"id":2,"image":{"source":"\/img\/badges\/bronze.svg","placeholder":"\/img\/badges\/bronze.svg"},"name":"Author"}],"research_interests":null},"journal":null,"journal_name":null,"journal_link":null,"public":1,"has_versions":1,"link":null,"number_of_steps":9,"authors":[{"name":"Wang Hu","affiliation":"China Shipbuilding Industry Corporation","username":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"research_interests":null},{"name":"Li Chu","affiliation":"China Shipbuilding Industry Corporation","username":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"research_interests":null},{"name":"Tian Yan","affiliation":"Huazhong University of Science and Technology","username":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"research_interests":null},{"name":"Zhou Haoyu","affiliation":"China Shipbuilding Industry Corporation","username":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"research_interests":null},{"name":"Tian Di","affiliation":"Wenhua College","username":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"research_interests":null}],"versions":[],"groups":[],"has_subprotocols":0,"is_subprotocol":0,"is_bookmarked":0,"forks_count":{"private":0,"public":0},"steps":[{"id":694375,"guid":"30EFC8958E7A45478E32234EE242D856","previous_id":694383,"previous_guid":"545923400F7C11E98641DD6FAC511104","modified_on":1546536668,"protocol_id":0,"components":[{"id":1054723,"guid":"57653497A0D54F9895AED4B598FACA2F","order_id":1,"type_id":6,"title":"Section","source":{"title":"Experiment"}},{"id":1054723,"guid":"341C0CA58C0E4F4186B549D03EABB013","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">To verify whether the proposed leaf structure feature description algorithm is scientific and effective, <\/div><div class = \"text-block\"><a style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">we implemented the algorithm using MATLAB 2017 (MathWorks, Natick, MA, USA) on a standard desktop PC (4.2 GHz CPU, 24 GB RAM). Processing of a single leaf took approximately 1.4 s. This could undoubtedly be improved through further optimization and\/or using parallel computing. <\/span><\/a><\/div><div class = \"text-block\">We have uploaded the code and data of this study, please reference to:<\/div><div class = \"text-block\"><a style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">https:\/\/github.com\/hollyprince\/Leaf_tooth_feature<\/span><\/a><\/div><\/div>"}},{"id":1054723,"guid":"38B0BBC00F6911E99BD11532EFD0C286","order_id":2,"type_id":15,"title":"command","source":{"name":"data=toothFeature_finished('D:\\ExperimentData_1\\leaf_1.mat')","command":"Experiment_1","os_name":"windows","os_version":"10"}},{"id":1054723,"guid":"516948900F7711E9BBDC1D57A0F22AE4","order_id":3,"type_id":15,"title":"command","source":{"name":"accuracy=Classification_SVM('D:\\Experiment_2_data\\Our_method_data')\naccuracy=Classification_LDA('D:\\Experiment_2_data\\Our_method_data')\naccuracy=Classification_SVM('D:\\Experiment_2_data\\Proposed_in[20]_data')\naccuracy=Classification_LDA('D:\\Experiment_2_data\\Proposed_in[20]_data')","command":"Experiment_2","os_name":"windows","os_version":"10"}},{"id":1054723,"guid":"4D694F9B4686405B804AE5987EB67F2A","order_id":4,"type_id":21,"title":"cases","source":{"cases":[]}}],"cases":null,"data":null,"section":null,"section_color":"#A492FF"},{"id":694376,"guid":"7CD2E1E00F7B11E98641DD6FAC511104","previous_id":null,"previous_guid":null,"modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"C62338C8CDB349618F29B0BF31553E2F","order_id":1,"type_id":6,"title":"Section","source":{"title":"Preprocess"}},{"id":1054723,"guid":"D13041ED3B8545E495A9D0BDFE31FF6D","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Preprocessing is employed to obtain the binary image of the leaf, which includes image graying, image segmentation, and image smoothing.<\/div><div class = \"text-block\">1.We use the weighted average method to convert the image to grayscale.<\/div><div class = \"text-block\">2.The maximum interclass variance method (abbreviated as OTSU) is used to binarize the image.<\/div><div class = \"text-block\">3.Closing operations are performed to fill small holes and gaps in the image, and finally the image is smoothed and denoised.Here, the radius of the disc struct.<\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#EA94FF"},{"id":694377,"guid":"A96E68500F7B11E98641DD6FAC511104","previous_id":694376,"previous_guid":"7CD2E1E00F7B11E98641DD6FAC511104","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"41CAA898E3A14EE6ACCAD5E0BE4404F6","order_id":1,"type_id":6,"title":"Section","source":{"title":"Detect the corners"}},{"id":1054723,"guid":"4B091AB3B7A94762AB7FC6587A047531","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">1. Following preprocessing of the image, the Canny operator is used to extract the leaf edge. (The setting of the two thresholds (H and L) is explained in [29].) <\/div><div class = \"text-block\">2. After single pixelization of the leaf edges, the open-close situation of the contour curve is judged according to the pre-set threshold (Gap_size), then periodic convolution smoothing is used for the closed curve, and the open curve is convolved with the Gaussian function with width controlled by .<\/div><div class = \"text-block\">3. The curvature of all points on the curve is then calculated, and the point with the maximum local curvature value is defined as the corner candidates. <\/div><div class = \"text-block\">4. The threshold value C of the round corners removal is adaptively calculated according to the average curvature in the ROS region, and corners with curvature less than C are removed [30]. <\/div><div class = \"text-block\">5. The angle of the remaining corner candidates is calculated based on the recalculated dynamic support region, and corner candidates with angle smaller than the preset parameter T_angled are removed (removing the false corner). <\/div><div class = \"text-block\">6. The position of the corner points are compared with the endpoints of the open curve and, if they are far apart, the endpoints are marked as candidate corners as well.<\/div><div class = \"text-block\">3.Extraction of convex and concave points of leaf tooth<\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#94EBFF"},{"id":694379,"guid":"F3B91D600F7B11E98641DD6FAC511104","previous_id":694384,"previous_guid":"E5DA48800F7C11E98641DD6FAC511104","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"8532D980A75649AA8FD46580F2986663","order_id":1,"type_id":6,"title":"Section","source":{"title":"Number of orders of teeth"}},{"id":1054723,"guid":"6EEF2AC632704C48BBEF1D388B9A35E5","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">1. Calculate the distance from the convex point to the line formed by adjacent concave points to indicate the length of the teeth;<\/div><div class = \"text-block\">2. Normalize the teeth length, that is, divide the distance by the length of the longest tooth in the leaf (after removing abnormal points, which have values greater than twice the mean of the teeth length);<\/div><div class = \"text-block\">3. After normalization, the number of teeth for which the tooth length is less than the half of the maximum length are counted. If they are greater than half of the total number of leaf teeth, the leaf is considered to have two orders of teeth, otherwise it is considered to have the order of one;<\/div><div class = \"text-block\">4. If step 3 shows that the leaf has two orders of teeth, it is necessary to distinguish the first-order teeth and the second-order teeth by comparing the teeth length. The length of the first-order leaf teeth is significantly larger than the length of the two adjacent leaf teeth and the second-order teeth do not have this characteristic, the teeth can be distinguished.<\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#84CE84"},{"id":694380,"guid":"1109FF600F7C11E98641DD6FAC511104","previous_id":694379,"previous_guid":"F3B91D600F7B11E98641DD6FAC511104","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"4613178C41314B35832EDA91BC22EEBF","order_id":1,"type_id":6,"title":"Section","source":{"title":"Tooth spacing"}},{"id":1054723,"guid":"D2C191F467884E44B2B073E963F5A3F5","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">1. Calculate the tooth spacing, that is, the distance between adjacent teeth;<\/div><div class = \"text-block\">2. Compare the minimum intertooth distance dmin with the maximum intertooth distance dmax. If dmin>(dmax*0.6), the tooth spacing characters is regular; otherwise, it is irregular.<\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#FFED92"},{"id":694381,"guid":"236B80C00F7C11E98641DD6FAC511104","previous_id":694380,"previous_guid":"1109FF600F7C11E98641DD6FAC511104","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"9F20B6C24EDA409888210979B71E3AAA","order_id":1,"type_id":6,"title":"Section","source":{"title":"Tooth number"}},{"id":1054723,"guid":"3346BFFDEB0049CBAF5CCC2F7A63EB85","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Calculate the total number of teeth of a leaf (i.e., the number of convex points using the abovementioned detection method).<\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#A492FF"},{"id":694382,"guid":"3F1605C00F7C11E98641DD6FAC511104","previous_id":694381,"previous_guid":"236B80C00F7C11E98641DD6FAC511104","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"7E15484837A24AAE9DD49328524AD592","order_id":1,"type_id":6,"title":"Section","source":{"title":"Concave shape"}},{"id":1054723,"guid":"CD9472048DA34DF7A43969F68E06F0ED","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">1. Calculate the curvature at the concave point of a leaf whose concave shape is rounded;<\/div><div class = \"text-block\">2. Calculate the curvature at the concave point of a leaf that has an angular concave shape\uff1b <\/div><div class = \"text-block\">3. According to the statistical data in steps 1 and 2, determine the curvature threshold value which distinguishes the angular concave shape and the rounded concave shape.<\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#84CE84"},{"id":694383,"guid":"545923400F7C11E98641DD6FAC511104","previous_id":694382,"previous_guid":"3F1605C00F7C11E98641DD6FAC511104","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"2B958A8D3CEC440CBEDD731912D3C380","order_id":1,"type_id":6,"title":"Section","source":{"title":"Tooth shape"}},{"id":1054723,"guid":"86DE474A157D4EB08D8F23BD2B8B1BDF","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">1. Extract the coordinates of an arc between a concave point and a convex point on the profile curve of the leaf tooth;<\/div><div class = \"text-block\">2. Fit the coordinates of the quadratic polynomial to obtain the corresponding polynomial;<\/div><div class = \"text-block\">3. Examine the quadratic parameter of the quadratic polynomial; if the parameter is equal to zero, it is straight; If the parameter is nonzero, the subsequent steps are taken to continue processing.<\/div><div class = \"text-block\">4. In order to further distinguish the tooth shape of CV, CC, FL, and RT, we use straight lines to connect the concavo-convex points, and count the number of black and white pixels in the closed area surrounded by the contour of leaf and straight line, and then judge the tooth shape according to the distribution of black and white pixels. As shown in Fig 9, A is the convex point of the leaf teeth, E is the concave point, and  is the contour of the leaf, C is the intersection point of line AE and the contour (usually there is only one intersection point at most), B is any point on the curve , and D is any point on the curve .<\/div><div class = \"text-block\">1) If point C does not exist, count respectively the number of pixels with values of zero (black) and one (white) in the area of the line AC and the arc , and denote them as   and   respectively; if  , the leaf tooth shape is CV; otherwise, it is CC.<\/div><div class = \"text-block\">2) If point C exists, count respectively the number of pixels with values of zero (black) and one (white) in the area (P) of the line AC and the arc , and denote them respectively as  and ; if  , the area P is recorded as Black; otherwise, it is recorded as White. Then, count respectively the number of pixels with values of zero (black) and one (white) in the area (Q) of the line AC and the arc , and denote them respectively as  and ; if  , the area Q is recorded as Black; otherwise, it is recorded as White. If P is Black and Q is White, the tooth shape is RT. If P is White and Q is Black, the tooth shape is FL.<\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#FFED92"},{"id":694384,"guid":"E5DA48800F7C11E98641DD6FAC511104","previous_id":694377,"previous_guid":"A96E68500F7B11E98641DD6FAC511104","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"6B51F85CE4174BC18BF9CDFEDC1A0A29","order_id":1,"type_id":6,"title":"Section","source":{"title":"Experiment"}},{"id":1054723,"guid":"22F1324B723D4858B14374BB96DDE9CA","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">With the corner point as the center, set the radius to L, and calculate the number of target points and background points falling in the circle. If the number of target points is less than that of the background points, it is a convex point.<\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#EA9F6C"}],"materials":[],"description":"<div class = \"text-blocks\"><div class = \"text-block\">Previous studies extract features that are not strictly defined in botany; therefore, a uniform standard to compare the accuracies of various feature extraction methods cannot be used. For efficient and automatic retrieval of plant leaves from a leaf database, in this study, we propose an image-based description and measurement of leaf teeth by referring to the leaf structure classification system in botany. First, image preprocessing is carried out to obtain a binary map of plant leaves. Then, corner detection based on the curvature scale-space (CSS) algorithm is used to extract the inflection point from the edges; next, the leaf tooth apex is extracted by screening the convex points; then, according to the definition of the leaf structure, the characteristics of the leaf teeth are described and measured in terms of number of orders of teeth, tooth spacing, number of teeth, sinus shape, and tooth shape.<\/div><\/div>","changed_on":1546536717}