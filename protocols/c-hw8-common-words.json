{"uri":"c-hw8-common-words-gdfbs3n","version_id":"0","protocol_name":"C_HW8 (common words)","protocol_name_html":"C_HW8 (common words)","is_prepublished":"0","can_edit":"0","parent_id":null,"api_version":"1","is_new_mode":"1","last_modified":"1510247633","type_id":"1","link":"","fork_id":"","public_fork_note":"","number_of_steps":"3","has_versions":"0","first_published_date":"1479240804","publish_date":"2016-11-15 20:13:24","documents":null,"have_protocol_in_step":"0","is_protocol_in_step":"0","vendor_name":"Contributed by users","vendor_link":"https:\/\/www.protocols.io","vendor_logo":"\/img\/vendors\/1.png","mod_mins":"-45","mod_secs":"1","description":"<p>Find the words in common between two files. \u00a0It is suggested to use hashes, but Sets and Bags would also useful for the more advanced student.<\/p>","is_bookmarked":"0","can_reassign":"1","before_start":"","has_guidelines":"0","materials":[],"warning":"","version_class":"4231","public":"1","is_owner":"1","is_original_owner":"1","created_on":"1478806113","protocol_affiliation":"","affiliation":"University of Arizona","doi":"dx.doi.org\/10.17504\/protocols.io.gdfbs3n","doi_status":"2","changed_fork_steps":null,"profile_url":"Ken-w2u26413","protocol_img":"https:\/\/s3.amazonaws.com\/pr-journal\/gmpi6d.jpg","profile_image":"https:\/\/s3.amazonaws.com\/pr-journal\/caii6d.png","full_name":"Ken Youens-Clark","created_by":"Ken Youens-Clark","private_link":"6738FBBA4679BC57F68FAEDDEB798D90","original_img":"1","username":"ken-youensclark","is_retracted":"0","retraction_reason":null,"plos_id":null,"manuscript_citation":null,"journal_name":null,"is_donations_disabled":"0","is_donations_disabled_by_user":"9","item_record_id":207411,"fork_info":[],"compare_forks":[],"protocols":[],"groups":[{"group_id":"224","group_uri":"metafunc-course","group_name":"MetaFunc Course","group_logo":"https:\/\/s3.amazonaws.com\/pr-journal\/emybvtw.jpg","requested_uid":null,"request_flag":null,"my_request":"1"}],"number_of_shared_runs":[],"ownership_history":[],"keywords":"","transfer_to_user":[],"sub_transfer":false,"is_transfer_pending":false,"number_of_bookmarks":"0","collections":[],"tags":[],"archived":0,"sub_authors":[],"sub_protocols_number":0,"can_edit_shared":0,"shared_runs":[],"is_shared_run":0,"is_shared":1,"banner":null,"contact_badges":[{"badge_id":"4","badge_image":"\/img\/badges\/gold.svg","badge_description":"Gold power author!"},{"badge_id":"5","badge_image":"\/img\/badges\/earlyadopter.svg","badge_description":"Early adopter"},{"badge_id":"6","badge_image":"\/img\/badges\/socialbutterfly.svg","badge_description":"Social butterfly"}],"number_of_comments":0,"big_protocol_img":"https:\/\/s3.amazonaws.com\/pr-journal\/gmni6d.jpg","big_protocol_img_ofn":"00574e1043b.jpg","is_locked":0,"is_locked_by":false,"authors":"","authors_list":[],"user":{"profile_image":"https:\/\/s3.amazonaws.com\/pr-journal\/caii6d.png","username":"ken-youensclark","full_name":"Ken Youens-Clark","created_by":"Ken Youens-Clark"},"access":{"can_view":"1","can_remove":"0","can_add":"0","can_edit":0,"can_publish":0,"can_get_doi":0,"can_share":"0","can_move":"1","can_transfer":"1","can_download":"1","is_locked":"0"},"is_contact_suspended":0,"guidelines":"","status_id":"1","is_research":"1","status_info":null,"steps":[{"id":"190976","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"D002D9A8DE7E47A1AB14CCDFA79FFA58","previous_guid":null,"previous_id":"0","last_modified":"1502718975","components":[{"component_id":"988151","previous_id":0,"original_id":"0","guid":"FAB3F742E4B04AFCA23E62DCF456EFEE","previous_guid":null,"component_type_id":"6","data_id":null,"data":null,"order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":null},"is_project":0},{"component_id":"233146","previous_id":"988151","original_id":"0","guid":"C1A20E2497E94CC29925D532D358F858","previous_guid":"FAB3F742E4B04AFCA23E62DCF456EFEE","component_type_id":"1","data_id":"0","data":"<p>Checkout or update (git pull)\u00a0https:\/\/github.com\/kyclark\/metagenomics-book<\/p>\n<p>\u00a0<\/p>\n<p>$ ssh hpc<\/p>\n<p>$ (cd metagenomics-book &amp;&amp; git pull)<\/p>\n<p>$ cp -r metagenomics-book\/problems\/common-words\u00a0~\/abe487\/problems<\/p>\n<p>$ cd !$<\/p>\n<p>$ git add\u00a0common-words<\/p>\n<p>$ git commit -m 'adding common words'\u00a0common-words<\/p>\n<p>$ git push<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Checkout or update (git pull)\u00a0https:\/\/github.com\/kyclark\/metagenomics-book<\/p>\n<p>\u00a0<\/p>\n<p>$ ssh hpc<\/p>\n<p>$ (cd metagenomics-book &amp;&amp; git pull)<\/p>\n<p>$ cp -r metagenomics-book\/problems\/common-words\u00a0~\/abe487\/problems<\/p>\n<p>$ cd !$<\/p>\n<p>$ git add\u00a0common-words<\/p>\n<p>$ git commit -m 'adding common words'\u00a0common-words<\/p>\n<p>$ git push<\/p>"},"is_project":0}]},{"id":"190977","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"5915E08B0BD74F44B60A87AE59536437","previous_guid":"D002D9A8DE7E47A1AB14CCDFA79FFA58","previous_id":"190976","last_modified":"1502718975","components":[{"component_id":"988152","previous_id":0,"original_id":"0","guid":"846212BA85E04821B2E688B1094BC984","previous_guid":null,"component_type_id":"6","data_id":null,"data":null,"order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":null},"is_project":0},{"component_id":"233147","previous_id":"988152","original_id":"0","guid":"E9FF5AC17D0B425AA65544133B111318","previous_guid":"846212BA85E04821B2E688B1094BC984","component_type_id":"1","data_id":"0","data":"<p>Write the code for 'common.pl6' that finds the words that are in common between two files. \u00a0You are provide three pairs of files with the following known common words:<\/p>\n<p>\u00a0<\/p>\n<p>const.txt (US Constitution) dec.txt (Declaration of Independence) = 862<\/p>\n<p>foo bar = 0<\/p>\n<p>text1.txt text2.txt = 8<\/p>\n<p>\u00a0<\/p>\n<p>You will need to lowercase words to compare them, and be sure to remove any punctionation. \u00a0You will find this useful:<\/p>\n<p>\u00a0<\/p>\n<p>for 'const.txt'.IO.lines -&gt; $line {<br \/>\u00a0 \u00a0 dd $line.subst(\/&lt;-[\\w\\s]&gt;\/, '', :g).words;<br \/>}<\/p>\n<p>\u00a0<\/p>\n<p>That regular expression says to create a character class of word-characters (\\w) and space-like characters (\\s) and negate it (\"-\"). \u00a0Use that as the matcher to substitute (\"subst\") those matching with the empty string (\"\").<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Write the code for 'common.pl6' that finds the words that are in common between two files. \u00a0You are provide three pairs of files with the following known common words:<\/p>\n<p>\u00a0<\/p>\n<p>const.txt (US Constitution) dec.txt (Declaration of Independence) = 862<\/p>\n<p>foo bar = 0<\/p>\n<p>text1.txt text2.txt = 8<\/p>\n<p>\u00a0<\/p>\n<p>You will need to lowercase words to compare them, and be sure to remove any punctionation. \u00a0You will find this useful:<\/p>\n<p>\u00a0<\/p>\n<p>for 'const.txt'.IO.lines -&gt; $line {<br \/>\u00a0 \u00a0 dd $line.subst(\/&lt;-[\\w\\s]&gt;\/, '', :g).words;<br \/>}<\/p>\n<p>\u00a0<\/p>\n<p>That regular expression says to create a character class of word-characters (\\w) and space-like characters (\\s) and negate it (\"-\"). \u00a0Use that as the matcher to substitute (\"subst\") those matching with the empty string (\"\").<\/p>"},"is_project":0}]},{"id":"190978","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"A3823296BE7841B3850C6B181E9C6766","previous_guid":"5915E08B0BD74F44B60A87AE59536437","previous_id":"190977","last_modified":"1502718975","components":[{"component_id":"988153","previous_id":0,"original_id":"0","guid":"73D0B86584A34331BEA09F62E2B828E3","previous_guid":null,"component_type_id":"6","data_id":null,"data":null,"order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":null},"is_project":0},{"component_id":"233148","previous_id":"988153","original_id":"0","guid":"144001945338499285C9F8E4EF5B0FD1","previous_guid":"73D0B86584A34331BEA09F62E2B828E3","component_type_id":"1","data_id":"0","data":"<p>A passing test suite looks like this:<\/p>\n<p>\u00a0<\/p>\n<p>$ make test<br \/>.\/test.pl6<br \/>ok 1 - No args gives usage<br \/>ok 2 - dec\/const = 262<br \/>ok 3 - foo\/bar = 0<br \/>ok 4 - text1\/text2 = 8<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>A passing test suite looks like this:<\/p>\n<p>\u00a0<\/p>\n<p>$ make test<br \/>.\/test.pl6<br \/>ok 1 - No args gives usage<br \/>ok 2 - dec\/const = 262<br \/>ok 3 - foo\/bar = 0<br \/>ok 4 - text1\/text2 = 8<\/p>"},"is_project":0}]}]}