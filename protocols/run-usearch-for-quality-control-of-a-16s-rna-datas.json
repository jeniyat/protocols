{"uri":"run-usearch-for-quality-control-of-a-16s-rna-datas-s8iehue","version_id":"0","protocol_name":"Run USEARCH for quality control of a 16s RNA dataset","protocol_name_html":"Run USEARCH for quality control of a 16s RNA dataset","is_prepublished":"0","can_edit":"0","parent_id":null,"api_version":"1","is_new_mode":"0","last_modified":"1536175924","type_id":"1","link":"https:\/\/drive5.com\/usearch\/","fork_id":"","public_fork_note":"","number_of_steps":"3","has_versions":"0","first_published_date":"1536175924","publish_date":"2018-09-05 19:32:04","documents":"[{\"url\":\"https:\/\/s3.amazonaws.com\/pr-journal\/6s42kge.fastq\",\"file_id\":\"29210\",\"thumb_url\":\"\/img\/extensions\/file.png\",\"ofn\":\"16S-mockS.1_V4_R1-hdr.fastq\"},{\"url\":\"https:\/\/s3.amazonaws.com\/pr-journal\/6s52kge.fastq\",\"file_id\":\"29211\",\"thumb_url\":\"\/img\/extensions\/file.png\",\"ofn\":\"16S-mockS.1_V4_R2-hdr.fastq\"}]","have_protocol_in_step":"0","is_protocol_in_step":"0","vendor_name":"Contributed by users","vendor_link":"https:\/\/www.protocols.io","vendor_logo":"\/img\/vendors\/1.png","mod_mins":"-14","mod_secs":"2","description":"<p>This protocol explores how to run USEARCH (v11.0.667) (<a href=\"https:\/\/academic.oup.com\/bioinformatics\/article\/26\/19\/2460\/230188\" target=\"_blank\" rel=\"noopener noreferrer\">Edgar, 2010<\/a>) on a 16s RNA dataset.<\/p>\n<p>\u00a0<\/p>\n<p>USEARCH is a sequence analysis tool that offers search and clustering algorithms. Here USEARCH will be used to run a quality control on a 16S RNA dataset. This protocol uses a staggered mock community as an example (see attached files).<\/p>","is_bookmarked":"0","can_reassign":"1","before_start":"<p>You need to download USEARCH on your computer. To do so, request a dowload link <a href=\"https:\/\/www.drive5.com\/usearch\/manual\/install.html\" target=\"_blank\" rel=\"noopener noreferrer\">here<\/a>. Once the binary is downloaded, no need to install anything, just copy the binary to a directory that is accessible from the computer where you want to run the code.<\/p>\n<p>\u00a0<\/p>\n<p>For easier run, you can rename the binary to 'usearch' by running in your shell :<\/p>\n<p><em>mv usearch11.0.667_i86osx32 usearch<\/em><\/p>\n<p>\u00a0<\/p>\n<p>On linux and Mac-OS systems, please make sure to have the execution rights on the binary. To add execution rights, run :<\/p>\n<p><em>chmod u+rwx usearch<\/em><\/p>\n<p>\u00a0<\/p>\n<p>\u00a0To run usearch, you can either add the path to the binary to your PATH variable, ou must type the full path to the file : <\/p>\n<p><em>.\/YOUR\/PATH\/TO\/usearch -cluster_fast reads.fasta -id 0.9 -uc results.uc<\/em><\/p>","has_guidelines":"1","materials":[],"warning":null,"version_class":"15338","public":"1","is_owner":"1","is_original_owner":"1","created_on":"1536042831","protocol_affiliation":"University of Arizona","affiliation":"University of Arizona","doi":"dx.doi.org\/10.17504\/protocols.io.s8iehue","doi_status":"2","changed_fork_steps":null,"profile_url":"AlisePonsero-432394v2x2","protocol_img":"https:\/\/s3.amazonaws.com\/pr-journal\/6sy2kge.png","profile_image":"https:\/\/s3.amazonaws.com\/pr-journal\/4uh2kge.jpg","full_name":"Alise Ponsero","created_by":"Alise Ponsero","private_link":"4B8186EEF564D3AC9E1445D4A73353B6","original_img":"1","username":"alise-ponsero","is_retracted":"0","retraction_reason":null,"plos_id":null,"manuscript_citation":null,"journal_name":null,"is_donations_disabled":"0","is_donations_disabled_by_user":"9","item_record_id":351588,"fork_info":[],"compare_forks":[],"protocols":[],"groups":[{"group_id":"795","group_uri":"metafunc-course-2018","group_name":"Metafunc course 2018","group_logo":"https:\/\/s3.amazonaws.com\/pr-journal\/5rbbvtw.jpg","requested_uid":null,"request_flag":null,"my_request":"0"}],"number_of_shared_runs":[],"ownership_history":[],"keywords":"","transfer_to_user":[],"sub_transfer":false,"is_transfer_pending":false,"number_of_bookmarks":"0","collections":[],"tags":[{"tag_id":"227","tag_name":"amplicon"},{"tag_id":"2103","tag_name":"16S"},{"tag_id":"2530","tag_name":"quality control"}],"archived":0,"sub_authors":[],"sub_protocols_number":0,"can_edit_shared":0,"shared_runs":[],"is_shared_run":0,"is_shared":1,"banner":null,"contact_badges":[{"badge_id":"3","badge_image":"\/img\/badges\/silver.svg","badge_description":"Power author!"}],"number_of_comments":0,"big_protocol_img":"https:\/\/s3.amazonaws.com\/pr-journal\/6sx2kge.png","big_protocol_img_ofn":"metafunc course 2018.png","is_locked":0,"is_locked_by":false,"authors":"Alise Ponsero,Bonnie Hurwitz","authors_list":[{"name":"Alise Ponsero","affiliation":"University of Arizona","username":"alise-ponsero","profile_image":"https:\/\/s3.amazonaws.com\/pr-journal\/4uh2kge.jpg"},{"name":"Bonnie Hurwitz","affiliation":"University of Arizona","username":"bonnie-hurwitz","profile_image":"https:\/\/s3.amazonaws.com\/pr-journal\/ee4bvtw.jpg"}],"user":{"profile_image":"https:\/\/s3.amazonaws.com\/pr-journal\/4uh2kge.jpg","username":"alise-ponsero","full_name":"Alise Ponsero","created_by":"Alise Ponsero"},"access":{"can_view":"1","can_remove":"0","can_add":"0","can_edit":0,"can_publish":0,"can_get_doi":0,"can_share":"0","can_move":"1","can_transfer":"1","can_download":"1","is_locked":"0"},"is_contact_suspended":0,"guidelines":"<p>For more information on USEARCH, please read the <a href=\"https:\/\/drive5.com\/usearch\/manual\/\" target=\"_blank\" rel=\"noopener noreferrer\">dedicated documentation<\/a>.<\/p>","status_id":"1","is_research":"0","status_info":"We use this protocol in our group and it is working","steps":[{"id":"660617","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"590FBFA4F74644A595ED1C41C1B50169","previous_guid":null,"previous_id":"0","last_modified":"1536174681","components":[{"component_id":"1190380","previous_id":0,"original_id":"0","guid":"941F9EF46AA447249C9B8FB6FB689DF5","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Get basic information about your read quality","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Get basic information about your read quality"},"is_project":0},{"component_id":"1190379","previous_id":"1190380","original_id":"0","guid":"B4FFD2A93FEA45B5B034C4A0D10C2E3B","previous_guid":"941F9EF46AA447249C9B8FB6FB689DF5","component_type_id":"1","data_id":null,"data":"<p><em>Note : This protocol requires you to have USEARCH installed on your computer. For more information on the installation, please read the 'Guidelines and warnings' section of this protocol. Moreover, you should be able to use a command line interface. To learn the basic of a command line interface, please read <a href=\"https:\/\/www.protocols.io\/view\/basic-use-of-command-lines-s9reh56\" target=\"_blank\" rel=\"noopener noreferrer\">this protocol<\/a>.<\/em><\/p>\n<p>\u00a0<\/p>\n<p><em>Note 2: This protocol uses the 16s RNA Staggered mock community, expected results are provided for this dataset.\u00a0<\/em><\/p>\n<p>\u00a0<\/p>\n<p>The fastx_info provides you with a quick summary of the length distribution and quality of the reads in a FASTQ file.<em> I<\/em>f you have paired reads, review the R1 and R2 files separately because they are usually different, e.g. the R2s tend to have lower quality.<\/p>\n<p>\u00a0<\/p>\n<p><em>T<\/em>o run this command, open your shell, and run :<em><br \/><\/em><\/p>\n<p>\u00a0<\/p>\n<pre class=\"language-markup\"><code>DIR=$PWD\nmkdir fastq_info \n#creates a folder named 'fastq_info' where we will store the results\n\nFILE1='$DIR\/16S-mockS.1_V4_R1-hdr.fastq'\nOUT1='$DIR\/fastq_info\/16S-mockS.1_V4_R1-hdr.log'\n.\/usearch -fastx_info $FILE1 -output $OUT1\n\nFILE2='$DIR\/16S-mockS.1_V4_R2-hdr.fastq'\nOUT2='$DIR\/fastq_info\/16S-mockS.1_V4_R2-hdr.log'\n.\/usearch -fastx_info $FILE2 -output $OUT2<\/code><\/pre>\n<p>\u00a0<\/p>\n<p>This command should create two files in the folder fastq_info, containing the scores for each of those files.<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><em>Note : This protocol requires you to have USEARCH installed on your computer. For more information on the installation, please read the 'Guidelines and warnings' section of this protocol. Moreover, you should be able to use a command line interface. To learn the basic of a command line interface, please read <a href=\"https:\/\/www.protocols.io\/view\/basic-use-of-command-lines-s9reh56\" target=\"_blank\" rel=\"noopener noreferrer\">this protocol<\/a>.<\/em><\/p>\n<p>\u00a0<\/p>\n<p><em>Note 2: This protocol uses the 16s RNA Staggered mock community, expected results are provided for this dataset.\u00a0<\/em><\/p>\n<p>\u00a0<\/p>\n<p>The fastx_info provides you with a quick summary of the length distribution and quality of the reads in a FASTQ file.<em> I<\/em>f you have paired reads, review the R1 and R2 files separately because they are usually different, e.g. the R2s tend to have lower quality.<\/p>\n<p>\u00a0<\/p>\n<p><em>T<\/em>o run this command, open your shell, and run :<em><br \/><\/em><\/p>\n<p>\u00a0<\/p>\n<pre class=\"language-markup\"><code>DIR=$PWD\nmkdir fastq_info \n#creates a folder named 'fastq_info' where we will store the results\n\nFILE1='$DIR\/16S-mockS.1_V4_R1-hdr.fastq'\nOUT1='$DIR\/fastq_info\/16S-mockS.1_V4_R1-hdr.log'\n.\/usearch -fastx_info $FILE1 -output $OUT1\n\nFILE2='$DIR\/16S-mockS.1_V4_R2-hdr.fastq'\nOUT2='$DIR\/fastq_info\/16S-mockS.1_V4_R2-hdr.log'\n.\/usearch -fastx_info $FILE2 -output $OUT2<\/code><\/pre>\n<p>\u00a0<\/p>\n<p>This command should create two files in the folder fastq_info, containing the scores for each of those files.<\/p>"},"is_project":0},{"component_id":"1190390","previous_id":"1190379","original_id":"0","guid":"470CF8D6A25E464D85D92BBCE3DA2896","previous_guid":"B4FFD2A93FEA45B5B034C4A0D10C2E3B","component_type_id":"17","data_id":"1814","data":"<p><em><strong>Result for 16S-mockS.1_V4_R1-hdr.log<\/strong><\/em><\/p>\n<p>\u00a0<\/p>\n<p>File size 7.0M, 11.2k seqs, 3.1M letters and quals<br \/>Lengths min 274, lo_quartile 276, median 278, hi_quartile 279, max 282<br \/>Letter freqs G 33.8%, A 26.2%, T 21.2%, C 18.8%<br \/>0% masked (lower-case)<br \/>ASCII_BASE=33<br \/>EE mean 7.7; min 0.1, lo_quartile 0.9, median 2.9, hi_quartile 8.9, max 161.6<\/p>\n<p>\u00a0<\/p>\n<p><strong><em>Result for 16S-mockS.1_V4_R2-hdr.log<\/em><\/strong><\/p>\n<p>\u00a0<\/p>\n<p>saguaro:16s_QC aponsero$ .\/usearch -fastx_info $FILE1 -output $OUT1<br \/>File size 7.0M, 11.2k seqs, 3.1M letters and quals<br \/>Lengths min 271, lo_quartile 275, median 276, hi_quartile 278, max 283<br \/>Letter freqs C 36.5%, T 25.5%, A 19.4%, G 18.7%<br \/>0% masked (lower-case)<br \/>ASCII_BASE=33<br \/>EE mean 34.1; min 0.7, lo_quartile 21.4, median 30.8, hi_quartile 42.7, max 176.0<\/p>","order_id":"2","name":"Expected result","data_by_id":"1","type_id":"17","source_data":{"result":"<p><em><strong>Result for 16S-mockS.1_V4_R1-hdr.log<\/strong><\/em><\/p>\n<p>\u00a0<\/p>\n<p>File size 7.0M, 11.2k seqs, 3.1M letters and quals<br \/>Lengths min 274, lo_quartile 276, median 278, hi_quartile 279, max 282<br \/>Letter freqs G 33.8%, A 26.2%, T 21.2%, C 18.8%<br \/>0% masked (lower-case)<br \/>ASCII_BASE=33<br \/>EE mean 7.7; min 0.1, lo_quartile 0.9, median 2.9, hi_quartile 8.9, max 161.6<\/p>\n<p>\u00a0<\/p>\n<p><strong><em>Result for 16S-mockS.1_V4_R2-hdr.log<\/em><\/strong><\/p>\n<p>\u00a0<\/p>\n<p>saguaro:16s_QC aponsero$ .\/usearch -fastx_info $FILE1 -output $OUT1<br \/>File size 7.0M, 11.2k seqs, 3.1M letters and quals<br \/>Lengths min 271, lo_quartile 275, median 276, hi_quartile 278, max 283<br \/>Letter freqs C 36.5%, T 25.5%, A 19.4%, G 18.7%<br \/>0% masked (lower-case)<br \/>ASCII_BASE=33<br \/>EE mean 34.1; min 0.7, lo_quartile 21.4, median 30.8, hi_quartile 42.7, max 176.0<\/p>"},"is_project":0}]},{"id":"660625","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"9A69F3587F494671AA23EA9868479844","previous_guid":"590FBFA4F74644A595ED1C41C1B50169","previous_id":"660617","last_modified":"1536052022","components":[{"component_id":"1190398","previous_id":0,"original_id":"0","guid":"DCAB29A55A39435E92CCB65306A2F8FB","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Choose your QC parameters","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Choose your QC parameters"},"is_project":0},{"component_id":"1190397","previous_id":"1190398","original_id":"0","guid":"E91AE9D38848431F863EDDB9BF4257F5","previous_guid":"DCAB29A55A39435E92CCB65306A2F8FB","component_type_id":"1","data_id":null,"data":"<p>The <strong>fastq_eestats2<\/strong> command creates a summary report showing how many reads will pass an expected error filter at different length thresholds. This will be useful for choosing parameters for fastq_filter. If you have paired reads, review the R1 and R2 files separately because they are usually different, e.g. the R2s tend to have lower quality.<\/p>\n<p>\u00a0<\/p>\n<p>To run this command, open your shell and run :<\/p>\n<p>\u00a0<\/p>\n<pre class=\"language-markup\"><code>DIR=$PWD\n\nFILE1='$DIR\/16S-mockS.1_V4_R1-hdr.fastq'\nOUT1='$DIR\/fastq_info\/16S-mockS.1_V4_R1-hdr-eestats2.txt'\n.\/usearch usearch -fastq_eestats2 $FILE1 -output $OUT1\n\nFILE2='$DIR\/16S-mockS.1_V4_R2-hdr.fastq'\nOUT2='$DIR\/fastq_info\/16S-mockS.1_V4_R2-hdr-eestats2.txt'\n.\/usearch usearch -fastq_eestats2 $FILE2 -output $OUT2<\/code><\/pre>\n<p>\u00a0<\/p>\n<p>This command has two optional options :<\/p>\n<ul>\n<li><strong>-length_cutoffs<\/strong> : specifies three integers separated by commas giving the shortest length, longest length and length increment. An asterisk (*) indicates no upper length limit. Default is 50,*,50 which means that length cutoffs of 50, 100, 150 ... maximum read length will be used.<\/li>\n<li><strong>-ee_cutoffs<\/strong> : which is given as one or more floating-point values separated by commas giving a list of the cutoffs to use. Default is 0.5,1.0,2.0. An asterisk (*) indicates that no e.e. cutoff should be applied, so all reads of at least the given length are included.<\/li>\n<\/ul>\n<p>\u00a0<\/p>\n<p>The command will generate two output files containing the reports.<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>The <strong>fastq_eestats2<\/strong> command creates a summary report showing how many reads will pass an expected error filter at different length thresholds. This will be useful for choosing parameters for fastq_filter. If you have paired reads, review the R1 and R2 files separately because they are usually different, e.g. the R2s tend to have lower quality.<\/p>\n<p>\u00a0<\/p>\n<p>To run this command, open your shell and run :<\/p>\n<p>\u00a0<\/p>\n<pre class=\"language-markup\"><code>DIR=$PWD\n\nFILE1='$DIR\/16S-mockS.1_V4_R1-hdr.fastq'\nOUT1='$DIR\/fastq_info\/16S-mockS.1_V4_R1-hdr-eestats2.txt'\n.\/usearch usearch -fastq_eestats2 $FILE1 -output $OUT1\n\nFILE2='$DIR\/16S-mockS.1_V4_R2-hdr.fastq'\nOUT2='$DIR\/fastq_info\/16S-mockS.1_V4_R2-hdr-eestats2.txt'\n.\/usearch usearch -fastq_eestats2 $FILE2 -output $OUT2<\/code><\/pre>\n<p>\u00a0<\/p>\n<p>This command has two optional options :<\/p>\n<ul>\n<li><strong>-length_cutoffs<\/strong> : specifies three integers separated by commas giving the shortest length, longest length and length increment. An asterisk (*) indicates no upper length limit. Default is 50,*,50 which means that length cutoffs of 50, 100, 150 ... maximum read length will be used.<\/li>\n<li><strong>-ee_cutoffs<\/strong> : which is given as one or more floating-point values separated by commas giving a list of the cutoffs to use. Default is 0.5,1.0,2.0. An asterisk (*) indicates that no e.e. cutoff should be applied, so all reads of at least the given length are included.<\/li>\n<\/ul>\n<p>\u00a0<\/p>\n<p>The command will generate two output files containing the reports.<\/p>"},"is_project":0},{"component_id":"1190467","previous_id":"1190397","original_id":"0","guid":"06DE8B04C6C947618C22B87C199454B9","previous_guid":"E91AE9D38848431F863EDDB9BF4257F5","component_type_id":"17","data_id":"1817","data":"<p><em><strong>Result for 16S-mockS.1_V4_R1-hdr.fastq, with the default parameters<\/strong><\/em><\/p>\n<p>\u00a0<\/p>\n<p>11241 reads, max len 282, avg 277.5<br \/><br \/>Length\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 MaxEE 0.50\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 MaxEE 1.00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 MaxEE 2.00<br \/>------\u00a0\u00a0 ----------------\u00a0\u00a0 ----------------\u00a0\u00a0 ----------------<br \/>\u00a0\u00a0\u00a0 50\u00a0\u00a0\u00a0\u00a0\u00a0 11030( 98.1%)\u00a0\u00a0\u00a0\u00a0\u00a0 11202( 99.7%)\u00a0\u00a0\u00a0\u00a0\u00a0 11237(100.0%)<br \/>\u00a0\u00a0 100\u00a0\u00a0\u00a0\u00a0\u00a0 10578( 94.1%)\u00a0\u00a0\u00a0\u00a0\u00a0 10989( 97.8%)\u00a0\u00a0\u00a0\u00a0\u00a0 11192( 99.6%)<br \/>\u00a0\u00a0 150\u00a0\u00a0\u00a0\u00a0\u00a0 10082( 89.7%)\u00a0\u00a0\u00a0\u00a0\u00a0 10615( 94.4%)\u00a0\u00a0\u00a0\u00a0\u00a0 11020( 98.0%)<br \/>\u00a0\u00a0 200\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 9090( 80.9%)\u00a0\u00a0\u00a0\u00a0\u00a0 10048( 89.4%)\u00a0\u00a0\u00a0\u00a0\u00a0 10671( 94.9%)<br \/>\u00a0\u00a0 250\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 6152( 54.7%)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 8066( 71.8%)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 9472( 84.3%)<\/p>\n<p>\u00a0<\/p>\n<p><em><strong>Result for 16S-mockS.1_V4_R2-hdr.fastq, with the default parameters<\/strong><\/em><\/p>\n<p>\u00a0<\/p>\n<p>11241 reads, max len 283, avg 276.4<br \/><br \/>Length\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 MaxEE 0.50\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 MaxEE 1.00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 MaxEE 2.00<br \/>------\u00a0\u00a0 ----------------\u00a0\u00a0 ----------------\u00a0\u00a0 ----------------<br \/>\u00a0\u00a0\u00a0 50\u00a0\u00a0\u00a0\u00a0\u00a0 10816( 96.2%)\u00a0\u00a0\u00a0\u00a0\u00a0 11060( 98.4%)\u00a0\u00a0\u00a0\u00a0\u00a0 11192( 99.6%)<br \/>\u00a0\u00a0 100\u00a0\u00a0\u00a0\u00a0\u00a0 10232( 91.0%)\u00a0\u00a0\u00a0\u00a0\u00a0 10712( 95.3%)\u00a0\u00a0\u00a0\u00a0\u00a0 11032( 98.1%)<br \/>\u00a0\u00a0 150\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 8680( 77.2%)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 9946( 88.5%)\u00a0\u00a0\u00a0\u00a0\u00a0 10676( 95.0%)<br \/>\u00a0\u00a0 200\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 4330( 38.5%)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 7227( 64.3%)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 9178( 81.6%)<br \/>\u00a0\u00a0 250\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 74(\u00a0 0.7%)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 469(\u00a0 4.2%)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1634( 14.5%)<\/p>","order_id":"2","name":"Expected result","data_by_id":"1","type_id":"17","source_data":{"result":"<p><em><strong>Result for 16S-mockS.1_V4_R1-hdr.fastq, with the default parameters<\/strong><\/em><\/p>\n<p>\u00a0<\/p>\n<p>11241 reads, max len 282, avg 277.5<br \/><br \/>Length\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 MaxEE 0.50\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 MaxEE 1.00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 MaxEE 2.00<br \/>------\u00a0\u00a0 ----------------\u00a0\u00a0 ----------------\u00a0\u00a0 ----------------<br \/>\u00a0\u00a0\u00a0 50\u00a0\u00a0\u00a0\u00a0\u00a0 11030( 98.1%)\u00a0\u00a0\u00a0\u00a0\u00a0 11202( 99.7%)\u00a0\u00a0\u00a0\u00a0\u00a0 11237(100.0%)<br \/>\u00a0\u00a0 100\u00a0\u00a0\u00a0\u00a0\u00a0 10578( 94.1%)\u00a0\u00a0\u00a0\u00a0\u00a0 10989( 97.8%)\u00a0\u00a0\u00a0\u00a0\u00a0 11192( 99.6%)<br \/>\u00a0\u00a0 150\u00a0\u00a0\u00a0\u00a0\u00a0 10082( 89.7%)\u00a0\u00a0\u00a0\u00a0\u00a0 10615( 94.4%)\u00a0\u00a0\u00a0\u00a0\u00a0 11020( 98.0%)<br \/>\u00a0\u00a0 200\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 9090( 80.9%)\u00a0\u00a0\u00a0\u00a0\u00a0 10048( 89.4%)\u00a0\u00a0\u00a0\u00a0\u00a0 10671( 94.9%)<br \/>\u00a0\u00a0 250\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 6152( 54.7%)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 8066( 71.8%)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 9472( 84.3%)<\/p>\n<p>\u00a0<\/p>\n<p><em><strong>Result for 16S-mockS.1_V4_R2-hdr.fastq, with the default parameters<\/strong><\/em><\/p>\n<p>\u00a0<\/p>\n<p>11241 reads, max len 283, avg 276.4<br \/><br \/>Length\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 MaxEE 0.50\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 MaxEE 1.00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 MaxEE 2.00<br \/>------\u00a0\u00a0 ----------------\u00a0\u00a0 ----------------\u00a0\u00a0 ----------------<br \/>\u00a0\u00a0\u00a0 50\u00a0\u00a0\u00a0\u00a0\u00a0 10816( 96.2%)\u00a0\u00a0\u00a0\u00a0\u00a0 11060( 98.4%)\u00a0\u00a0\u00a0\u00a0\u00a0 11192( 99.6%)<br \/>\u00a0\u00a0 100\u00a0\u00a0\u00a0\u00a0\u00a0 10232( 91.0%)\u00a0\u00a0\u00a0\u00a0\u00a0 10712( 95.3%)\u00a0\u00a0\u00a0\u00a0\u00a0 11032( 98.1%)<br \/>\u00a0\u00a0 150\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 8680( 77.2%)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 9946( 88.5%)\u00a0\u00a0\u00a0\u00a0\u00a0 10676( 95.0%)<br \/>\u00a0\u00a0 200\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 4330( 38.5%)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 7227( 64.3%)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 9178( 81.6%)<br \/>\u00a0\u00a0 250\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 74(\u00a0 0.7%)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 469(\u00a0 4.2%)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1634( 14.5%)<\/p>"},"is_project":0}]},{"id":"660656","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"12B936F95DBC4633A850A3ACDBAA065B","previous_guid":"9A69F3587F494671AA23EA9868479844","previous_id":"660625","last_modified":"1536056143","components":[{"component_id":"1190469","previous_id":0,"original_id":"0","guid":"E880E828473C416A952B46E9D4F85652","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Filter reads ","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Filter reads "},"is_project":0},{"component_id":"1190468","previous_id":"1190469","original_id":"0","guid":"F24D0427105543599E3080AFC510EA8E","previous_guid":"E880E828473C416A952B46E9D4F85652","component_type_id":"1","data_id":null,"data":"<p>The <strong>-fastq_filter<\/strong> command performs quality filtering and conversion of a FASTQ to a FASTA file.<\/p>\n<p>\u00a0<\/p>\n<p>This command has several output parameters :<\/p>\n<p>\u00a0<\/p>\n<table style=\"caret-color: #000000; font-family: HelveticaNeue; letter-spacing: normal; text-indent: 0px; text-transform: none; word-spacing: 0px; -moz-text-size-adjust: auto; -webkit-text-stroke-width: 0px; text-decoration: none; width: 95.2127%;\" border=\"0\" summary=\"Table\" cellspacing=\"0\" cellpadding=\"5\">\n<tbody>\n<tr style=\"height: 19px;\">\n<td style=\"text-align: right; width: 28.8%; height: 19px;\" align=\"right\" valign=\"top\">-fastqout filename<\/td>\n<td style=\"text-align: justify; width: 64.2%; height: 19px;\" align=\"left\" valign=\"top\">FASTQ output file.<\/td>\n<\/tr>\n<tr style=\"height: 19px;\">\n<td style=\"text-align: right; width: 28.8%; height: 19px;\" align=\"right\" valign=\"top\">-fastaout filename<\/td>\n<td style=\"text-align: justify; width: 64.2%; height: 19px;\" align=\"left\" valign=\"top\">FASTA output file.<\/td>\n<\/tr>\n<tr style=\"height: 19px;\">\n<td style=\"text-align: right; width: 28.8%; height: 19px;\" align=\"right\" valign=\"top\">-fastqout_discarded filename<\/td>\n<td style=\"text-align: justify; width: 64.2%; height: 19px;\" align=\"left\" valign=\"top\">FASTQ output file for discarded reads.<\/td>\n<\/tr>\n<tr style=\"height: 19px;\">\n<td style=\"text-align: right; width: 28.8%; height: 19px;\" align=\"right\" valign=\"top\">-fastaout_discarded filename<\/td>\n<td style=\"text-align: justify; width: 64.2%; height: 19px;\" align=\"left\" valign=\"top\">FASTA output file for discarded reads.<\/td>\n<\/tr>\n<tr style=\"height: 56px;\">\n<td style=\"text-align: right; width: 28.8%; height: 56px;\" align=\"right\" valign=\"top\">-relabel prefix<\/td>\n<td style=\"text-align: justify; width: 64.2%; height: 56px;\" align=\"left\" valign=\"top\">Generate new labels for the output sequences. They will be labeled prefix1, prefix2 and so on. For example, if you use -relabel SampleA. then the labels will be SampleA.1, SampleA.2 etc.<\/td>\n<\/tr>\n<tr style=\"height: 58.6px;\">\n<td style=\"text-align: right; width: 28.8%; height: 58.6px;\" align=\"right\" valign=\"top\">-fastq_eeout<\/td>\n<td style=\"text-align: justify; width: 64.2%; height: 58.6px;\" align=\"left\" valign=\"top\">Append the expected numner of errors according to the Q scores to the label in the format 'ee=xx;'. Expected errors are calculated after truncation, if applicable.<\/td>\n<\/tr>\n<tr style=\"height: 19px;\">\n<td style=\"text-align: right; width: 28.8%; height: 19px;\" align=\"right\" valign=\"top\">-sample string<\/td>\n<td style=\"text-align: justify; width: 64.2%; height: 19px;\" align=\"left\" valign=\"top\">Append sample=string; to the read label<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<p>\u00a0<\/p>\n<p>The command has also several filtering options :<\/p>\n<p>\u00a0<\/p>\n<table style=\"width: 95.6303%;\" border=\"0\" summary=\"Table\" cellspacing=\"0\" cellpadding=\"5\">\n<tbody>\n<tr>\n<td style=\"width: 28.6555%; text-align: right;\" align=\"right\" valign=\"top\">-fastq_truncqual N<\/td>\n<td style=\"width: 66.5993%; text-align: justify;\" align=\"left\" valign=\"top\">Truncate the read at the first position having quality score &lt;= N, so that all remaining quality scores are &gt;N.<\/td>\n<\/tr>\n<tr>\n<td style=\"width: 28.6555%; text-align: right;\" align=\"right\" valign=\"top\">-fastq_maxee E<\/td>\n<td style=\"width: 66.5993%; text-align: justify;\" align=\"left\" valign=\"top\">Discard reads with &gt; E total expected errors for all bases in the read after any truncation options have been applied.<\/td>\n<\/tr>\n<tr>\n<td style=\"width: 28.6555%; text-align: right;\" align=\"right\" valign=\"top\">-fastq_trunclen L<\/td>\n<td style=\"width: 66.5993%; text-align: justify;\" align=\"left\" valign=\"top\">Truncate sequences at the L'th base. If the sequence is shorter than L, the read is discarded.<\/td>\n<\/tr>\n<tr>\n<td style=\"width: 28.6555%; text-align: right;\" align=\"right\" valign=\"top\">-fastq_minlen L<\/td>\n<td style=\"width: 66.5993%; text-align: justify;\" align=\"left\" valign=\"top\">Discard sequences with &lt; L letters.<\/td>\n<\/tr>\n<tr>\n<td style=\"width: 28.6555%; text-align: right;\" align=\"right\" valign=\"top\">-fastq_stripleft N<\/td>\n<td style=\"width: 66.5993%; text-align: justify;\" align=\"left\" valign=\"top\">Delete the first N bases in the read.<\/td>\n<\/tr>\n<tr>\n<td style=\"width: 28.6555%; text-align: right;\" align=\"right\" valign=\"top\">-fastq_maxee_rate E<\/td>\n<td style=\"width: 66.5993%; text-align: justify;\" align=\"left\" valign=\"top\">\n<p>Discard reads with &gt; E expected errors per base.Calculated after any truncation options have been applied.<\/p>\n<p>For example, with the fastq_maxee_rate option set to 0.01, then a read of length 100 will be discarded if the expected errors is &gt;1, and a read of length 1,000 will be discarded if the expected errors is &gt;10.<\/p>\n<\/td>\n<\/tr>\n<tr>\n<td style=\"width: 28.6555%; text-align: right;\" align=\"right\" valign=\"top\">-fastq_maxns k<\/td>\n<td style=\"width: 66.5993%; text-align: justify;\" align=\"left\" valign=\"top\">Discard if there are &gt;k Ns in the read.<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>\n<p><strong>examples of use :<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>1. Simple conversion FASTQ to FASTA format :<\/p>\n<pre class=\"language-markup\"><code>.\/usearch -fastq_filter 16S-mockS.1_V4_R1-hdr.fastq -fastaout 16S-mockS.1_V4_R1-hdr.fasta<\/code><\/pre>\n<p>\u00a0<\/p>\n<p>2. Truncate to length 150, discard if expected errors &gt; 0.5, and convert to FASTA:<\/p>\n<pre class=\"language-markup\"><code>.\/usearch -fastq_filter 16S-mockS.1_V4_R1-hdr.fastq -fastq_trunclen 150 -fastq_maxee 0.5 -fastaout 16S-mockS.1_V4_R1-hdr.fasta<\/code><\/pre>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>The <strong>-fastq_filter<\/strong> command performs quality filtering and conversion of a FASTQ to a FASTA file.<\/p>\n<p>\u00a0<\/p>\n<p>This command has several output parameters :<\/p>\n<p>\u00a0<\/p>\n<table style=\"caret-color: #000000; font-family: HelveticaNeue; letter-spacing: normal; text-indent: 0px; text-transform: none; word-spacing: 0px; -moz-text-size-adjust: auto; -webkit-text-stroke-width: 0px; text-decoration: none; width: 95.2127%;\" border=\"0\" summary=\"Table\" cellspacing=\"0\" cellpadding=\"5\">\n<tbody>\n<tr style=\"height: 19px;\">\n<td style=\"text-align: right; width: 28.8%; height: 19px;\" align=\"right\" valign=\"top\">-fastqout filename<\/td>\n<td style=\"text-align: justify; width: 64.2%; height: 19px;\" align=\"left\" valign=\"top\">FASTQ output file.<\/td>\n<\/tr>\n<tr style=\"height: 19px;\">\n<td style=\"text-align: right; width: 28.8%; height: 19px;\" align=\"right\" valign=\"top\">-fastaout filename<\/td>\n<td style=\"text-align: justify; width: 64.2%; height: 19px;\" align=\"left\" valign=\"top\">FASTA output file.<\/td>\n<\/tr>\n<tr style=\"height: 19px;\">\n<td style=\"text-align: right; width: 28.8%; height: 19px;\" align=\"right\" valign=\"top\">-fastqout_discarded filename<\/td>\n<td style=\"text-align: justify; width: 64.2%; height: 19px;\" align=\"left\" valign=\"top\">FASTQ output file for discarded reads.<\/td>\n<\/tr>\n<tr style=\"height: 19px;\">\n<td style=\"text-align: right; width: 28.8%; height: 19px;\" align=\"right\" valign=\"top\">-fastaout_discarded filename<\/td>\n<td style=\"text-align: justify; width: 64.2%; height: 19px;\" align=\"left\" valign=\"top\">FASTA output file for discarded reads.<\/td>\n<\/tr>\n<tr style=\"height: 56px;\">\n<td style=\"text-align: right; width: 28.8%; height: 56px;\" align=\"right\" valign=\"top\">-relabel prefix<\/td>\n<td style=\"text-align: justify; width: 64.2%; height: 56px;\" align=\"left\" valign=\"top\">Generate new labels for the output sequences. They will be labeled prefix1, prefix2 and so on. For example, if you use -relabel SampleA. then the labels will be SampleA.1, SampleA.2 etc.<\/td>\n<\/tr>\n<tr style=\"height: 58.6px;\">\n<td style=\"text-align: right; width: 28.8%; height: 58.6px;\" align=\"right\" valign=\"top\">-fastq_eeout<\/td>\n<td style=\"text-align: justify; width: 64.2%; height: 58.6px;\" align=\"left\" valign=\"top\">Append the expected numner of errors according to the Q scores to the label in the format 'ee=xx;'. Expected errors are calculated after truncation, if applicable.<\/td>\n<\/tr>\n<tr style=\"height: 19px;\">\n<td style=\"text-align: right; width: 28.8%; height: 19px;\" align=\"right\" valign=\"top\">-sample string<\/td>\n<td style=\"text-align: justify; width: 64.2%; height: 19px;\" align=\"left\" valign=\"top\">Append sample=string; to the read label<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<p>\u00a0<\/p>\n<p>The command has also several filtering options :<\/p>\n<p>\u00a0<\/p>\n<table style=\"width: 95.6303%;\" border=\"0\" summary=\"Table\" cellspacing=\"0\" cellpadding=\"5\">\n<tbody>\n<tr>\n<td style=\"width: 28.6555%; text-align: right;\" align=\"right\" valign=\"top\">-fastq_truncqual N<\/td>\n<td style=\"width: 66.5993%; text-align: justify;\" align=\"left\" valign=\"top\">Truncate the read at the first position having quality score &lt;= N, so that all remaining quality scores are &gt;N.<\/td>\n<\/tr>\n<tr>\n<td style=\"width: 28.6555%; text-align: right;\" align=\"right\" valign=\"top\">-fastq_maxee E<\/td>\n<td style=\"width: 66.5993%; text-align: justify;\" align=\"left\" valign=\"top\">Discard reads with &gt; E total expected errors for all bases in the read after any truncation options have been applied.<\/td>\n<\/tr>\n<tr>\n<td style=\"width: 28.6555%; text-align: right;\" align=\"right\" valign=\"top\">-fastq_trunclen L<\/td>\n<td style=\"width: 66.5993%; text-align: justify;\" align=\"left\" valign=\"top\">Truncate sequences at the L'th base. If the sequence is shorter than L, the read is discarded.<\/td>\n<\/tr>\n<tr>\n<td style=\"width: 28.6555%; text-align: right;\" align=\"right\" valign=\"top\">-fastq_minlen L<\/td>\n<td style=\"width: 66.5993%; text-align: justify;\" align=\"left\" valign=\"top\">Discard sequences with &lt; L letters.<\/td>\n<\/tr>\n<tr>\n<td style=\"width: 28.6555%; text-align: right;\" align=\"right\" valign=\"top\">-fastq_stripleft N<\/td>\n<td style=\"width: 66.5993%; text-align: justify;\" align=\"left\" valign=\"top\">Delete the first N bases in the read.<\/td>\n<\/tr>\n<tr>\n<td style=\"width: 28.6555%; text-align: right;\" align=\"right\" valign=\"top\">-fastq_maxee_rate E<\/td>\n<td style=\"width: 66.5993%; text-align: justify;\" align=\"left\" valign=\"top\">\n<p>Discard reads with &gt; E expected errors per base.Calculated after any truncation options have been applied.<\/p>\n<p>For example, with the fastq_maxee_rate option set to 0.01, then a read of length 100 will be discarded if the expected errors is &gt;1, and a read of length 1,000 will be discarded if the expected errors is &gt;10.<\/p>\n<\/td>\n<\/tr>\n<tr>\n<td style=\"width: 28.6555%; text-align: right;\" align=\"right\" valign=\"top\">-fastq_maxns k<\/td>\n<td style=\"width: 66.5993%; text-align: justify;\" align=\"left\" valign=\"top\">Discard if there are &gt;k Ns in the read.<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>\n<p><strong>examples of use :<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>1. Simple conversion FASTQ to FASTA format :<\/p>\n<pre class=\"language-markup\"><code>.\/usearch -fastq_filter 16S-mockS.1_V4_R1-hdr.fastq -fastaout 16S-mockS.1_V4_R1-hdr.fasta<\/code><\/pre>\n<p>\u00a0<\/p>\n<p>2. Truncate to length 150, discard if expected errors &gt; 0.5, and convert to FASTA:<\/p>\n<pre class=\"language-markup\"><code>.\/usearch -fastq_filter 16S-mockS.1_V4_R1-hdr.fastq -fastq_trunclen 150 -fastq_maxee 0.5 -fastaout 16S-mockS.1_V4_R1-hdr.fasta<\/code><\/pre>"},"is_project":0},{"component_id":"1190698","previous_id":"1190468","original_id":"0","guid":"CFBE9B43CE104EED93DD229818B7E2FE","previous_guid":"F24D0427105543599E3080AFC510EA8E","component_type_id":"17","data_id":"1818","data":"<p><strong>Results for the command <\/strong><\/p>\n<p><strong><em>.\/usearch -fastq_filter 16S-mockS.1_V4_R1-hdr.fastq -fastq_trunclen 150 -fastq_maxee 0.5 <\/em><\/strong><\/p>\n<p>\u00a0<\/p>\n<p>00:00 1.9Mb\u00a0 FASTQ base 33 for file 16S-mockS.1_V4_R1-hdr.fastq<br \/>00:00 2.4Mb\u00a0\u00a0 100.0% Filtering, 89.7% passed<br \/>11241\u00a0 Reads (11.2k)<br \/>0\u00a0 Discarded reads length &lt; 150<br \/>1159\u00a0 Discarded reads with expected errs &gt; 0.50<br \/>10082\u00a0 Filtered reads (10.1k, 89.7%)<\/p>\n<p>\u00a0<\/p>\n<p><strong>Result for the command <\/strong><\/p>\n<p><strong><em>.\/usearch -fastq_filter 16S-mockS.1_V4_R2-hdr.fastq -fastq_trunclen 150 -fastq_maxee 0.5 <\/em><\/strong><\/p>\n<p>\u00a0<\/p>\n<p>00:00 1.9Mb\u00a0 FASTQ base 33 for file 16S-mockS.1_V4_R2-hdr.fastq<br \/>00:01 2.4Mb\u00a0\u00a0 100.0% Filtering, 77.2% passed<br \/>11241\u00a0 Reads (11.2k)<br \/>0\u00a0 Discarded reads length &lt; 150<br \/>2561\u00a0 Discarded reads with expected errs &gt; 0.50<br \/>8680\u00a0 Filtered reads (8680, 77.2%)<\/p>","order_id":"2","name":"Expected result","data_by_id":"1","type_id":"17","source_data":{"result":"<p><strong>Results for the command <\/strong><\/p>\n<p><strong><em>.\/usearch -fastq_filter 16S-mockS.1_V4_R1-hdr.fastq -fastq_trunclen 150 -fastq_maxee 0.5 <\/em><\/strong><\/p>\n<p>\u00a0<\/p>\n<p>00:00 1.9Mb\u00a0 FASTQ base 33 for file 16S-mockS.1_V4_R1-hdr.fastq<br \/>00:00 2.4Mb\u00a0\u00a0 100.0% Filtering, 89.7% passed<br \/>11241\u00a0 Reads (11.2k)<br \/>0\u00a0 Discarded reads length &lt; 150<br \/>1159\u00a0 Discarded reads with expected errs &gt; 0.50<br \/>10082\u00a0 Filtered reads (10.1k, 89.7%)<\/p>\n<p>\u00a0<\/p>\n<p><strong>Result for the command <\/strong><\/p>\n<p><strong><em>.\/usearch -fastq_filter 16S-mockS.1_V4_R2-hdr.fastq -fastq_trunclen 150 -fastq_maxee 0.5 <\/em><\/strong><\/p>\n<p>\u00a0<\/p>\n<p>00:00 1.9Mb\u00a0 FASTQ base 33 for file 16S-mockS.1_V4_R2-hdr.fastq<br \/>00:01 2.4Mb\u00a0\u00a0 100.0% Filtering, 77.2% passed<br \/>11241\u00a0 Reads (11.2k)<br \/>0\u00a0 Discarded reads length &lt; 150<br \/>2561\u00a0 Discarded reads with expected errs &gt; 0.50<br \/>8680\u00a0 Filtered reads (8680, 77.2%)<\/p>"},"is_project":0}]}]}