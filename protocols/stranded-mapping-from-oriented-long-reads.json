{"id":22553,"title":"Stranded Mapping from Oriented Long Reads","title_html":"Stranded Mapping from Oriented Long Reads","image":{"source":"https:\/\/s3.amazonaws.com\/pr-journal\/vi4jpt6.png","placeholder":"https:\/\/s3.amazonaws.com\/pr-journal\/vi4jpt6.png"},"doi":"dx.doi.org\/10.17504\/protocols.io.z9zf976","doi_status":2,"uri":"stranded-mapping-from-oriented-long-reads-z9zf976","type_id":1,"published_on":1556494473,"version_id":3,"created_on":1556060987,"categories":null,"creator":{"name":"David A. Eccles","affiliation":"Malaghan Institute of Medical Research (NZ)","username":"david-eccles","link":"https:\/\/bioinformatics.stackexchange.com\/a\/3922\/73","image":{"source":"https:\/\/s3.amazonaws.com\/pr-journal\/vi7jpt6.jpg","placeholder":"https:\/\/s3.amazonaws.com\/pr-journal\/vi7jpt6.jpg"},"badges":[{"id":3,"image":{"source":"\/img\/badges\/silver.svg","placeholder":"\/img\/badges\/silver.svg"},"name":"Power author!"},{"id":6,"image":{"source":"\/img\/badges\/socialbutterfly.svg","placeholder":"\/img\/badges\/socialbutterfly.svg"},"name":"Social butterfly"}],"research_interests":null},"journal":null,"journal_name":null,"journal_link":null,"public":1,"has_versions":1,"link":"https:\/\/bioinformatics.stackexchange.com\/a\/3922\/73","total_collections":0,"number_of_steps":7,"authors":[{"name":"David Eccles","affiliation":"Malaghan Institute of Medical Research (NZ)","username":"david-eccles","link":null,"image":{"source":"https:\/\/s3.amazonaws.com\/pr-journal\/vi7jpt6.jpg","placeholder":"https:\/\/s3.amazonaws.com\/pr-journal\/vi7jpt6.jpg"},"badges":[],"research_interests":null}],"versions":[],"groups":[],"has_subprotocols":0,"is_subprotocol":0,"is_bookmarked":0,"can_be_copied":1,"can_remove_fork":1,"forks_count":{"private":0,"public":0},"access":{"can_view":1,"can_remove":0,"can_add":0,"can_edit":0,"can_publish":0,"can_get_doi":0,"can_share":1,"can_move":1,"can_move_outside":1,"can_transfer":1,"can_download":1,"is_locked":0},"steps":[{"id":733606,"guid":"EE99024E1F3A4D5EBA8EA5100094D54D","previous_id":733612,"previous_guid":"96A9D8A9E033411D98A328BA6882298E","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"C2EA9E4F7ECD4D9D9DFFFA1A0F2A7BF9","order_id":1,"type_id":6,"title":"Section","source":{"title":"Read Mapping"}},{"id":1054724,"guid":"C411F366810D4BD99843080B85A1C440","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Map the long reads to the genome using minimap2, using samtools to covert to a sorted BAM format. This is where the reverse complementing done during demultiplexing gives a big saving of effort.<\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">mkdir -p mapped;<\/div><div class = \"text-block\">for bc in $(awk '{print $2}' barcode_counts.txt);<\/div><div class = \"text-block\">  do echo ${bc};<\/div><div class = \"text-block\">  minimap2 -t 10 -a -x splice mmus_ucsc_all-splice.idx oriented\/${bc}_reads_dirAdjusted.fastq.gz | \\<\/div><div class = \"text-block\">    samtools view -b | samtools sort > mapped\/mm2_called_${bc}_vs_MmusG.bam;<\/div><div class = \"text-block\">done<\/div><\/div><\/code><\/pre><\/div><\/div>"}},{"id":1054725,"guid":"C4C15090662411E9AA96D559264EA12D","order_id":2,"type_id":8,"title":"software","source":{"name":"SAMtools","developer":"Wellcome Trust Sanger Institute","repository":"https:\/\/github.com\/samtools\/samtools","link":"http:\/\/www.htslib.org\/download\/","os_name":"Linux","os_version":""}}],"cases":null,"data":null,"section":null,"section_color":null,"duration":0},{"id":733607,"guid":"D76E9BC5827B41C4924B5FCCC454A484","previous_id":733624,"previous_guid":"3D9B21C91F18474F9EE2E026DF39DC67","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"230B0CE9C3B44447AA9A1C2C8069C5D1","order_id":1,"type_id":6,"title":"Section","source":{"title":"Sanity Check"}},{"id":1054724,"guid":"2EAD22A47E624A9A9013EF2612B3D4E3","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>If this has worked properly, then mapping human or mouse to the mitochondrial genome should show most expression appearing on the positive strand, with a small scattering of negative-strand expression, a bit like the <\/span><span style = \"font-style:italic;\">Expected Results<\/span><span> shown here.<\/span><\/div><div class = \"text-block\">If not, check for the following issues:<\/div><div class = \"text-block\"><ul style = \"list-style-type:disc;\"><li style = \"counter-reset:ol0;list-style-type:disc;\"><span>Tracks not displaying at all in JBrowse -- make sure track IDs inside square brackets are of the form [ <\/span><span style = \"font-style:italic;\">tracks.<unique-id-without-dots>-track<\/span><span> ]<\/span><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">JBrowse track is reflected in the X axis -- make sure that the reverse bedgraph file is orientated the correct way; it should be created with the '-f 0x10' flag (no capitalisation).<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><span>JBrowse track only shows one direction -- make sure that the reverse bedgraph file has <\/span><span style = \"font-style:italic;\">negative<\/span><span> values, and re-generate the bigwig file<\/span><\/li><\/ul><\/div><\/div>"}},{"id":1054725,"guid":"28A728F594C64775A57968B32466932F","order_id":2,"type_id":17,"title":"result","source":{"body":"<div class = \"text-blocks\"><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/pr-journal\/6qmjpt6.png\" \/><\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":null,"duration":0},{"id":733612,"guid":"96A9D8A9E033411D98A328BA6882298E","previous_id":733629,"previous_guid":"A646D4F0661F11E9BF52E752A6ECEFB5","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"512EDD668FE0495FB589935CB692F164","order_id":1,"type_id":6,"title":"Section","source":{"title":"Index Preparation"}},{"id":1054724,"guid":"654380CA4A594B669CF823EED0C3B9FF","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Prepare genome index for spliced alignment\n <\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">minimap2 -d mmus_ucsc_all-splice.idx -Q -t 10 -x splice mmus_ucsc_all.fa<\/div><\/div><\/code><\/pre><\/div><\/div>"}},{"id":1054725,"guid":"44D4C535A3474BBF8AAD1BE36674BBFD","order_id":2,"type_id":8,"title":"software","source":{"name":"minimap2","developer":"Heng Li","repository":"https:\/\/github.com\/lh3\/minimap2","link":"https:\/\/github.com\/lh3\/minimap2\/releases","os_name":"Linux","os_version":""}}],"cases":null,"data":null,"section":null,"section_color":null,"duration":0},{"id":733622,"guid":"85F09036A8A24C97A96DFB15F1D1CA87","previous_id":733606,"previous_guid":"EE99024E1F3A4D5EBA8EA5100094D54D","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"06106C9E1C5A464682ADB2EC54288CF6","order_id":1,"type_id":6,"title":"Section","source":{"title":"Creating BigWig Coverage Files"}},{"id":1054724,"guid":"1353626896FD4A0DB5B8C02BE2B12493","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">A bedGraph of coverage is created using samtools mpileup and <\/div><div class = \"text-block\"><a style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">mpileupDC.pl<\/span><\/a><\/div><div class = \"text-block\"><span>, excluding any skipped intronic sequence. When 'mpileupDC.pl' is provided with a single file, it will output a bedGraph file with a header line starting with '##'; this header line is removed. The particular JBrowse plugin that I use for stranded display requires that the reverse strand have <\/span><span style = \"font-style:italic;\">negative<\/span><span> coverage values, so that file needs to be changed:<\/span><\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">for bc in $(awk '{print $2}' barcode_counts.txt);<\/div><div class = \"text-block\">  do echo ${bc};<\/div><div class = \"text-block\">  samtools view -b -F 0x10 mapped\/mm2_called_${bc}_vs_MmusG.bam | \\<\/div><div class = \"text-block\">    samtools mpileup -A -B -Q 0 -q 0 -I -q 0 -Q 0 - | \\<\/div><div class = \"text-block\">    mpileupDC.pl | tail -n +2 > mapped\/mm2_called_${bc}_vs_MmusG.bg.plus<\/div><div class = \"text-block\">  samtools view -b -f 0x10 mapped\/mm2_called_${bc}_vs_MmusG.bam | \\<\/div><div class = \"text-block\">    samtools mpileup -A -B -Q 0 -q 0 -I -q 0 -Q 0 - | \\<\/div><div class = \"text-block\">    mpileupDC.pl | tail -n +2 > mapped\/mm2_called_${bc}_vs_MmusG.bg.minus<\/div><div class = \"text-block\">  perl -i -pe 's\/([0-9]+)$\/-$1\/' mapped\/mm2_called_${bc}_vs_MmusG.bg.minus<\/div><div class = \"text-block\">done;<\/div><\/div><\/code><\/pre><\/div><\/div>"}},{"id":1054725,"guid":"F3E77CB0662811E9973C7782266EF909","order_id":2,"type_id":23,"title":"file","source":{"source":"https:\/\/s3.amazonaws.com\/pr-journal\/bf7njpt6.pl","placeholder":"\/img\/extensions\/file.png","original_name":"mpileupDC.pl"}}],"cases":null,"data":null,"section":null,"section_color":null,"duration":0},{"id":733623,"guid":"61250256A35944C482317F938B61E7B8","previous_id":733622,"previous_guid":"85F09036A8A24C97A96DFB15F1D1CA87","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"62A56F901E1A40ADA63EB6DC9F14EAA6","order_id":1,"type_id":6,"title":"Section","source":{"title":"Creating BigWig Coverage Files"}},{"id":1054724,"guid":"2E32501E45444EE09C7B5F6FBC75EBA3","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Stranded bedgraph files are converted to bigwig. This requires BEDTools and a genome information file containing chromosome lengths (one for Mmus\/mm10 is attached to this step).<\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">for bc in $(awk '{print $2}' barcode_counts.txt);<\/div><div class = \"text-block\">  do echo ${bc};<\/div><div class = \"text-block\">  basename=\"mapped\/mm2_called_${bc}_vs_MmusG\"<\/div><div class = \"text-block\">  bedGraphToBigWig ${basename}.bg.plus Mmus_genome.chrInfo.txt ${basename}.bw.plus<\/div><div class = \"text-block\">  bedGraphToBigWig ${basename}.bg.minus Mmus_genome.chrInfo.txt ${basename}.bw.minus <\/div><div class = \"text-block\">done<\/div><\/div><\/code><\/pre><\/div><\/div>"}},{"id":1054725,"guid":"269CE57721154A059DD356D4E1527D1F","order_id":2,"type_id":8,"title":"software","source":{"name":"BEDTools","developer":"Quinlan laboratory, University of Utah","repository":"https:\/\/github.com\/arq5x\/bedtools2\/","link":"http:\/\/omictools.com\/bedtools-tool","os_name":"","os_version":""}},{"id":1054726,"guid":"CCFDE7C06A0A11E9A2CFBDCCD36822E4","order_id":3,"type_id":23,"title":"file","source":{"source":"https:\/\/s3.amazonaws.com\/pr-journal\/bgevjpt6.txt","placeholder":"https:\/\/www.protocols.io\/img\/extensions\/txt.png","original_name":"Mmus_genome.chrInfo.txt"}}],"cases":null,"data":null,"section":null,"section_color":null,"duration":0},{"id":733624,"guid":"3D9B21C91F18474F9EE2E026DF39DC67","previous_id":733623,"previous_guid":"61250256A35944C482317F938B61E7B8","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"6F784A1531354545B124DA93E1ACDA05","order_id":1,"type_id":6,"title":"Section","source":{"title":"JBrowse Configuration"}},{"id":1054724,"guid":"2E47758B170E4CC1B5C9D68AAC710AA2","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>Each track should have its own JBrowse configuration section using the <\/span><span style = \"font-style:italic;\">StrangedBigWig<\/span><span> class and <\/span><span style = \"font-style:italic;\">StrandedXYPlot<\/span><span> type. An example is shown here:<\/span><\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">[tracks.BWCG004-4T1-BC04-both-track ]<\/div><div class = \"text-block\"> storeClass     = StrandedPlotPlugin\/Store\/SeqFeature\/StrandedBigWig<\/div><div class = \"text-block\"> urlTemplate    = bw\/mm2_called_CG004_BC04_vs_MmusG.bw<\/div><div class = \"text-block\"> category       = MinION - Coverage<\/div><div class = \"text-block\"> type           = StrandedPlotPlugin\/View\/Track\/Wiggle\/StrandedXYPlot<\/div><div class = \"text-block\"> key            = MinION minimap2 coverage from CG004-4T1-WT (combined strands)<\/div><div class = \"text-block\"> scale          = log<\/div><div class = \"text-block\"> scoreType      = maxScore<\/div><div class = \"text-block\"> autoscale      = global<\/div><div class = \"text-block\"> style.pos_color = darkred<\/div><div class = \"text-block\"> style.neg_color = darkgreen<\/div><\/div><\/code><\/pre><\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":null,"duration":0},{"id":733629,"guid":"A646D4F0661F11E9BF52E752A6ECEFB5","previous_id":null,"previous_guid":null,"modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"87929022A9774B39865E46049EAD0585","order_id":1,"type_id":6,"title":"Section","source":{"title":"Orient Reads"}},{"id":1054724,"guid":"08D50BC1BA204A738BA4395EC207AC92","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Orient reads as per protocol <\/div><div class = \"text-block\"><a style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">Preparing Reads for Stranded Mapping<\/span><\/a><\/div><div class = \"text-block\">.<\/div><div class = \"text-block\">If this has been done, then the following command should produce output without errors:<\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">for bc in $(awk '{print $2}' barcode_counts.txt);<\/div><div class = \"text-block\">  do ls oriented\/${bc}_reads_dirAdjusted.fastq.gz;<\/div><div class = \"text-block\">done<\/div><\/div><\/code><\/pre><\/div><div class = \"text-block\">Example output:<\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">oriented\/BC03_reads_dirAdjusted.fastq.gz<\/div><div class = \"text-block\">oriented\/BC04_reads_dirAdjusted.fastq.gz<\/div><div class = \"text-block\">oriented\/BC05_reads_dirAdjusted.fastq.gz<\/div><div class = \"text-block\">oriented\/BC06_reads_dirAdjusted.fastq.gz<\/div><div class = \"text-block\">oriented\/BC07_reads_dirAdjusted.fastq.gz<\/div><div class = \"text-block\">oriented\/BC08_reads_dirAdjusted.fastq.gz<\/div><\/div><\/code><\/pre><\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#A492FF","duration":0}],"materials":[],"description":"<div class = \"text-blocks\"><div class = \"text-block\">This protocol demonstrates how to map strand-oriented long reads to a genome, and visualise them in a genome browser.<\/div><div class = \"text-block\">The general idea is to use minimap2 to create stranded BAM files, which are split for forward\/reverse orientation then converted into BigWig format for display in a genome browser.<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">Input(s)<\/span><span>: <\/span><\/div><div class = \"text-block\"><ul style = \"list-style-type:disc;\"><\/ul><\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">Output(s):<\/span><\/div><div class = \"text-block\"><ul style = \"list-style-type:disc;\"><li style = \"counter-reset:ol0;list-style-type:disc;\">Genome-mapped stranded BAM files<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">Genome-mapped stranded BigWig files<\/li><\/ul><\/div><\/div>","changed_on":1556494473}