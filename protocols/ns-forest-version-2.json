{"uri":"ns-forest-version-2-un7evhn","version_id":"0","protocol_name":"NS-Forest version 2","protocol_name_html":"NS-Forest version 2","is_retracted":"0","is_prepublished":"0","can_edit":"0","parent_id":null,"api_version":"1","is_new_mode":"0","last_modified":"1541791299","type_id":"1","link":null,"fork_id":"","public_fork_note":null,"number_of_steps":"4","has_versions":"0","first_published_date":null,"publish_date":"2018-11-09 19:21:39","documents":null,"have_protocol_in_step":"0","is_protocol_in_step":"0","vendor_name":"Contributed by users","vendor_link":"https:\/\/www.protocols.io","vendor_logo":"\/img\/vendors\/1.png","mod_mins":"-25","mod_secs":"12","description":"{\"blocks\":[{\"key\":\"2jout\",\"text\":\"NS-Forest is an alogrithm that determines the minimum set of genes that are necessary and sufficient to define a cell type cluster derived from single cell RNAseq expression data. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fl7oc\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fsrp8\",\"text\":\"Development and stable releases can be found at : \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7emms\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6smsu\",\"text\":\"https:\/\/github.com\/JCVenterInstitute\/NSForest\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":45,\"key\":0}],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"url\":\"https:\/\/github.com\/JCVenterInstitute\/NSForest\"}}}}","is_bookmarked":"0","can_reassign":"1","before_start":null,"has_guidelines":"0","materials":[],"materials_text":null,"warning":null,"version_class":"16831","public":"1","is_owner":"1","is_original_owner":"1","created_on":"1539627907","protocol_affiliation":"J. Craig Venter Institute","affiliation":null,"doi":"dx.doi.org\/10.17504\/protocols.io.un7evhn","doi_status":"2","changed_fork_steps":null,"profile_url":"w2t274y2w2s2","protocol_img":"https:\/\/www.protocols.io\/img\/default_protocol.png","profile_image":"\/img\/avatars\/009.png","full_name":"Brian Aevermann","created_by":"Brian Aevermann","private_link":"8768AAF3FA425FE2D0F21EAC05C66EE9","original_img":"1","username":"brian-aevermann","retraction_reason":null,"plos_id":null,"manuscript_citation":"<p>Aevermann BD, Novotny M, Bakken T, Miller JA, Diehl AD, Osumi-Sutherland D, Lasken RS, Lein ES, Scheuermann RH. Cell type discovery using single-cell transcriptomics: implications for ontological representation. Hum Mol Genet. 2018 May 1;27(R1):R40-R47. doi: 10.1093\/hmg\/ddy100.<\/p>","journal_name":null,"journal_link":null,"is_donations_disabled":"0","is_donations_disabled_by_user":"9","item_record_id":363914,"fork_info":[],"compare_forks":[],"protocols":[],"groups":[{"group_id":"523","group_uri":"hca","group_name":"Human Cell Atlas Method Development Community","group_logo":"https:\/\/s3.amazonaws.com\/pr-journal\/psucz36.png","tech_phone":null,"tech_email":null,"tech_use":"0","tech_hide":"0","requested_uid":null,"request_flag":null,"my_request":"0"}],"number_of_shared_runs":[],"ownership_history":[],"keywords":"Single Cell RNAseq, Cell Type Marker Genes, Human Cell Atlas","transfer_to_user":[],"sub_transfer":false,"is_transfer_pending":false,"number_of_bookmarks":"0","collections":[],"tags":[],"archived":0,"sub_authors":[],"sub_protocols_number":0,"can_edit_shared":0,"shared_access":null,"shared_runs":[],"is_shared_run":0,"is_shared":1,"show_comparison":false,"banner":null,"contact_badges":[{"badge_id":"2","badge_image":"\/img\/badges\/bronze.svg","badge_description":"Author"}],"number_of_comments":0,"is_locked":0,"is_locked_by":false,"authors":"Brian Aevermann,Richard Scheuermann","authors_list":[{"name":"Brian Aevermann","affiliation":"J. Craig Venter Institute","username":"brian-aevermann","profile_image":"\/img\/avatars\/009.png"},{"name":"Richard Scheuermann","affiliation":"J. Craig Venter Institute","username":"richard-scheuermann","profile_image":"\/img\/avatars\/016.png"}],"user":{"profile_image":"\/img\/avatars\/009.png","username":"brian-aevermann","full_name":"Brian Aevermann","created_by":"Brian Aevermann"},"access":{"can_view":"1","can_remove":"0","can_add":"0","can_edit":0,"can_publish":0,"can_get_doi":0,"can_share":"0","can_move":"1","can_transfer":"1","can_download":"1","is_locked":"0"},"is_contact_suspended":0,"guidelines":null,"status_id":"1","is_research":"1","status_info":"We use this protocol in our group and it is working","steps":[{"id":"674258","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"BD56FA70D0A711E8BC3A07887E45115E","previous_guid":null,"data":"{\"blocks\":[{\"key\":\"bikqr\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"br59e\",\"text\":\"1. The script is a Jupyter notebook in python 2.7. Required libraries: Numpy, Pandas, Sklearn, graphviz, numexpr\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"3c6rp\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"976lj\",\"text\":\"2. Build a Cell by Gene matrix where the values are either normalized or raw count expression values from a single cell RNAseq experiment (tsv or csv formats work by default); the first column should contain gene IDs; the first row should contain cell IDs that can be user defined\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"bjq5g\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"f7rq5\",\"text\":\"3. Add cluster labels as a column whereby each cell is uniquely assigned to a cluster; the header for the cluster label column must be \\\"Clusters\\\"; the labels themselves must be strings\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":55,\"length\":8,\"style\":\"bold\"},{\"offset\":136,\"length\":8,\"style\":\"bold\"}],\"entityRanges\":[],\"data\":[]},{\"key\":\"64ra3\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"1a1im\",\"text\":\"4. The gene IDs\\\/ symbols must be stripped of \\\" . \\\", \\\" - \\\", and \\\"@\\\", or other troublesome characters (replace with \\\"_\\\" or \\\"at\\\")    \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"9b8fg\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"1n38u\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"29eni\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"cas1d\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"eck82\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]}],\"entityMap\":[],\"guid\":\"BD56FA70D0A711E8BC3A07887E45115E\",\"id\":674258,\"previous_id\":null,\"previous_guid\":null,\"section\":\"Pre-analysis data preparation\"}","section":"Pre-analysis data preparation","case_id":null,"section_color":"#A492FF","protocol_id":"16831","previous_id":"0","last_modified":null},{"id":"674281","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"30F24FB0D0B311E8BC3A07887E45115E","previous_guid":"BD56FA70D0A711E8BC3A07887E45115E","data":"{\"blocks\":[{\"key\":\"9s4tk\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"ebks1\",\"text\":\"Step 1: Alter read function in first line of code by adding path to your file:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"dgb98\",\"text\":\"               dataFull = pd.read_table(\\\"Your\\\/Path\\\/Here\\\", index_col = 0)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"5jm2n\",\"text\":\"Step 2:  Dummy columns created and added to matrix \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"cd268\",\"text\":\"               -These binary columns are used for one vs all Random Forest modeling\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"ar166\",\"text\":\"Step 3: Generates a matrix of cluster median expression values\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"1ajde\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"2eutp\",\"text\":\"Step 4: Finds the number of dummy columns (ie. clusters) and prints that to screen as a sanity check\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"mvlv\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"ef69a\",\"text\":\"Step 5: Tunable parameters (code below). Change these as needed.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"8k0cf\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"1tau9\",\"text\":\"#Random Forest parameters\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"917t9\",\"text\":\"rfTrees=10000 #Number of trees\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"bi4ih\",\"text\":\"threads=1     #Number of threads to use, -1 is the greedy option where it will take all available CPUs\\\/RAM\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"ef5kj\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"7etne\",\"text\":\"#Filtering and ranking of genes from random forest parameters\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"779q9\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"ad3dj\",\"text\":\"InformativeGenes = 15 #How many top genes from the Random Forest ranked features will be evaluated for binariness \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"fmvv6\",\"text\":\"Genes_to_testing = 6    #How many top genes ranked by binary score will be evaluated in permutations by fbeta-score (as the number increases the number of permutation rises exponentially!)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"42d89\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"1nrj0\",\"text\":\"#### fbeta-score parameters                   \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"cp9cr\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"aqloj\",\"text\":\"#setBeta=0.5\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"1nv24\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"f4dci\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"6d1bo\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"4nqge\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]}],\"entityMap\":[],\"guid\":\"30F24FB0D0B311E8BC3A07887E45115E\",\"id\":674281,\"previous_id\":674258,\"previous_guid\":\"BD56FA70D0A711E8BC3A07887E45115E\",\"section\":\"Input parameters \"}","section":"Input parameters ","case_id":null,"section_color":"#A492FF","protocol_id":"16831","previous_id":"674258","last_modified":null},{"id":"674320","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"710E8550D0C211E8BC3A07887E45115E","previous_guid":"30F24FB0D0B311E8BC3A07887E45115E","data":"{\"blocks\":[{\"key\":\"25tju\",\"text\":\"Part 2: Core algorithm \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"6igg6\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"9nl3q\",\"text\":\"a) The main loop iteratates through the dummy columns one at a time\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"f33ni\",\"text\":\"b) Generates a Random Forest model\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"d6jv0\",\"text\":\"c) Extracts and sorts the feature variables by importance (first ranked gene list)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"5q922\",\"text\":\"d) Computes Binary score for top 15 genes\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"9u39g\",\"text\":\"e) Re-sorts based upon Binary score, then importance (Second ranked gene list)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"o0m\",\"text\":\"f) Top 6 genes are then used to produce individual decision trees to find optimal expression threshold cutoffs\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"eujlh\",\"text\":\"g) The top 6 genes are then permuted using AND logic and the expression threshold cutoffs determined in step f; for each combination of genes, the fbeta-score is computed and stored \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]}],\"entityMap\":[],\"guid\":\"710E8550D0C211E8BC3A07887E45115E\",\"id\":674320,\"previous_id\":674281,\"previous_guid\":\"30F24FB0D0B311E8BC3A07887E45115E\",\"section\":\"Core algorithm description\"}","section":"Core algorithm description","case_id":null,"section_color":"#A492FF","protocol_id":"16831","previous_id":"674281","last_modified":null},{"id":"674328","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"B3433780D0CD11E8BC3A07887E45115E","previous_guid":"710E8550D0C211E8BC3A07887E45115E","data":"{\"blocks\":[{\"key\":\"ci8c7\",\"text\":\"Part 3: Reporting \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"fmbsq\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"78nch\",\"text\":\"There are four reports that are generated by NS-Forest: \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"e90be\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"7fp6b\",\"text\":\"1. Binary ranking table: contains binary score and Gini information from the Random Forest model for each gene used in combinations \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"6u4g0\",\"text\":\"2. Complete results: the genes, number of markers, and fbeta-score for all tested combinations\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"86glu\",\"text\":\"3. Top f-beta results (no genes): cluster names and their maximum fbeta-score\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"fhkks\",\"text\":\"4. Top markers results for each clusters (usually multiple): a subset of the complete results; this utilizes a rank that accounts for ties in order to give a more manageable output   \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"ftp6o\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]},{\"key\":\"db8o3\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":[]}],\"entityMap\":[],\"guid\":\"B3433780D0CD11E8BC3A07887E45115E\",\"id\":674328,\"previous_id\":674320,\"previous_guid\":\"710E8550D0C211E8BC3A07887E45115E\",\"section\":\"Results reporting \"}","section":"Results reporting ","case_id":null,"section_color":"#84CE84","protocol_id":"16831","previous_id":"674320","last_modified":null}]}