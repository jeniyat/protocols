{"id":18288,"title":"SYSB 3036 W11: Gene Expression and RNA-Seq","title_html":"SYSB 3036 W11: Gene Expression and RNA-Seq","image":{"source":"https:\/\/www.protocols.io\/img\/default_protocol.png","placeholder":"https:\/\/www.protocols.io\/img\/default_protocol.png"},"doi":"dx.doi.org\/10.17504\/protocols.io.v4qe8vw","doi_status":2,"uri":"sysb-3036-w11-gene-expression-and-rna-seq-v4qe8vw","type_id":1,"published_on":1545402785,"version_id":0,"created_on":1543890330,"categories":null,"creator":{"name":"Frank Aylward","affiliation":"Virginia Tech","username":"frank-aylward","link":null,"image":{"source":"https:\/\/s3.amazonaws.com\/pr-journal\/v39jtte.png","placeholder":"https:\/\/s3.amazonaws.com\/pr-journal\/v39jtte.png"},"badges":[{"id":4,"image":{"source":"\/img\/badges\/gold.svg","placeholder":"\/img\/badges\/gold.svg"},"name":"Gold power author!"}],"research_interests":null},"journal":null,"journal_name":null,"journal_link":null,"public":1,"has_versions":0,"link":null,"number_of_steps":6,"authors":[{"name":"Frank Aylward","affiliation":"Virginia Tech","username":"frank-aylward","link":null,"image":{"source":"https:\/\/s3.amazonaws.com\/pr-journal\/v39jtte.png","placeholder":"https:\/\/s3.amazonaws.com\/pr-journal\/v39jtte.png"},"badges":[],"research_interests":null}],"versions":[],"groups":[],"has_subprotocols":0,"is_subprotocol":0,"is_bookmarked":0,"forks_count":{"private":0,"public":0},"steps":[{"id":687898,"guid":"EEE22700F76B11E89FBE7939E1E6A0C6","previous_id":null,"previous_guid":null,"modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"79625AE2FFF3444296BFD0E2CB5ABFE7","order_id":1,"type_id":6,"title":"Section","source":{"title":"Getting started"}},{"id":1054723,"guid":"45C549C0844943DFA49D516899B42128","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Last tutorial we went over basic read mapping protocols using bowtie and SAMtools. We used data from a infection experiment that used Mycobacterium smegmatis and a bacteriophage called D29. We examined only one time-point that took place 15 minutes after infection. Today we will finish analyzing that dataset and then look at another time-point 60-minutes after infection and compare our results. <\/div><div class = \"text-block\">This will be easiest if you work in the same folder as last week, with your D29.fna file, the indexed bowtie2 files, the D29.bed file, etc. <\/div><div class = \"text-block\">If you did this in the same folder as last week, you should also have a nice T1.sort.bam file that we will also use later in this tutorial. <\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#94EBFF"},{"id":687900,"guid":"2A8E27B0F76F11E89FBE7939E1E6A0C6","previous_id":687898,"previous_guid":"EEE22700F76B11E89FBE7939E1E6A0C6","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"0FF2ABC1A9EC4D17800C084A9FA6BD1A","order_id":1,"type_id":6,"title":"Section","source":{"title":"Look at BED file"}},{"id":1054723,"guid":"630E05DF9E6C49168BACF1EA90CD1DCB","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Now we have the genome .FNA file and sorted bam files for two time-points. We can map the reads to the genome, as have already done, but that just tells us how many reads map to the genome as a whole. We still need information about where genes and other features are encoded in the mycobacteriophage D29 genome, so that we can find out what genes are expressed at different times. After all, knowing that a large number of reads map between coordinates 10377 and 11421 in the phage genome is not necessarily useful unless we also have information about what genes are encoded in that region.\u00a0<\/div><div class = \"text-block\">For this next step we will use the mysterious D29.bed file that we downloaded last week but did not use. BED files are tab-delimited tables with information about the different features of a genome, their coordinates, which strand they are encoded in, and some annotation information. The tables are a bit large and somewhat unweildy to look at in the command line, but just to get an idea of a format let's look at the first two lines:<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">head -n 2 D29.bed<\/span><\/div><div class = \"text-block\">This should give you the general idea. For details on BED format see here:\u00a0https:\/\/genome.ucsc.edu\/FAQ\/FAQformat.html#format1<\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#A492FF"},{"id":687901,"guid":"3AC01EE0F76F11E89FBE7939E1E6A0C6","previous_id":687900,"previous_guid":"2A8E27B0F76F11E89FBE7939E1E6A0C6","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"0ADBF6F71C064AD9805662230EAA6362","order_id":1,"type_id":6,"title":"Section","source":{"title":"Identify highly expressed genes with BEDtools"}},{"id":1054723,"guid":"E64B8C65952A428091A537495E013E41","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Now we have all of the necessary files to identify which genes were highly expressed in our transcriptome.\u00a0To do this we will use a tool called BEDTools. <\/div><div class = \"text-block\">First let's take a look at the tool BEDtools and what utilities it has by typing 'bedtools'. You will see a large number of options- this is a very comprehensive tool!\u00a0<\/div><div class = \"text-block\">Here we will be using the 'intersect' utility, which will tell us which reads in our sorted bam file intersect with regions in the BED file.\u00a0<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">bedtools intersect -a D29.bed -c -bed -f 0.2 -b T1.sort.bam > intersect_T1.txt<\/span><\/div><div class = \"text-block\">A quick note on the flags used here.<\/div><div class = \"text-block\">-a and -b denote the BED file and sorted bam file, respectively.\u00a0<\/div><div class = \"text-block\">-c indicates that we want to count the number of reads that overlap with BED regions. The default output is to provide each read individually with the feature it mapped to.\u00a0<\/div><div class = \"text-block\">-f 0.2 denotes that the read has to overlap by at least 20% of it's length to be considered mapping to a feature. One can imagine a long polycistronic mRNA with many genes encoded in it; some reads may overlap just slightly with a specific gene. Here we require at least 20% overlap, which will help ensure reads are mapping properly.\u00a0\u00a0<\/div><div class = \"text-block\">The output will be a BED file, the same as we used for the input, but with an additional column appended to the end. This column will have the number of reads tha map to each feature.\u00a0<\/div><div class = \"text-block\">Now a rather basic question that it would be nice to answer is: What are the highest expressed genes in our transcriptome?<\/div><div class = \"text-block\">To answer this we should be able to sort the intersect file by the last column with the Unix sort command.<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">sort -k 11,11 -rn intersect_T1.txt | cut -f 10,11 | head -n 5<\/span><\/div><div class = \"text-block\">So of the top 5 most highly expressed genes in the mycobacteriophage D29 genome, we have a DNA primase, a helicase, two hypothetical proteins, and one glutaredoxin. The first two are noteworthy since this particular transcriptome sample was taken after only 15 minutes of infection, and at this early stage we would expect to find genes associated with viral DNA replication (\"early genes\"). The hypothetical proteins are also not surprising, since many genes in bacteriophage genomes are uncharacterized and have no known function.\u00a0<\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#84CE84"},{"id":689715,"guid":"4DF73D20FCBC11E8B09BE96296B72B89","previous_id":687901,"previous_guid":"3AC01EE0F76F11E89FBE7939E1E6A0C6","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"7CFB5813F1774E29B21E21B9C5E28376","order_id":1,"type_id":6,"title":"Section","source":{"title":"Repeat read mapping for another time-point"}},{"id":1054723,"guid":"E9C9B1F03FA04A588ACEDCC40417317C","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Now let's repeat some steps from last week using a different time-point. <\/div><div class = \"text-block\">We will use the same steps again in a protocol identical to last week, only this time we will use a different FASTQ read file that corresponds to the 60-minute time-point. \n<\/div><div class = \"text-block\">Since a lot of these commands are almost identical to those we used before, I will just list them here, with brief descriptions:<\/div><div class = \"text-block\">Get the new fastq file:<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">fastq-dump -X 10000 SRR5585002<\/span><\/div><div class = \"text-block\">Map the reads with bowtie2:<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">bowtie2 -U SRR5585002.fastq -x D29 -S T2.sam<\/span><\/div><div class = \"text-block\">Filter out the reads that did not map and convert to BAM format:<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">samtools view -bS -F 4 T2.sam > T2.bam<\/span><\/div><div class = \"text-block\">Sort the BAM file:<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">samtools sort T2.bam T2.sort<\/span><\/div><div class = \"text-block\">Index the BAM file:<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">samtools index T2.sort.bam<\/span><\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#EA9F6C"},{"id":689716,"guid":"C4F3E6D0FCBC11E8B09BE96296B72B89","previous_id":689715,"previous_guid":"4DF73D20FCBC11E8B09BE96296B72B89","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"2F0674FDA85B4BB0A415F6099A0CE1CB","order_id":1,"type_id":6,"title":"Section","source":{"title":"Get highly expressed genes for the new time-point"}},{"id":1054723,"guid":"D85DDADBB4A948A8B8876F6431911585","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">And now we can use the BED file in the same way to find out what genes are highly expressed in the 60-minute time-point:<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">bedtools intersect -a D29.bed -c -bed -f 0.2 -b T2.sort.bam > intersect_T2.txt<\/span><\/div><div class = \"text-block\">and<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">sort -k 11,11 -rn intersect_T2.txt | cut -f 10,11 | head -n 5<\/span><\/div><div class = \"text-block\">Note that now we have a different set of top-5-most-expressed genes. Now instead of primase or helicase genes we are finding structural genes like tail fibers, scaffold proteins, etc. This is interesting since these are typical \"late genes\" that are expressed later in the phage infection cycle. For phage, the first thing they have to do after infection is replicate their genomes inside of a host, and after that they have to package this DNA into new viral particles. Our results indicate that by 60 minutes the phage has moved onto this next phase. <\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#EA94FF"},{"id":689717,"guid":"EA66FFB0FCBC11E8B09BE96296B72B89","previous_id":689716,"previous_guid":"C4F3E6D0FCBC11E8B09BE96296B72B89","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"CFCA5C5934954156BA77BB4F8B3B2700","order_id":1,"type_id":6,"title":"Section","source":{"title":"Combine output files"}},{"id":1054723,"guid":"6ACD23C97A3C47CFA3F7D4534C1FBA81","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">We may also want to combine our T1 and T2 results into one file. Since the genes are ordered in the same way we can use a simple \"paste\" command. <\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">paste intersect_T1.txt intersect_T2.txt > combined_mapping.txt<\/span><\/div><div class = \"text-block\">And to get the read counts for T1 and T2 we can specify columns 11 and 22:<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">cut -f 10,11,22 combined_mapping.txt | head<\/span><\/div><div class = \"text-block\">You can sort this in another pipe command if you want to investigate further and see the results side-by-side. For example, to see the most highly expressed genes in the T1 sample we can use:<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">cut -f 10,11,22 combined_mapping.txt | sort -rn -k 2,2 | head<\/span><\/div><div class = \"text-block\">You can use -k 3,3 to do the same with T2. <\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#94EBFF"}],"materials":[],"description":null}