{"uri":"bsa-seq-in-maize-qyedxte","version_id":"0","protocol_name":"BSA-seq in Maize","protocol_name_html":"BSA-seq in Maize","is_prepublished":"0","can_edit":"0","parent_id":null,"api_version":"1","is_new_mode":"0","last_modified":"1534961101","type_id":"1","link":null,"fork_id":"","public_fork_note":"","number_of_steps":"23","has_versions":"0","first_published_date":"1534961101","publish_date":"2018-08-22 18:05:01","documents":null,"have_protocol_in_step":"0","is_protocol_in_step":"0","vendor_name":"Contributed by users","vendor_link":"https:\/\/www.protocols.io","vendor_logo":"\/img\/vendors\/1.png","mod_mins":"-43","mod_secs":"52","description":"<p>In the past, identifying a gene of interest for a mutant phenotype in maize has proven to be a laborious process. Now, with the aid of next generation sequencing technology, the researcher can quickly identify the region containing a mutant gene and in some cases identify the causative lesion. In our BSA-seq protocol, we use the Galaxy platform for file processing and manipulation. This platform is intended to provide a user friendly experience, so that researchers of any level can clone maize genes. We start with raw sequencing reads from our F2 mapping population and end with plots of SNPs on each chromosome and a list of candidate SNPs. The Galaxy platform generates the files needed for plotting SNPs with the R package ggplot2 and for identifying candidate SNPs with SnpEff. Our\u00a0protocol will guide\u00a0the user step-by-step through the Galaxy platform, chromosome plotting, and SnpEff.\u00a0<\/p>","is_bookmarked":"0","can_reassign":"1","before_start":null,"has_guidelines":"0","materials":[],"warning":null,"version_class":"13030","public":"1","is_owner":"1","is_original_owner":"1","created_on":"1528926346","protocol_affiliation":"University of Massachusetts at Amherst,Brigham Young University,Cornell University,West Virginia University","affiliation":null,"doi":"dx.doi.org\/10.17504\/protocols.io.qyedxte","doi_status":"2","changed_fork_steps":null,"profile_url":"4313c4w2y2","protocol_img":"https:\/\/www.protocols.io\/img\/default_protocol.png","profile_image":"\/img\/avatars\/011.png","full_name":"Harry Klein","created_by":"Harry Klein","private_link":"3321F6E8C31F34CDDC0AC03307F4BE0B","original_img":"1","username":"harry-klein","is_retracted":"0","retraction_reason":null,"plos_id":null,"manuscript_citation":null,"journal_name":null,"is_donations_disabled":"0","is_donations_disabled_by_user":"9","item_record_id":322757,"fork_info":[],"compare_forks":[],"protocols":[],"groups":[],"number_of_shared_runs":[],"ownership_history":[],"keywords":"","transfer_to_user":[],"sub_transfer":false,"is_transfer_pending":false,"number_of_bookmarks":"0","collections":[],"tags":[],"archived":0,"sub_authors":[],"sub_protocols_number":0,"can_edit_shared":0,"shared_runs":[],"is_shared_run":0,"is_shared":1,"banner":null,"contact_badges":[{"badge_id":"2","badge_image":"\/img\/badges\/bronze.svg","badge_description":"Author!"}],"number_of_comments":0,"is_locked":0,"is_locked_by":false,"authors":"Harry Klein,Yuguo Xiao,Phillip A. Conklin,Rajanikanth Govindarajulu,Jacob A. Kelly,Michael J. Scanlon,Clinton J. Whipple,Madelaine Bartlett","authors_list":[{"name":"Harry Klein","affiliation":"University of Massachusetts at Amherst","username":null,"profile_image":null},{"name":"Yuguo Xiao","affiliation":"Brigham Young University","username":null,"profile_image":null},{"name":"Phillip A. Conklin","affiliation":"Cornell University","username":null,"profile_image":null},{"name":"Rajanikanth Govindarajulu","affiliation":"West Virginia University","username":null,"profile_image":null},{"name":"Jacob A. Kelly","affiliation":"Brigham Young University","username":null,"profile_image":null},{"name":"Michael J. Scanlon","affiliation":"Cornell University","username":null,"profile_image":null},{"name":"Clinton J. Whipple","affiliation":"Brigham Young University","username":null,"profile_image":null},{"name":"Madelaine Bartlett","affiliation":"University of Massachusetts at Amherst","username":null,"profile_image":null}],"user":{"profile_image":"\/img\/avatars\/011.png","username":"harry-klein","full_name":"Harry Klein","created_by":"Harry Klein"},"access":{"can_view":"1","can_remove":"0","can_add":"0","can_edit":0,"can_publish":0,"can_get_doi":0,"can_share":"0","can_move":"1","can_transfer":"1","can_download":"1","is_locked":"0"},"is_contact_suspended":0,"guidelines":null,"status_id":"1","is_research":"1","status_info":"","steps":[{"id":"636893","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"EA527785065E46BFAD707B93F7421AFF","previous_guid":null,"previous_id":"0","last_modified":"1529595374","components":[{"component_id":"1129461","previous_id":0,"original_id":"0","guid":"C2C5A578086745F69A46F87ADDCDE592","previous_guid":null,"component_type_id":"1","data_id":null,"data":"<p><strong>Upload data<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>1.\u00a0<a href=\"https:\/\/usegalaxy.org\/\" target=\"_blank\" rel=\"noopener noreferrer\">https:\/\/usegalaxy.org\/<\/a> has its own uploading format, but it is limited to 2GB of data uploaded. Chances are, the data is much larger than 2GB, so use a FTP to upload your data. The maximum amount of memory available on the Galaxy server for a given user account is 250Gb. If very large sequencing files are being used, we recommend using another solution. We found that 250Gb was plenty of space to run our protocol, however, some files may need to be deleted to remain under the 250Gb limit. For mapping to B73, upload the reference genome downloaded from maizesequence.org.<\/p>\n<p>\u00a0<\/p>\n<p>2. We used CyberDuck, but there is a large list of free FTP uploaders to choose from. CyberDuck has an option to set the server, which means that it sets the location of where your data is going (Fig. 1). After connecting to Galaxy (https:\/\/galaxyproject.org\/ftp-upload\/), simply drag your raw sequencing files into the Cyberduck program and they will begin\u00a0uploading.\u00a0<\/p>\n<p><img src=\"https:\/\/s3.amazonaws.com\/pr-journal\/zwr2e36.png\" data-src=\"https:\/\/s3.amazonaws.com\/pr-journal\/zwr2e36.png\" data-ofn=\"Screen Shot 2018-06-18 at 3.29.16 PM.png\" \/><\/p>\n<p>\u00a0<\/p>\n<p>3. Once your FTP uploader has finished uploading the data, click the tab on Galaxy that says \u201cchoose FTP file\u201d in Get Data&gt;Upload File. In your instance, your data files should show and you can have them be uploaded to the history (Fig 2.).<\/p>\n<p>\u00a0<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Upload data<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>1.\u00a0<a href=\"https:\/\/usegalaxy.org\/\" target=\"_blank\" rel=\"noopener noreferrer\">https:\/\/usegalaxy.org\/<\/a> has its own uploading format, but it is limited to 2GB of data uploaded. Chances are, the data is much larger than 2GB, so use a FTP to upload your data. The maximum amount of memory available on the Galaxy server for a given user account is 250Gb. If very large sequencing files are being used, we recommend using another solution. We found that 250Gb was plenty of space to run our protocol, however, some files may need to be deleted to remain under the 250Gb limit. For mapping to B73, upload the reference genome downloaded from maizesequence.org.<\/p>\n<p>\u00a0<\/p>\n<p>2. We used CyberDuck, but there is a large list of free FTP uploaders to choose from. CyberDuck has an option to set the server, which means that it sets the location of where your data is going (Fig. 1). After connecting to Galaxy (https:\/\/galaxyproject.org\/ftp-upload\/), simply drag your raw sequencing files into the Cyberduck program and they will begin\u00a0uploading.\u00a0<\/p>\n<p><img src=\"https:\/\/s3.amazonaws.com\/pr-journal\/zwr2e36.png\" data-src=\"https:\/\/s3.amazonaws.com\/pr-journal\/zwr2e36.png\" data-ofn=\"Screen Shot 2018-06-18 at 3.29.16 PM.png\" \/><\/p>\n<p>\u00a0<\/p>\n<p>3. Once your FTP uploader has finished uploading the data, click the tab on Galaxy that says \u201cchoose FTP file\u201d in Get Data&gt;Upload File. In your instance, your data files should show and you can have them be uploaded to the history (Fig 2.).<\/p>\n<p>\u00a0<\/p>"},"is_project":0},{"component_id":"1129462","previous_id":"1129461","original_id":"0","guid":"AB939DCB79684C59AB6104E3944ADE92","previous_guid":"C2C5A578086745F69A46F87ADDCDE592","component_type_id":"6","data_id":"0","data":"Phase 1: Map your reads, generate a filtered pileup file, and a Varscan file","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Phase 1: Map your reads, generate a filtered pileup file, and a Varscan file"},"is_project":0}]},{"id":"638109","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"232E07C6305B4B9EBA52D98010867E94","previous_guid":"EA527785065E46BFAD707B93F7421AFF","previous_id":"636893","last_modified":"1529595366","components":[{"component_id":"1132659","previous_id":0,"original_id":"0","guid":"C494F16B76954F0993B0BD3F539893B6","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Phase 1: Map your reads, generate a filtered pileup file, and a Varscan file","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Phase 1: Map your reads, generate a filtered pileup file, and a Varscan file"},"is_project":0},{"component_id":"1132658","previous_id":"1132659","original_id":"0","guid":"F3863D2458214018ABDD2EC727A33AE8","previous_guid":"C494F16B76954F0993B0BD3F539893B6","component_type_id":"1","data_id":null,"data":"<p><strong>Check the quality of your sequencing data<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>Check the quality of your sequencing data with FastQC. We use this step to assess our sequencing run and determine a good quality cutoff. Contaminant list and submodules are optional.<\/p>\n<p>\u00a0<\/p>\n<p><img id=\"s-mce-img\" class=\"s-mce-img\" src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z6u2e36.png\" data-src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z6u2e36.png\" data-ofn=\"FastQC.png\" \/><\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Check the quality of your sequencing data<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>Check the quality of your sequencing data with FastQC. We use this step to assess our sequencing run and determine a good quality cutoff. Contaminant list and submodules are optional.<\/p>\n<p>\u00a0<\/p>\n<p><img id=\"s-mce-img\" class=\"s-mce-img\" src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z6u2e36.png\" data-src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z6u2e36.png\" data-ofn=\"FastQC.png\" \/><\/p>"},"is_project":0}]},{"id":"638263","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"1E9540E945D545409B4B03ADD2D7A316","previous_guid":"127DA4FA44AC43C4932811DCEE830DA8","previous_id":"638372","last_modified":"1529595422","components":[{"component_id":"1132971","previous_id":0,"original_id":"0","guid":"F14376B7B2424B1DB5FF3F83E6AB4BA3","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Phase 1: Map your reads, generate a filtered pileup file, and a Varscan file","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Phase 1: Map your reads, generate a filtered pileup file, and a Varscan file"},"is_project":0},{"component_id":"1132970","previous_id":"1132971","original_id":"0","guid":"83A411A72DD042958C5F8A47047E8CB9","previous_guid":"F14376B7B2424B1DB5FF3F83E6AB4BA3","component_type_id":"1","data_id":null,"data":"<p><strong>Check the format of your\u00a0sequencing files (Optional step depending on the aligner used)<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>If\u00a0you map your sequencing data using Bowtie2, it requires your data to be in the<strong><em>\u00a0fastqsanger format<\/em><\/strong>. In some instances, the format of the original sequencing data is in the fastq format, which means that it needs to be changed in order for\u00a0<a href=\"https:\/\/usegalaxy.org\/\" target=\"_blank\" rel=\"noopener noreferrer\">https:\/\/usegalaxy.org\/<\/a>\u00a0to recognize and align data. Use the\u00a0program FASTQ Groomer to convert your files.<\/p>\n<p>\u00a0<\/p>\n<p><img id=\"s-mce-img\" class=\"s-mce-img\" src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z6x2e36.png\" data-src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z6x2e36.png\" data-ofn=\"FastQ Groomer.png\" \/><\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Check the format of your\u00a0sequencing files (Optional step depending on the aligner used)<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>If\u00a0you map your sequencing data using Bowtie2, it requires your data to be in the<strong><em>\u00a0fastqsanger format<\/em><\/strong>. In some instances, the format of the original sequencing data is in the fastq format, which means that it needs to be changed in order for\u00a0<a href=\"https:\/\/usegalaxy.org\/\" target=\"_blank\" rel=\"noopener noreferrer\">https:\/\/usegalaxy.org\/<\/a>\u00a0to recognize and align data. Use the\u00a0program FASTQ Groomer to convert your files.<\/p>\n<p>\u00a0<\/p>\n<p><img id=\"s-mce-img\" class=\"s-mce-img\" src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z6x2e36.png\" data-src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z6x2e36.png\" data-ofn=\"FastQ Groomer.png\" \/><\/p>"},"is_project":0}]},{"id":"638264","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"EDB113F0E4DD4CA299A43EFDC86BBC2D","previous_guid":"1E9540E945D545409B4B03ADD2D7A316","previous_id":"638263","last_modified":"1529595432","components":[{"component_id":"1132973","previous_id":0,"original_id":"0","guid":"083C5EC0174C4A8FA469B0BD825EFAC3","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Phase 1: Map your reads, generate a filtered pileup file, and a Varscan file","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Phase 1: Map your reads, generate a filtered pileup file, and a Varscan file"},"is_project":0},{"component_id":"1132972","previous_id":"1132973","original_id":"0","guid":"606237E6D0C941B2B8E54B5E625CD5EA","previous_guid":"083C5EC0174C4A8FA469B0BD825EFAC3","component_type_id":"1","data_id":null,"data":"<p><strong>Optional step: Concatenate multiple datasets<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>Use 'cat' to merge multiple sequencing files into one file. Often, sequencing files\u00a0will be broken up by the Illumina machines.\u00a0<img id=\"s-mce-img\" class=\"s-mce-img\" src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z6y2e36.png\" data-src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z6y2e36.png\" data-ofn=\"Concatenate.png\" \/><\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Optional step: Concatenate multiple datasets<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>Use 'cat' to merge multiple sequencing files into one file. Often, sequencing files\u00a0will be broken up by the Illumina machines.\u00a0<img id=\"s-mce-img\" class=\"s-mce-img\" src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z6y2e36.png\" data-src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z6y2e36.png\" data-ofn=\"Concatenate.png\" \/><\/p>"},"is_project":0}]},{"id":"638265","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"385D1D851093449C84F7BB449689517F","previous_guid":"EDB113F0E4DD4CA299A43EFDC86BBC2D","previous_id":"638264","last_modified":"1529595594","components":[{"component_id":"1132975","previous_id":0,"original_id":"0","guid":"5C880434C7754AD7B1B94372C9FBF65C","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Phase 1: Map your reads, generate a filtered pileup file, and a Varscan file","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Phase 1: Map your reads, generate a filtered pileup file, and a Varscan file"},"is_project":0},{"component_id":"1132974","previous_id":"1132975","original_id":"0","guid":"01957C210A4145D9AD1F68C86A6886AF","previous_guid":"5C880434C7754AD7B1B94372C9FBF65C","component_type_id":"1","data_id":null,"data":"<p><strong>Map your reads<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>We used Bowtie2 to map reads to version 4 of the B73 reference genome. Select paired end or single end reads. Build a genome from your history and select the B73 reference genome. All other options are optional. Typically this step takes 4-24 hours depending on how big your sequencing data files are.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p><img id=\"s-mce-img\" class=\"s-mce-img\" src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z6z2e36.png\" data-src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z6z2e36.png\" data-ofn=\"Bowtie2.png\" \/><\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Map your reads<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>We used Bowtie2 to map reads to version 4 of the B73 reference genome. Select paired end or single end reads. Build a genome from your history and select the B73 reference genome. All other options are optional. Typically this step takes 4-24 hours depending on how big your sequencing data files are.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p><img id=\"s-mce-img\" class=\"s-mce-img\" src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z6z2e36.png\" data-src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z6z2e36.png\" data-ofn=\"Bowtie2.png\" \/><\/p>"},"is_project":0}]},{"id":"638266","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"AFE47C4924864926BE167DEF670A4CBA","previous_guid":"E95FBCB214024B049A7C0B5CF8208E52","previous_id":"638624","last_modified":"1529595476","components":[{"component_id":"1132977","previous_id":0,"original_id":"0","guid":"251A45B7086A4F4FBF29C33559D82465","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Phase 1: Map your reads, generate a filtered pileup file, and a Varscan file","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Phase 1: Map your reads, generate a filtered pileup file, and a Varscan file"},"is_project":0},{"component_id":"1132976","previous_id":"1132977","original_id":"0","guid":"8A8D12C2F90A44F99A71B2969ECF9951","previous_guid":"251A45B7086A4F4FBF29C33559D82465","component_type_id":"1","data_id":null,"data":"<p><strong>Call variants from your alignment<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>Run Samtools Mpileup, choose your genome from your history, choose Do not perform genotype likelihood computation (output pileup), and output base positions on reads.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p><img id=\"s-mce-img\" class=\"s-mce-img\" src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z632e36.png\" data-src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z632e36.png\" data-ofn=\"Mpileup.png\" \/><\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Call variants from your alignment<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>Run Samtools Mpileup, choose your genome from your history, choose Do not perform genotype likelihood computation (output pileup), and output base positions on reads.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p><img id=\"s-mce-img\" class=\"s-mce-img\" src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z632e36.png\" data-src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z632e36.png\" data-ofn=\"Mpileup.png\" \/><\/p>"},"is_project":0}]},{"id":"638267","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"63BB0EE65827459F95A89916B659064A","previous_guid":"AFE47C4924864926BE167DEF670A4CBA","previous_id":"638266","last_modified":"1529595489","components":[{"component_id":"1132979","previous_id":0,"original_id":"0","guid":"9BA7CCE996BE4750935477426F21E7BE","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Phase 1: Map your reads, generate a filtered pileup file, and a Varscan file","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Phase 1: Map your reads, generate a filtered pileup file, and a Varscan file"},"is_project":0},{"component_id":"1132978","previous_id":"1132979","original_id":"0","guid":"30CE858D01FD407DA9605D51C5B2C59B","previous_guid":"9BA7CCE996BE4750935477426F21E7BE","component_type_id":"1","data_id":null,"data":"<p><strong>Filter your Mpileup file<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>Use Samtools filter pileup plugin to filter SNPs on coverage. Assign a coverage cutoff based on the average cutoff of your data. If you have low average coverage (&lt;15) call all reads with coverage &gt;2. Reads with a coverage of 1\u00a0can be sequencing error, so a coverage of 2 can give you more confidence. For high coverage data (&gt;15X), a coverage cutoff of 8 should be sufficient. Additionally, print total number of differences.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p><img id=\"s-mce-img\" class=\"s-mce-img\" src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z642e36.png\" data-src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z642e36.png\" data-ofn=\"Filter Pileup.png\" \/><\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Filter your Mpileup file<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>Use Samtools filter pileup plugin to filter SNPs on coverage. Assign a coverage cutoff based on the average cutoff of your data. If you have low average coverage (&lt;15) call all reads with coverage &gt;2. Reads with a coverage of 1\u00a0can be sequencing error, so a coverage of 2 can give you more confidence. For high coverage data (&gt;15X), a coverage cutoff of 8 should be sufficient. Additionally, print total number of differences.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p><img id=\"s-mce-img\" class=\"s-mce-img\" src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z642e36.png\" data-src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z642e36.png\" data-ofn=\"Filter Pileup.png\" \/><\/p>"},"is_project":0}]},{"id":"638372","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"127DA4FA44AC43C4932811DCEE830DA8","previous_guid":"232E07C6305B4B9EBA52D98010867E94","previous_id":"638109","last_modified":"1529595383","components":[{"component_id":"1133316","previous_id":0,"original_id":"0","guid":"275F32772E4C4127BD48AF56CAA210F0","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Phase 1: Map your reads, generate a filtered pileup file, and a Varscan file","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Phase 1: Map your reads, generate a filtered pileup file, and a Varscan file"},"is_project":0},{"component_id":"1133315","previous_id":"1133316","original_id":"0","guid":"5E7CC2C69FD9498E921FC1540350911D","previous_guid":"275F32772E4C4127BD48AF56CAA210F0","component_type_id":"1","data_id":null,"data":"<p><strong>Trim reads with Trimmomatic<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>Run Trimmomatic on your data. Typically, we trim reads with &lt;20 Phred quality scores and\u00a0use a sliding window of 4. This is the default setting for the Trimmomatic tool on Galaxy. Select your files and chug away.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p><img id=\"s-mce-img\" class=\"s-mce-img\" src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z6v2e36.png\" data-src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z6v2e36.png\" data-ofn=\"Trimmomatic.png\" \/><\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Trim reads with Trimmomatic<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>Run Trimmomatic on your data. Typically, we trim reads with &lt;20 Phred quality scores and\u00a0use a sliding window of 4. This is the default setting for the Trimmomatic tool on Galaxy. Select your files and chug away.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p><img id=\"s-mce-img\" class=\"s-mce-img\" src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z6v2e36.png\" data-src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z6v2e36.png\" data-ofn=\"Trimmomatic.png\" \/><\/p>"},"is_project":0}]},{"id":"638624","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"E95FBCB214024B049A7C0B5CF8208E52","previous_guid":"385D1D851093449C84F7BB449689517F","previous_id":"638265","last_modified":"1529595462","components":[{"component_id":"1133930","previous_id":0,"original_id":"0","guid":"7C994130C38A4645B966BDE3488F410D","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Phase 1: Map your reads, generate a filtered pileup file, and a Varscan file","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Phase 1: Map your reads, generate a filtered pileup file, and a Varscan file"},"is_project":0},{"component_id":"1133929","previous_id":"1133930","original_id":"0","guid":"6B59413195164ED3B6186B9C6B8B57EC","previous_guid":"7C994130C38A4645B966BDE3488F410D","component_type_id":"1","data_id":null,"data":"<p><strong>Calculate coverage from your data<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>Run Samtools Flagstat on your alignment file. The flagstat results will tell you how many reads mapped to the reference genome, handy for calculating sequencing coverage.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p><img id=\"s-mce-img\" class=\"s-mce-img\" src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z622e36.png\" data-src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z622e36.png\" data-ofn=\"Flagstat.png\" \/><\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Calculate coverage from your data<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>Run Samtools Flagstat on your alignment file. The flagstat results will tell you how many reads mapped to the reference genome, handy for calculating sequencing coverage.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p><img id=\"s-mce-img\" class=\"s-mce-img\" src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z622e36.png\" data-src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z622e36.png\" data-ofn=\"Flagstat.png\" \/><\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>"},"is_project":0}]},{"id":"638856","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"40DF7847326A421EBBE55483EDC8CAB2","previous_guid":"63BB0EE65827459F95A89916B659064A","previous_id":"638267","last_modified":"1529595511","components":[{"component_id":"1134592","previous_id":0,"original_id":"0","guid":"F32C8159E6604A479328F9757E227958","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Phase 1: Map your reads, generate a filtered pileup file, and a Varscan file","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Phase 1: Map your reads, generate a filtered pileup file, and a Varscan file"},"is_project":0},{"component_id":"1134591","previous_id":"1134592","original_id":"0","guid":"D1F5B1CA458A4DB8A38696448EE60802","previous_guid":"F32C8159E6604A479328F9757E227958","component_type_id":"1","data_id":null,"data":"<p><strong>Generate a Varscan SNP and Indel vcf file from your Mpileup file<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>Use the Varscan plugin to filter SNPs on coverage and output SNPs in vcf format. These Varscan files contain the same SNP positions as the filtered pileup file, but they are in vcf format. The vcf format is necessary for\u00a0input into SnpEff (candidate SNP identification) later on. Run Varscan with a coverage cutoff of 2 for low coverage data (&lt;10) and 8 for high coverage data (&gt;15). We also typically set the minimum frequency to call a homozygote to 0.99 as that\u00a0provides a stringest cutoff for allele frequency and aids in calling homozygous SNPs later on.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>Additionally, output a Varscan file calling indels. This file will be useful for verifying your mapping region and further fine mapping using large indels (&gt;=10bp) as markers.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p><img id=\"s-mce-img\" class=\"s-mce-img\" src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z652e36.png\" data-src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z652e36.png\" data-ofn=\"Varscan SNP.png\" \/><img id=\"s-mce-img\" class=\"s-mce-img\" src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z662e36.png\" data-src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z662e36.png\" data-ofn=\"Varscan indel.png\" \/><\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Generate a Varscan SNP and Indel vcf file from your Mpileup file<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>Use the Varscan plugin to filter SNPs on coverage and output SNPs in vcf format. These Varscan files contain the same SNP positions as the filtered pileup file, but they are in vcf format. The vcf format is necessary for\u00a0input into SnpEff (candidate SNP identification) later on. Run Varscan with a coverage cutoff of 2 for low coverage data (&lt;10) and 8 for high coverage data (&gt;15). We also typically set the minimum frequency to call a homozygote to 0.99 as that\u00a0provides a stringest cutoff for allele frequency and aids in calling homozygous SNPs later on.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>Additionally, output a Varscan file calling indels. This file will be useful for verifying your mapping region and further fine mapping using large indels (&gt;=10bp) as markers.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p><img id=\"s-mce-img\" class=\"s-mce-img\" src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z652e36.png\" data-src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z652e36.png\" data-ofn=\"Varscan SNP.png\" \/><img id=\"s-mce-img\" class=\"s-mce-img\" src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z662e36.png\" data-src=\"https:\/\/s3.amazonaws.com\/pr-journal\/z662e36.png\" data-ofn=\"Varscan indel.png\" \/><\/p>"},"is_project":0}]},{"id":"638857","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"751853F1DABB4D588F2457591E8A3B69","previous_guid":"40DF7847326A421EBBE55483EDC8CAB2","previous_id":"638856","last_modified":"1529595695","components":[{"component_id":"1134596","previous_id":0,"original_id":"0","guid":"7E68757995A141DD840FC10208A23241","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Phase 2: Plot homozygous SNPs in the filtered pileup file","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Phase 2: Plot homozygous SNPs in the filtered pileup file"},"is_project":0},{"component_id":"1134595","previous_id":"1134596","original_id":"0","guid":"0AC2391C890C463BAA66EEED122A3B4C","previous_guid":"7E68757995A141DD840FC10208A23241","component_type_id":"1","data_id":null,"data":"<p><strong>Phase 2 Overview<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>To plot homozygous SNPs in our filtered pileup file, we use the R packages dplyr and ggplot2 in R studio. Before plotting, we first change the format of our filtered pileup file to make it easy to manipulate in R studio. Then we use dplyr to remove background SNPs in the data. And finally, we plot our data as binned homozygous SNPs along each chromosome.\u00a0<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Phase 2 Overview<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>To plot homozygous SNPs in our filtered pileup file, we use the R packages dplyr and ggplot2 in R studio. Before plotting, we first change the format of our filtered pileup file to make it easy to manipulate in R studio. Then we use dplyr to remove background SNPs in the data. And finally, we plot our data as binned homozygous SNPs along each chromosome.\u00a0<\/p>"},"is_project":0}]},{"id":"638858","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"DE5E659B535C41E4BD5BA4E0AA8E3312","previous_guid":"751853F1DABB4D588F2457591E8A3B69","previous_id":"638857","last_modified":"1534365959","components":[{"component_id":"1134598","previous_id":0,"original_id":"0","guid":"04D9D25DF7C247D08488F8EB20296344","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Phase 2: Plot homozygous SNPs in the filtered pileup file","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Phase 2: Plot homozygous SNPs in the filtered pileup file"},"is_project":0},{"component_id":"1134597","previous_id":"1134598","original_id":"0","guid":"7D59C2FA7D084921B4F461BB1534365F","previous_guid":"04D9D25DF7C247D08488F8EB20296344","component_type_id":"1","data_id":null,"data":"<p><strong>Change format of the filtered pileup file before importing into R<\/strong><\/p>\n<p><strong>\u00a0<\/strong><\/p>\n<p>1. In a terminal or command prompt, change your working directory to the directory with your filtered pileup file.<\/p>\n<p>\u00a0<\/p>\n<p>cd working_directory<\/p>\n<p>\u00a0<\/p>\n<p>2. Extract chromosomes from the filtered pileup file and divide the total number of deviants by the quality adjusted coverage (output to new column in the file) to get\u00a0your allele frequency (f_variant). This step and all following steps will need the line of code run for each chromosome.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>awk '{if ($1== Chromosome number e.g. 1) print $0}' filtered.pileup | awk '{$14=$13\/$12; print $0}'\u00a0 &gt; chr1.freq.pileup<\/p>\n<p>\u00a0<\/p>\n<p>3. Filter for f_variant &gt;0.5, to filter SNP variants that are not homozygous<\/p>\n<p>awk '{if($14&gt;0.5)print$0}' chr1.freq.pileup &gt; chr1_0.5.pileup<\/p>\n<p>\u00a0<\/p>\n<p>4. Print position, ref, alternate, fvariant, coverage from pileup chr file<\/p>\n<p>awk '{print$2' '$3' '$5' '$14' '$11}' chr1_0.5.pileup &gt; chr1_filter.pileup<\/p>\n<p>\u00a0<\/p>\n<p>5. Convert tttt..ttTT and AaaAA..,, and GGgg..,, and CcccC..,, in 2nd column to T,A,G,C\u00a0<\/p>\n<p>awk '$3~\/[Aa]\/{$3=\"A\"} $3~\/[Tt]\/{$3=\"T\"} $3~\/[Gg]\/{$3=\"G\"} $3~\/[Cc]\/{$3=\"C\"} 1' chr1_filter1.pileup &gt; chr1_filter2.pileup<\/p>\n<p>\u00a0<\/p>\n<p>Optional step 5a: Code to extract only EMS variants, may be needed if a clear mapping region is not identified.\u00a0<\/p>\n<p>awk '{if ($2==\"C\" &amp;&amp; $3~\/[Tt]\/) print $0; else if ($2==\"G\" &amp;&amp; $3~\/[Aa]\/) print $0 }' chr1_filter.pileup &gt; chr1_filter2.pileup<\/p>\n<p>\u00a0<\/p>\n<p>Optional step 5b: Convert tttt..ttTT and AaaAA..,, in 2nd column to T and A<\/p>\n<p>awk '$3~\/[Aa]\/{$3='A'} $3~\/[Tt]\/{$3='T'} 1' chr1_filter2.pileup &gt; chr1_filter3.pileup<\/p>\n<p>\u00a0<\/p>\n<p>6. Covert to .csv<\/p>\n<p>awk '{print$1','$2','$3','$4','$5}' chr1_filter3.pileup &gt; chr1_EMS.csv<\/p>\n<p>\u00a0<\/p>\n<p>7. Add a header to your csv by first creating this csv header in a text editor and then copying into your working directory: position,ref,alt,f_variant,coverage \\n<\/p>\n<p>cat header.csv chr1.csv &gt; chr1_final.csv<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Change format of the filtered pileup file before importing into R<\/strong><\/p>\n<p><strong>\u00a0<\/strong><\/p>\n<p>1. In a terminal or command prompt, change your working directory to the directory with your filtered pileup file.<\/p>\n<p>\u00a0<\/p>\n<p>cd working_directory<\/p>\n<p>\u00a0<\/p>\n<p>2. Extract chromosomes from the filtered pileup file and divide the total number of deviants by the quality adjusted coverage (output to new column in the file) to get\u00a0your allele frequency (f_variant). This step and all following steps will need the line of code run for each chromosome.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>awk '{if ($1== Chromosome number e.g. 1) print $0}' filtered.pileup | awk '{$14=$13\/$12; print $0}'\u00a0 &gt; chr1.freq.pileup<\/p>\n<p>\u00a0<\/p>\n<p>3. Filter for f_variant &gt;0.5, to filter SNP variants that are not homozygous<\/p>\n<p>awk '{if($14&gt;0.5)print$0}' chr1.freq.pileup &gt; chr1_0.5.pileup<\/p>\n<p>\u00a0<\/p>\n<p>4. Print position, ref, alternate, fvariant, coverage from pileup chr file<\/p>\n<p>awk '{print$2' '$3' '$5' '$14' '$11}' chr1_0.5.pileup &gt; chr1_filter.pileup<\/p>\n<p>\u00a0<\/p>\n<p>5. Convert tttt..ttTT and AaaAA..,, and GGgg..,, and CcccC..,, in 2nd column to T,A,G,C\u00a0<\/p>\n<p>awk '$3~\/[Aa]\/{$3=\"A\"} $3~\/[Tt]\/{$3=\"T\"} $3~\/[Gg]\/{$3=\"G\"} $3~\/[Cc]\/{$3=\"C\"} 1' chr1_filter1.pileup &gt; chr1_filter2.pileup<\/p>\n<p>\u00a0<\/p>\n<p>Optional step 5a: Code to extract only EMS variants, may be needed if a clear mapping region is not identified.\u00a0<\/p>\n<p>awk '{if ($2==\"C\" &amp;&amp; $3~\/[Tt]\/) print $0; else if ($2==\"G\" &amp;&amp; $3~\/[Aa]\/) print $0 }' chr1_filter.pileup &gt; chr1_filter2.pileup<\/p>\n<p>\u00a0<\/p>\n<p>Optional step 5b: Convert tttt..ttTT and AaaAA..,, in 2nd column to T and A<\/p>\n<p>awk '$3~\/[Aa]\/{$3='A'} $3~\/[Tt]\/{$3='T'} 1' chr1_filter2.pileup &gt; chr1_filter3.pileup<\/p>\n<p>\u00a0<\/p>\n<p>6. Covert to .csv<\/p>\n<p>awk '{print$1','$2','$3','$4','$5}' chr1_filter3.pileup &gt; chr1_EMS.csv<\/p>\n<p>\u00a0<\/p>\n<p>7. Add a header to your csv by first creating this csv header in a text editor and then copying into your working directory: position,ref,alt,f_variant,coverage \\n<\/p>\n<p>cat header.csv chr1.csv &gt; chr1_final.csv<\/p>"},"is_project":0}]},{"id":"638861","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"577F9CF7CCC44A3682958023578DC4B2","previous_guid":"DE5E659B535C41E4BD5BA4E0AA8E3312","previous_id":"638858","last_modified":"1529519457","components":[{"component_id":"1134604","previous_id":0,"original_id":"0","guid":"C905264AF5DC44A7BD15402F1358176D","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Phase 2: Plot homozygous SNPs in the filtered pileup file","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Phase 2: Plot homozygous SNPs in the filtered pileup file"},"is_project":0},{"component_id":"1134603","previous_id":"1134604","original_id":"0","guid":"E2BEC490756343759A159D46031616BD","previous_guid":"C905264AF5DC44A7BD15402F1358176D","component_type_id":"1","data_id":null,"data":"<p><strong>Load R packages dplyr and ggplot2<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>Start up R studio and begin a new R script:<\/p>\n<p>\u00a0<\/p>\n<p>install.packages('dplyr')<\/p>\n<p>library(dplyr)<\/p>\n<p>library(ggplot2)<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Load R packages dplyr and ggplot2<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>Start up R studio and begin a new R script:<\/p>\n<p>\u00a0<\/p>\n<p>install.packages('dplyr')<\/p>\n<p>library(dplyr)<\/p>\n<p>library(ggplot2)<\/p>"},"is_project":0}]},{"id":"638862","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"57CC3DA6EE5149C384137CC12CDF6D0D","previous_guid":"577F9CF7CCC44A3682958023578DC4B2","previous_id":"638861","last_modified":"1529519874","components":[{"component_id":"1134606","previous_id":0,"original_id":"0","guid":"72A60548667E4FA4A8B606D66BE24282","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Phase 2: Plot homozygous SNPs in the filtered pileup file","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Phase 2: Plot homozygous SNPs in the filtered pileup file"},"is_project":0},{"component_id":"1134605","previous_id":"1134606","original_id":"0","guid":"7CDBE83661B84C8E887B0380E5674125","previous_guid":"72A60548667E4FA4A8B606D66BE24282","component_type_id":"1","data_id":null,"data":"<p><strong>Read your files into R studio (All commands are run the same for each chromosome)<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>chr1_final &lt;-\u00a0 read.csv('path to chr1_final.csv')<\/p>\n<p>\u00a0<\/p>\n<p>If you have files with SNP positions from the WT background or from the maize Hapmap, read these in also.<\/p>\n<p>\u00a0<\/p>\n<p>WT_chr1 &lt;- read.table('path to WT_chr1')<\/p>\n<p>Hapmap_chr1 &lt;- read.table('path to Hapmap_chr1')<\/p>\n<p>\u00a0<\/p>\n<p>If these files are a single column of positions, then you can simply add a header with:<\/p>\n<p>colnames(WT_chr1) &lt;- c(\u201cposition\u201d)<\/p>\n<p>\u00a0<\/p>\n<p>The \"position\" header is essential for later steps.\u00a0<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Read your files into R studio (All commands are run the same for each chromosome)<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>chr1_final &lt;-\u00a0 read.csv('path to chr1_final.csv')<\/p>\n<p>\u00a0<\/p>\n<p>If you have files with SNP positions from the WT background or from the maize Hapmap, read these in also.<\/p>\n<p>\u00a0<\/p>\n<p>WT_chr1 &lt;- read.table('path to WT_chr1')<\/p>\n<p>Hapmap_chr1 &lt;- read.table('path to Hapmap_chr1')<\/p>\n<p>\u00a0<\/p>\n<p>If these files are a single column of positions, then you can simply add a header with:<\/p>\n<p>colnames(WT_chr1) &lt;- c(\u201cposition\u201d)<\/p>\n<p>\u00a0<\/p>\n<p>The \"position\" header is essential for later steps.\u00a0<\/p>"},"is_project":0}]},{"id":"638863","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"E88E43C426D842AA839C565A8CC40364","previous_guid":"57CC3DA6EE5149C384137CC12CDF6D0D","previous_id":"638862","last_modified":"1529519743","components":[{"component_id":"1134608","previous_id":0,"original_id":"0","guid":"4A3B0E2A090848B48EF35B03AF8AFBCE","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Phase 2: Plot homozygous SNPs in the filtered pileup file","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Phase 2: Plot homozygous SNPs in the filtered pileup file"},"is_project":0},{"component_id":"1134607","previous_id":"1134608","original_id":"0","guid":"387EEB6FBB60425A86AED5D6DC022D60","previous_guid":"4A3B0E2A090848B48EF35B03AF8AFBCE","component_type_id":"1","data_id":null,"data":"<p><strong>Optional step: Filter for coverage +- 1SD of the mean<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>chr1_coverage100 &lt;- filter(chr1_180502, coverage&lt;=100)<\/p>\n<p>chr1_summary &lt;- summarise(chr1_coverage100,mean=mean(coverage), sd=sd(coverage))<\/p>\n<p>chr1_filtercov &lt;- filter(chr1_coverage100, coverage&gt;=\"lowerlimit\" &amp; coverage&lt;=\"upperlimit\")<\/p>\n<p>\u00a0<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Optional step: Filter for coverage +- 1SD of the mean<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>chr1_coverage100 &lt;- filter(chr1_180502, coverage&lt;=100)<\/p>\n<p>chr1_summary &lt;- summarise(chr1_coverage100,mean=mean(coverage), sd=sd(coverage))<\/p>\n<p>chr1_filtercov &lt;- filter(chr1_coverage100, coverage&gt;=\"lowerlimit\" &amp; coverage&lt;=\"upperlimit\")<\/p>\n<p>\u00a0<\/p>"},"is_project":0}]},{"id":"638864","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"073F7896B31D453294E9F3EF861313B7","previous_guid":"E88E43C426D842AA839C565A8CC40364","previous_id":"638863","last_modified":"1529520073","components":[{"component_id":"1134615","previous_id":0,"original_id":"0","guid":"52DFDA24613643B0912902F55FC06E3E","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Phase 2: Plot homozygous SNPs in the filtered pileup file","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Phase 2: Plot homozygous SNPs in the filtered pileup file"},"is_project":0},{"component_id":"1134614","previous_id":"1134615","original_id":"0","guid":"74B781FFE02242069DBE7D9E6AA7C4F4","previous_guid":"52DFDA24613643B0912902F55FC06E3E","component_type_id":"1","data_id":null,"data":"<p><strong>Remove background SNPs<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>chr1_final_NoWT\u00a0&lt;- anti_join(chr1_final, WT_chr1, by='position')<\/p>\n<p>chr1_final_NoWTHapmap &lt;- anti_join(chr1_final_NoWT, Hapmap_chr1, by='position')<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Remove background SNPs<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>chr1_final_NoWT\u00a0&lt;- anti_join(chr1_final, WT_chr1, by='position')<\/p>\n<p>chr1_final_NoWTHapmap &lt;- anti_join(chr1_final_NoWT, Hapmap_chr1, by='position')<\/p>"},"is_project":0}]},{"id":"638865","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"E332DDCFC43843CBBE28C1FC1EA32026","previous_guid":"073F7896B31D453294E9F3EF861313B7","previous_id":"638864","last_modified":"1529595819","components":[{"component_id":"1134619","previous_id":0,"original_id":"0","guid":"2E26B7313A1E494589DFC35C7FD44F35","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Phase 2: Plot homozygous SNPs in the filtered pileup file","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Phase 2: Plot homozygous SNPs in the filtered pileup file"},"is_project":0},{"component_id":"1134618","previous_id":"1134619","original_id":"0","guid":"F5BFA93E458340DFA702DFE43046BB5F","previous_guid":"2E26B7313A1E494589DFC35C7FD44F35","component_type_id":"1","data_id":null,"data":"<p><strong>Plot homozygous SNPs with ggplot2<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>Initial plot to figure out which chromosome has the most SNPs.<\/p>\n<p>\u00a0<\/p>\n<p>ggplot(subset(chr1_final_NoWTHapmap, f_variant&gt;=0.99), aes(x=position)) + geom_histogram(binwidth=1000000) + expand_limits(y=c(0,chr1_final_NoWTHapmap)) +scale_x_continuous(breaks = round(seq(min(0), max(chr1_final_NoWTHapmap$position), by=20000000), 10000000)) +theme(axis.text.x = element_text(angle = 70, hjust = 1)) + theme_bw()<\/p>\n<p>\u00a0<\/p>\n<p>Adjust the y-axis for the chromosome with the highest amount of SNPs (Varies from data to data).<\/p>\n<p>\u00a0<\/p>\n<p>ggplot(subset(chr1_final_NoWTHapmap, f_variant&gt;=0.99), aes(x=position)) + geom_histogram(binwidth=1000000) + expand_limits(y=c(0,<strong>1000<\/strong>)) +scale_x_continuous(breaks = round(seq(min(0), max(chr1_final_NoWTHapmap$position), by=20000000), 10000000)) +theme(axis.text.x = element_text(angle = 70, hjust = 1)) + theme_bw()<\/p>\n<p>\u00a0<\/p>\n<p>The mapping region will be a region of\u00a0abundant\u00a0SNPs in your data.\u00a0<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Plot homozygous SNPs with ggplot2<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>Initial plot to figure out which chromosome has the most SNPs.<\/p>\n<p>\u00a0<\/p>\n<p>ggplot(subset(chr1_final_NoWTHapmap, f_variant&gt;=0.99), aes(x=position)) + geom_histogram(binwidth=1000000) + expand_limits(y=c(0,chr1_final_NoWTHapmap)) +scale_x_continuous(breaks = round(seq(min(0), max(chr1_final_NoWTHapmap$position), by=20000000), 10000000)) +theme(axis.text.x = element_text(angle = 70, hjust = 1)) + theme_bw()<\/p>\n<p>\u00a0<\/p>\n<p>Adjust the y-axis for the chromosome with the highest amount of SNPs (Varies from data to data).<\/p>\n<p>\u00a0<\/p>\n<p>ggplot(subset(chr1_final_NoWTHapmap, f_variant&gt;=0.99), aes(x=position)) + geom_histogram(binwidth=1000000) + expand_limits(y=c(0,<strong>1000<\/strong>)) +scale_x_continuous(breaks = round(seq(min(0), max(chr1_final_NoWTHapmap$position), by=20000000), 10000000)) +theme(axis.text.x = element_text(angle = 70, hjust = 1)) + theme_bw()<\/p>\n<p>\u00a0<\/p>\n<p>The mapping region will be a region of\u00a0abundant\u00a0SNPs in your data.\u00a0<\/p>"},"is_project":0}]},{"id":"638866","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"58CA1632C6A242CA9803BEC8FECB5360","previous_guid":"44573A39FD1B4B7A8A1E9CE272EDFCD7","previous_id":"639185","last_modified":"1529590522","components":[{"component_id":"1134631","previous_id":0,"original_id":"0","guid":"EECBC3A716614787B48AE03D74C21294","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Phase 3: Candidate SNP identification with SnpEff","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Phase 3: Candidate SNP identification with SnpEff"},"is_project":0},{"component_id":"1134630","previous_id":"1134631","original_id":"0","guid":"6DB4D08884FD41DD8CE9D5629628760C","previous_guid":"EECBC3A716614787B48AE03D74C21294","component_type_id":"1","data_id":null,"data":"<p><strong>Processing the Varscan file for input into SnpEff<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>We ran these commands on a high performance computing cluster. Regular expression commands can take a long time if they are run locally.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>1. Divide Varscan by chromosome<\/p>\n<p>awk \u2018{if($1==\u201dChromosome number\u201d)print$0}\u2019 Varscan.vcf &gt; chr1.vcf<\/p>\n<p>\u00a0<\/p>\n<p>2. Extract mapping region (vns here)<\/p>\n<p>awk \u2018{if($2&gt;=40000000 &amp;&amp; $2&lt;=70000000)print$0}\u2019 chr1.vcf &gt; chr1_mapping_region.vcf<\/p>\n<p>\u00a0<\/p>\n<p>3. Remove background SNPs (Hapmap and WT) (analyzed on MGHPCC)<\/p>\n<p>bsub -o chr1_mapping_region_NoWT.vcf -e background.err -n 1 -R rusage[mem=4096] -W 120 -q short grep \u2013wvFf background_SNPs.txt chr1_mapping_region.vcf<\/p>\n<p>Alternatively use:\u00a0<\/p>\n<p>awk 'FNR==NR {hash[$0]; next} !($2 in hash)'\u00a0Hapmap_chr1.txt\u00a0chr1_mapping_region.vcf &gt;\u00a0chr1_NoHapmap.vcf<\/p>\n<p>\u00a0<\/p>\n<p>4. Filter for EMS variants<\/p>\n<p>awk '{if ($4=='C' &amp;&amp; $5=='T') print $0; else if ($4=='G' &amp;&amp; $5=='A') print $0 }' chr1_NoHapmap.vcf &gt; chr1_NoHapmap_EMS.vcf<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Processing the Varscan file for input into SnpEff<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>We ran these commands on a high performance computing cluster. Regular expression commands can take a long time if they are run locally.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>1. Divide Varscan by chromosome<\/p>\n<p>awk \u2018{if($1==\u201dChromosome number\u201d)print$0}\u2019 Varscan.vcf &gt; chr1.vcf<\/p>\n<p>\u00a0<\/p>\n<p>2. Extract mapping region (vns here)<\/p>\n<p>awk \u2018{if($2&gt;=40000000 &amp;&amp; $2&lt;=70000000)print$0}\u2019 chr1.vcf &gt; chr1_mapping_region.vcf<\/p>\n<p>\u00a0<\/p>\n<p>3. Remove background SNPs (Hapmap and WT) (analyzed on MGHPCC)<\/p>\n<p>bsub -o chr1_mapping_region_NoWT.vcf -e background.err -n 1 -R rusage[mem=4096] -W 120 -q short grep \u2013wvFf background_SNPs.txt chr1_mapping_region.vcf<\/p>\n<p>Alternatively use:\u00a0<\/p>\n<p>awk 'FNR==NR {hash[$0]; next} !($2 in hash)'\u00a0Hapmap_chr1.txt\u00a0chr1_mapping_region.vcf &gt;\u00a0chr1_NoHapmap.vcf<\/p>\n<p>\u00a0<\/p>\n<p>4. Filter for EMS variants<\/p>\n<p>awk '{if ($4=='C' &amp;&amp; $5=='T') print $0; else if ($4=='G' &amp;&amp; $5=='A') print $0 }' chr1_NoHapmap.vcf &gt; chr1_NoHapmap_EMS.vcf<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>"},"is_project":0}]},{"id":"638868","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"9CFB7E5644C04A599CD7626A3DD5B5FC","previous_guid":"58CA1632C6A242CA9803BEC8FECB5360","previous_id":"638866","last_modified":"1529590999","components":[{"component_id":"1134638","previous_id":0,"original_id":"0","guid":"7B609BBC92044D68BE00B476C0AE9935","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Phase 3: Candidate SNP identification with SnpEff","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Phase 3: Candidate SNP identification with SnpEff"},"is_project":0},{"component_id":"1134637","previous_id":"1134638","original_id":"0","guid":"0829B8FF75214A1787B9CDF8AB76B64F","previous_guid":"7B609BBC92044D68BE00B476C0AE9935","component_type_id":"1","data_id":null,"data":"<p><strong>Run SnpEff on your filtered EMS SNPs<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>You can build a database in SnpEff for version 4 of the maize genome using instructions from the manual (http:\/\/snpeff.sourceforge.net\/SnpEff_manual.html).<\/p>\n<p>Once your database is built, navigate to the SnpEff folder, move your filtered EMS SNP file there, and run the following:<\/p>\n<p>\u00a0<\/p>\n<p>java -jar snpEff.jar Zmv4 chr1_NoHapmap_EMS.vcf<\/p>\n<p>\u00a0<\/p>\n<p>We\u00a0submitted this command to our computing cluster with additional flags.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>bsub -o vns_SNPeff.vcf -e vns_SNPeff.err -n 4 -R rusage[mem=4096] -W 120 -q short<\/p>\n<p>\u00a0<\/p>\n<p>bsub = command to submit a job<\/p>\n<p>-o = output file<\/p>\n<p>-e = error log file<\/p>\n<p>-n = number of computing cores<\/p>\n<p>-R = amount of memory per core<\/p>\n<p>-W = run for a max of 120 minutes<\/p>\n<p>-q = submit to short queue<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Run SnpEff on your filtered EMS SNPs<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>You can build a database in SnpEff for version 4 of the maize genome using instructions from the manual (http:\/\/snpeff.sourceforge.net\/SnpEff_manual.html).<\/p>\n<p>Once your database is built, navigate to the SnpEff folder, move your filtered EMS SNP file there, and run the following:<\/p>\n<p>\u00a0<\/p>\n<p>java -jar snpEff.jar Zmv4 chr1_NoHapmap_EMS.vcf<\/p>\n<p>\u00a0<\/p>\n<p>We\u00a0submitted this command to our computing cluster with additional flags.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>bsub -o vns_SNPeff.vcf -e vns_SNPeff.err -n 4 -R rusage[mem=4096] -W 120 -q short<\/p>\n<p>\u00a0<\/p>\n<p>bsub = command to submit a job<\/p>\n<p>-o = output file<\/p>\n<p>-e = error log file<\/p>\n<p>-n = number of computing cores<\/p>\n<p>-R = amount of memory per core<\/p>\n<p>-W = run for a max of 120 minutes<\/p>\n<p>-q = submit to short queue<\/p>"},"is_project":0}]},{"id":"638869","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"92EB12915F56430384B61937CE5F21C4","previous_guid":"9CFB7E5644C04A599CD7626A3DD5B5FC","previous_id":"638868","last_modified":"1529595862","components":[{"component_id":"1134640","previous_id":0,"original_id":"0","guid":"35B3AA0608F641D48E36DD81E14D5B46","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Phase 3: Candidate SNP identification with SnpEff","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Phase 3: Candidate SNP identification with SnpEff"},"is_project":0},{"component_id":"1134639","previous_id":"1134640","original_id":"0","guid":"E01E31BD92914B3B95329DAE173E6EA8","previous_guid":"35B3AA0608F641D48E36DD81E14D5B46","component_type_id":"1","data_id":null,"data":"<p><strong>Filter your SnpEff file<\/strong><\/p>\n<p>\u00a0\u00a0<\/p>\n<p>1. Filter for Moderate effect SNPs<\/p>\n<p>grep MODERATE vns_SNPeff.vcf &gt; MODERATE.vcf<\/p>\n<p>\u00a0<\/p>\n<p>2. Filter for High effect SNPs<\/p>\n<p>grep HIGH vns_SNPeff.vcf\u00a0 &gt; HIGH.vcf<\/p>\n<p>\u00a0<\/p>\n<p>3. Filter for homozygous SNPs in both your Moderate and High effect files.<\/p>\n<p>grep HOM=1\u00a0MODERATE.vcf &gt; MODERATE_HOM.vcf<\/p>\n<p>grep HOM=1 HIGH.vcf &gt; HIGH_HOM.vcf<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Filter your SnpEff file<\/strong><\/p>\n<p>\u00a0\u00a0<\/p>\n<p>1. Filter for Moderate effect SNPs<\/p>\n<p>grep MODERATE vns_SNPeff.vcf &gt; MODERATE.vcf<\/p>\n<p>\u00a0<\/p>\n<p>2. Filter for High effect SNPs<\/p>\n<p>grep HIGH vns_SNPeff.vcf\u00a0 &gt; HIGH.vcf<\/p>\n<p>\u00a0<\/p>\n<p>3. Filter for homozygous SNPs in both your Moderate and High effect files.<\/p>\n<p>grep HOM=1\u00a0MODERATE.vcf &gt; MODERATE_HOM.vcf<\/p>\n<p>grep HOM=1 HIGH.vcf &gt; HIGH_HOM.vcf<\/p>"},"is_project":0}]},{"id":"639185","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"44573A39FD1B4B7A8A1E9CE272EDFCD7","previous_guid":"E332DDCFC43843CBBE28C1FC1EA32026","previous_id":"638865","last_modified":"1529592105","components":[{"component_id":"1135484","previous_id":0,"original_id":"0","guid":"E9C8E0B6549E41A9BAAF6469C39B4ECB","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Phase 2: Plot homozygous SNPs in the filtered pileup file","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Phase 2: Plot homozygous SNPs in the filtered pileup file"},"is_project":0},{"component_id":"1135483","previous_id":"1135484","original_id":"0","guid":"2FD17AB2495E4305A2BD8A4CE0C1EF19","previous_guid":"E9C8E0B6549E41A9BAAF6469C39B4ECB","component_type_id":"1","data_id":null,"data":"<p><strong>Optional step: Confirm mapping region and narrow down candidate SNPs<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>Once a mapping region has been identified from your plotting, you can use the Varscan indel file to design markers and verify your mapping region. Additionally, if there are several candidate SNPs in your interval, you can use these markers to narrow down the mapping interval.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>1. Extract the mapping region<\/p>\n<p>\u00a0<\/p>\n<p>awk \u2018{if($2&gt;=40000000 &amp;&amp; $2&lt;=70000000)print$0}\u2019 chr1_varscan.vcf &gt; chr1_mapping_region.vcf<\/p>\n<p>\u00a0<\/p>\n<p>2. Call homozygous Indels<\/p>\n<p>\u00a0<\/p>\n<p>grep HOM=1 chr1_mapping_region.vcf &gt; chr1_mapping_region_HOM.vcf<\/p>\n<p>\u00a0<\/p>\n<p>Pick indels that are &gt;=10bp for best results. Design primers over the indel, perform PCR, and run the product on a 3.5% agarose gel. Differences in band size will indicate the genetic background at that indel.\u00a0<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Optional step: Confirm mapping region and narrow down candidate SNPs<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>Once a mapping region has been identified from your plotting, you can use the Varscan indel file to design markers and verify your mapping region. Additionally, if there are several candidate SNPs in your interval, you can use these markers to narrow down the mapping interval.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>1. Extract the mapping region<\/p>\n<p>\u00a0<\/p>\n<p>awk \u2018{if($2&gt;=40000000 &amp;&amp; $2&lt;=70000000)print$0}\u2019 chr1_varscan.vcf &gt; chr1_mapping_region.vcf<\/p>\n<p>\u00a0<\/p>\n<p>2. Call homozygous Indels<\/p>\n<p>\u00a0<\/p>\n<p>grep HOM=1 chr1_mapping_region.vcf &gt; chr1_mapping_region_HOM.vcf<\/p>\n<p>\u00a0<\/p>\n<p>Pick indels that are &gt;=10bp for best results. Design primers over the indel, perform PCR, and run the product on a 3.5% agarose gel. Differences in band size will indicate the genetic background at that indel.\u00a0<\/p>"},"is_project":0}]},{"id":"639186","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"E85BB61264754DB0BEB0800A067AA46F","previous_guid":"92EB12915F56430384B61937CE5F21C4","previous_id":"638869","last_modified":"1529594145","components":[{"component_id":"1135495","previous_id":0,"original_id":"0","guid":"91F707C684DE465BA2FB0850B625E2C5","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Phase 3: Candidate SNP identification with SnpEff","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Phase 3: Candidate SNP identification with SnpEff"},"is_project":0},{"component_id":"1135494","previous_id":"1135495","original_id":"0","guid":"7B84697AC4E540D8A8FE5D4F60720CE3","previous_guid":"91F707C684DE465BA2FB0850B625E2C5","component_type_id":"1","data_id":null,"data":"<p><strong>Annotate Moderate and High effect genes<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>Download the version 4 gene annotations from maizesequence.org (ftp:\/\/ftp.gramene.org\/pub\/gramene\/CURRENT_RELEASE\/gff3\/zea_mays\/gene_function).\u00a0<\/p>\n<p>Use this file and your Moderate and High effect vcf to annotate your genes.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>First, extract gene IDs from your Moderate and High effect vcf files<\/p>\n<p>\u00a0<\/p>\n<p>1. Cut out \"gene:Zm\" from your vcf<\/p>\n<p>\u00a0<\/p>\n<p>awk -F'|' '{print$5}' MODERATE.vcf &gt; MODERATE_filter1.vcf<\/p>\n<p>\u00a0<\/p>\n<p>2. Remove 'gene:'<\/p>\n<p>\u00a0<\/p>\n<p>awk -F':' '{print$2}' MODERATE_filter1.vcf &gt; MODERATE_gene_IDs.txt<\/p>\n<p>\u00a0<\/p>\n<p>Then extract your Moderate IDs from the annotation file.<\/p>\n<p>\u00a0<\/p>\n<p>grep -wf MODERATE_gene_IDs.txt B73v4.gene_function.txt<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Annotate Moderate and High effect genes<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>Download the version 4 gene annotations from maizesequence.org (ftp:\/\/ftp.gramene.org\/pub\/gramene\/CURRENT_RELEASE\/gff3\/zea_mays\/gene_function).\u00a0<\/p>\n<p>Use this file and your Moderate and High effect vcf to annotate your genes.\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>First, extract gene IDs from your Moderate and High effect vcf files<\/p>\n<p>\u00a0<\/p>\n<p>1. Cut out \"gene:Zm\" from your vcf<\/p>\n<p>\u00a0<\/p>\n<p>awk -F'|' '{print$5}' MODERATE.vcf &gt; MODERATE_filter1.vcf<\/p>\n<p>\u00a0<\/p>\n<p>2. Remove 'gene:'<\/p>\n<p>\u00a0<\/p>\n<p>awk -F':' '{print$2}' MODERATE_filter1.vcf &gt; MODERATE_gene_IDs.txt<\/p>\n<p>\u00a0<\/p>\n<p>Then extract your Moderate IDs from the annotation file.<\/p>\n<p>\u00a0<\/p>\n<p>grep -wf MODERATE_gene_IDs.txt B73v4.gene_function.txt<\/p>"},"is_project":0}]},{"id":"639188","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"455D88457B3B41A5AF61CAF277E45BE5","previous_guid":"E85BB61264754DB0BEB0800A067AA46F","previous_id":"639186","last_modified":"1529592995","components":[{"component_id":"1135508","previous_id":0,"original_id":"0","guid":"083F62BB91A3460D93FBB3E4F31BD176","previous_guid":null,"component_type_id":"6","data_id":"0","data":"Phase 3: Candidate SNP identification with SnpEff","order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Phase 3: Candidate SNP identification with SnpEff"},"is_project":0},{"component_id":"1135507","previous_id":"1135508","original_id":"0","guid":"DE4DE0C3FDAA48E683D0F3A1B9C4C0D1","previous_guid":"083F62BB91A3460D93FBB3E4F31BD176","component_type_id":"1","data_id":null,"data":"<p><strong>Optional step: Use Provean to assess Moderate SNPs<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>You can use Provean to determine if a Moderate SNP is likely to be deleterious (http:\/\/provean.jcvi.org\/seq_submit.php). The accuracy of Provean is about 77.9% and may miss your candidate SNP. Additionally, Provean is low throughput for non-human genomes, so for large numbers of Moderate SNPs an alternative program or narrowing down the mapping interval may be more successful for candidate SNP identification.\u00a0<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Optional step: Use Provean to assess Moderate SNPs<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>You can use Provean to determine if a Moderate SNP is likely to be deleterious (http:\/\/provean.jcvi.org\/seq_submit.php). The accuracy of Provean is about 77.9% and may miss your candidate SNP. Additionally, Provean is low throughput for non-human genomes, so for large numbers of Moderate SNPs an alternative program or narrowing down the mapping interval may be more successful for candidate SNP identification.\u00a0<\/p>"},"is_project":0}]}]}