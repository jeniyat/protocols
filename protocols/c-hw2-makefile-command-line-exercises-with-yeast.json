{"uri":"c-hw2-makefile-command-line-exercises-with-yeast-ftrbnm6","version_id":"5","protocol_name":"C_HW2: Makefile, command line exercises with yeast","protocol_name_html":"C_HW2: Makefile, command line exercises with yeast","is_prepublished":"0","can_edit":"0","parent_id":"3494","api_version":"1","is_new_mode":"1","last_modified":"1518156661","type_id":"1","link":"","fork_id":"","public_fork_note":"","number_of_steps":"9","has_versions":"1","first_published_date":"1473873219","publish_date":"2016-09-14 17:13:39","documents":null,"have_protocol_in_step":"0","is_protocol_in_step":"0","vendor_name":"Contributed by users","vendor_link":"https:\/\/www.protocols.io","vendor_logo":"\/img\/vendors\/1.png","mod_mins":"-45","mod_secs":"1","description":"<p>Yeast is a well-characterized genome due to its small size and historical significance in genetics. \u00a0The website\u00a0http:\/\/yeastgenome.org\/ is a dedicated resource for yeast genomics.<\/p>\n<p>\u00a0<\/p>\n<p>For this exercise, I want you to create a \"Makefile\" that will execute this entire pipeline if I type \"make.\" \u00a0<\/p>","is_bookmarked":"0","can_reassign":"1","before_start":"","has_guidelines":"0","materials":[],"warning":"","version_class":"3494","public":"1","is_owner":"1","is_original_owner":"1","created_on":"1473872758","protocol_affiliation":"University of Arizona","affiliation":"University of Arizona","doi":"dx.doi.org\/10.17504\/protocols.io.ftrbnm6","doi_status":"2","changed_fork_steps":null,"profile_url":"Ken-w2u26413","protocol_img":"https:\/\/s3.amazonaws.com\/pr-journal\/er9i6d.png","profile_image":"https:\/\/s3.amazonaws.com\/pr-journal\/caii6d.png","full_name":"Ken Youens-Clark","created_by":"Ken Youens-Clark","private_link":null,"original_img":"1","username":"ken-youensclark","is_retracted":"0","retraction_reason":null,"plos_id":null,"manuscript_citation":null,"journal_name":null,"is_donations_disabled":"0","is_donations_disabled_by_user":"9","item_record_id":207393,"fork_info":[],"compare_forks":[],"protocols":[],"groups":[{"group_id":"224","group_uri":"metafunc-course","group_name":"MetaFunc Course","group_logo":"https:\/\/s3.amazonaws.com\/pr-journal\/emybvtw.jpg","requested_uid":null,"request_flag":null,"my_request":"1"}],"number_of_shared_runs":[],"ownership_history":[],"keywords":"","transfer_to_user":[],"sub_transfer":false,"is_transfer_pending":false,"number_of_bookmarks":"1","collections":[],"tags":[],"archived":0,"sub_authors":[],"sub_protocols_number":0,"can_edit_shared":0,"shared_runs":[],"is_shared_run":0,"is_shared":1,"banner":null,"contact_badges":[{"badge_id":"4","badge_image":"\/img\/badges\/gold.svg","badge_description":"Gold power author!"},{"badge_id":"5","badge_image":"\/img\/badges\/earlyadopter.svg","badge_description":"Early adopter"},{"badge_id":"6","badge_image":"\/img\/badges\/socialbutterfly.svg","badge_description":"Social butterfly"}],"number_of_comments":0,"is_locked":0,"is_locked_by":false,"authors":"Ken Youens-Clark","authors_list":[{"name":"Ken Youens-Clark","affiliation":"University of Arizona","username":null,"profile_image":null}],"user":{"profile_image":"https:\/\/s3.amazonaws.com\/pr-journal\/caii6d.png","username":"ken-youensclark","full_name":"Ken Youens-Clark","created_by":"Ken Youens-Clark"},"access":{"can_view":"1","can_remove":"0","can_add":"0","can_edit":0,"can_publish":0,"can_get_doi":0,"can_share":"0","can_move":"1","can_transfer":"1","can_download":"1","is_locked":"0"},"is_contact_suspended":0,"guidelines":"","status_id":"1","is_research":"1","status_info":null,"steps":[{"id":"174406","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"FCEC62983D5D4A45B7973BB7D6BB2438","previous_guid":null,"previous_id":"0","last_modified":"1502718909","components":[{"component_id":"985571","previous_id":0,"original_id":"0","guid":"C73D05616663443084262B61E43E9A3C","previous_guid":null,"component_type_id":"6","data_id":null,"data":null,"order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":null},"is_project":0},{"component_id":"204183","previous_id":"985571","original_id":"0","guid":"D4A55755CEE34ACA9B7A1B9516C7E946","previous_guid":"C73D05616663443084262B61E43E9A3C","component_type_id":"1","data_id":"0","data":"<p>In your \"abe487\/problems\" directory, create a directory called\u00a0'yeast':<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0 $ cd ~\/abe487\/problems<\/p>\n<p>\u00a0 $ mkdir yeast<\/p>\n<p>\u00a0 $ cd !$<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>In your \"abe487\/problems\" directory, create a directory called\u00a0'yeast':<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0 $ cd ~\/abe487\/problems<\/p>\n<p>\u00a0 $ mkdir yeast<\/p>\n<p>\u00a0 $ cd !$<\/p>"},"is_project":0}]},{"id":"174407","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"8F3BB40D00934E209DEB338C34A958E8","previous_guid":"FCEC62983D5D4A45B7973BB7D6BB2438","previous_id":"174406","last_modified":"1502718909","components":[{"component_id":"985572","previous_id":0,"original_id":"0","guid":"85D7B88632CD4F5CBC8B112815DA86C6","previous_guid":null,"component_type_id":"6","data_id":null,"data":null,"order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":null},"is_project":0},{"component_id":"204184","previous_id":"985572","original_id":"0","guid":"EC275E548CD24614A8C3D9F3C81B4B34","previous_guid":"85D7B88632CD4F5CBC8B112815DA86C6","component_type_id":"1","data_id":"0","data":"<p>Go to <a href=\"http:\/\/downloads.yeastgenome.org\/sequence\/S288C_reference\/chromosomes\/fasta\/\" target=\"_blank\">http:\/\/downloads.yeastgenome.org\/sequence\/S288C_reference\/chromosomes\/fasta\/<\/a> and download the '.fsa' files. \u00a0You can right-click on the links to copy the link location and then 'wget' the file. \u00a0<\/p>\n<p>\u00a0<\/p>\n<p>Put all the '*.fsa' files into a 'fasta' directory.<\/p>\n<p>\u00a0<\/p>\n<p>Can you think of a way to easily script this, or will you just click on all 17 chromosomes?<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Go to <a href=\"http:\/\/downloads.yeastgenome.org\/sequence\/S288C_reference\/chromosomes\/fasta\/\" target=\"_blank\">http:\/\/downloads.yeastgenome.org\/sequence\/S288C_reference\/chromosomes\/fasta\/<\/a> and download the '.fsa' files. \u00a0You can right-click on the links to copy the link location and then 'wget' the file. \u00a0<\/p>\n<p>\u00a0<\/p>\n<p>Put all the '*.fsa' files into a 'fasta' directory.<\/p>\n<p>\u00a0<\/p>\n<p>Can you think of a way to easily script this, or will you just click on all 17 chromosomes?<\/p>"},"is_project":0}]},{"id":"174408","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"1A2A344AA4AC4EE99C71F954BBE34932","previous_guid":"8F3BB40D00934E209DEB338C34A958E8","previous_id":"174407","last_modified":"1502718909","components":[{"component_id":"985573","previous_id":0,"original_id":"0","guid":"CE0138780D20494E85BFFE080F9D8C6A","previous_guid":null,"component_type_id":"6","data_id":null,"data":null,"order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":null},"is_project":0},{"component_id":"204185","previous_id":"985573","original_id":"0","guid":"9111A5A41A0C4C80B75085D88D8F0495","previous_guid":"CE0138780D20494E85BFFE080F9D8C6A","component_type_id":"1","data_id":"0","data":"<p>Make a single whole genome file called 'fasta\/genome.fa'<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Make a single whole genome file called 'fasta\/genome.fa'<\/p>"},"is_project":0}]},{"id":"174409","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"7FD4AAE0342F4753BDDEB749C0DCD7D5","previous_guid":"1A2A344AA4AC4EE99C71F954BBE34932","previous_id":"174408","last_modified":"1502718909","components":[{"component_id":"985574","previous_id":0,"original_id":"0","guid":"6D371372461647B5A5A2DEF08E19707E","previous_guid":null,"component_type_id":"6","data_id":null,"data":null,"order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":null},"is_project":0},{"component_id":"204186","previous_id":"985574","original_id":"0","guid":"FD4854D89F5E4FCE9FD798940883DE53","previous_guid":"6D371372461647B5A5A2DEF08E19707E","component_type_id":"1","data_id":"0","data":"<p>Count the chromosomes in the whole genome file. \u00a0Put the number into a file called \"chr-count.\"<\/p>\n<p>\u00a0<\/p>\n<p>HINT: Each of the original FASTA files contains a single chromosome.<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Count the chromosomes in the whole genome file. \u00a0Put the number into a file called \"chr-count.\"<\/p>\n<p>\u00a0<\/p>\n<p>HINT: Each of the original FASTA files contains a single chromosome.<\/p>"},"is_project":0}]},{"id":"174410","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"FFFD105E9546443B95D14891387058FD","previous_guid":"7FD4AAE0342F4753BDDEB749C0DCD7D5","previous_id":"174409","last_modified":"1502718909","components":[{"component_id":"985575","previous_id":0,"original_id":"0","guid":"497CFC86E8FD4870B1CCB43558CC2654","previous_guid":null,"component_type_id":"6","data_id":null,"data":null,"order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":null},"is_project":0},{"component_id":"204187","previous_id":"985575","original_id":"0","guid":"4BBC982ADA9844D28AFB354F7618E66C","previous_guid":"497CFC86E8FD4870B1CCB43558CC2654","component_type_id":"1","data_id":"0","data":"<p>Find\u00a0size of total genome. \u00a0Put the answer into a file called 'chr-size.'<\/p>\n<p>\u00a0<\/p>\n<p>HINT: Look up the command 'wc' and find out what it does. The size of the genome can be determined by counting the number of characters in the genome (not on the same line as a fasta header).<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Find\u00a0size of total genome. \u00a0Put the answer into a file called 'chr-size.'<\/p>\n<p>\u00a0<\/p>\n<p>HINT: Look up the command 'wc' and find out what it does. The size of the genome can be determined by counting the number of characters in the genome (not on the same line as a fasta header).<\/p>"},"is_project":0}]},{"id":"174411","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"528235CF20CE444DBD7DDF24E800F5D2","previous_guid":"FFFD105E9546443B95D14891387058FD","previous_id":"174410","last_modified":"1502718910","components":[{"component_id":"985576","previous_id":0,"original_id":"0","guid":"FC4B05B0924847158373662C11FFEDFE","previous_guid":null,"component_type_id":"6","data_id":null,"data":null,"order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":null},"is_project":0},{"component_id":"204188","previous_id":"985576","original_id":"0","guid":"E591AD3B788D424C810AAEDF1C06D7E5","previous_guid":"FC4B05B0924847158373662C11FFEDFE","component_type_id":"1","data_id":"0","data":"<p>Download the list of cerevisiae chromosome features: <a href=\"http:\/\/downloads.yeastgenome.org\/curation\/chromosomal_feature\/SGD_features.tab\" target=\"_blank\">http:\/\/downloads.yeastgenome.org\/curation\/chromosomal_feature\/SGD_features.tab<\/a><\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>Columns:<\/p>\n<ol>\n<li>Primary Standfor Gene Database ID (SGDID) (mandatory)<\/li>\n<li>Feature type (mandatory)<\/li>\n<li>Feature qualifier (optional)<\/li>\n<li>Feature name (optional)<\/li>\n<li>Standard gene name (optional)<\/li>\n<li>Alias (optional, multiples separated by |)<\/li>\n<li>Parent feature name (optional)<\/li>\n<li>Secondary SGDID (optional, multiples separated by |)<\/li>\n<li>Chromosome (optional)1<\/li>\n<li>Start_coordinate (optional)1<\/li>\n<li>Stop_coordinate (optional)1<\/li>\n<li>Strand (optional)1<\/li>\n<li>Genetic position (optional)<\/li>\n<li>Coordinate version (optional)<\/li>\n<li>Sequence version (optional)<\/li>\n<li>Description (optional)<\/li>\n<\/ol>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Download the list of cerevisiae chromosome features: <a href=\"http:\/\/downloads.yeastgenome.org\/curation\/chromosomal_feature\/SGD_features.tab\" target=\"_blank\">http:\/\/downloads.yeastgenome.org\/curation\/chromosomal_feature\/SGD_features.tab<\/a><\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>Columns:<\/p>\n<ol>\n<li>Primary Standfor Gene Database ID (SGDID) (mandatory)<\/li>\n<li>Feature type (mandatory)<\/li>\n<li>Feature qualifier (optional)<\/li>\n<li>Feature name (optional)<\/li>\n<li>Standard gene name (optional)<\/li>\n<li>Alias (optional, multiples separated by |)<\/li>\n<li>Parent feature name (optional)<\/li>\n<li>Secondary SGDID (optional, multiples separated by |)<\/li>\n<li>Chromosome (optional)1<\/li>\n<li>Start_coordinate (optional)1<\/li>\n<li>Stop_coordinate (optional)1<\/li>\n<li>Strand (optional)1<\/li>\n<li>Genetic position (optional)<\/li>\n<li>Coordinate version (optional)<\/li>\n<li>Sequence version (optional)<\/li>\n<li>Description (optional)<\/li>\n<\/ol>"},"is_project":0}]},{"id":"174412","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"BBC0B96BCE0045B881E98A4792063933","previous_guid":"528235CF20CE444DBD7DDF24E800F5D2","previous_id":"174411","last_modified":"1502718910","components":[{"component_id":"985577","previous_id":0,"original_id":"0","guid":"E91132C81AA040ACA9DC16DF76B46A9B","previous_guid":null,"component_type_id":"6","data_id":null,"data":null,"order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":null},"is_project":0},{"component_id":"204189","previous_id":"985577","original_id":"0","guid":"8E9423E180F9413F88F0F89073A3D139","previous_guid":"E91132C81AA040ACA9DC16DF76B46A9B","component_type_id":"1","data_id":"0","data":"<p>Count total genes ('ORF's) into a file called 'gene-count.'<\/p>\n<p>\u00a0<\/p>\n<p>Count only verified genes into a file called 'verified-genes.'<\/p>\n<p>\u00a0<\/p>\n<p>Count only uncharacterized genes into a file called 'uncharacterized-genes.'<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Count total genes ('ORF's) into a file called 'gene-count.'<\/p>\n<p>\u00a0<\/p>\n<p>Count only verified genes into a file called 'verified-genes.'<\/p>\n<p>\u00a0<\/p>\n<p>Count only uncharacterized genes into a file called 'uncharacterized-genes.'<\/p>"},"is_project":0}]},{"id":"174413","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"80C21CCEA2A64685B516A83D4884CF25","previous_guid":"BBC0B96BCE0045B881E98A4792063933","previous_id":"174412","last_modified":"1502718910","components":[{"component_id":"985578","previous_id":0,"original_id":"0","guid":"F3ED7A6AADA942F7AA14D93509A737AC","previous_guid":null,"component_type_id":"6","data_id":null,"data":null,"order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":null},"is_project":0},{"component_id":"204190","previous_id":"985578","original_id":"0","guid":"8FE178EED1FF40B0B8C0AD241155C4C9","previous_guid":"F3ED7A6AADA942F7AA14D93509A737AC","component_type_id":"1","data_id":"0","data":"<p>Download the file '<a href=\"ftp:\/\/ftp.imicrobe.us\/abe487\/yeast\/palinsreg.txt\" target=\"_blank\">ftp:\/\/ftp.imicrobe.us\/abe487\/yeast\/palinsreg.txt<\/a>'<\/p>\n<p>\u00a0<\/p>\n<ol>\n<li>These are detected terminator sequences in the <em>E. coli<\/em> genome (using the program <a href=\"http:\/\/nar.oxfordjournals.org\/content\/30\/3\/675.long\" target=\"_blank\">GeSTer<\/a>, if you're curious).<\/li>\n<li>The command <strong>grep '\/G=[^ ]*' somefile<\/strong> will find all lines that match \/G=<em>somegenename<\/em>, where somegenename is a sequence of non-blank characters. Read the output of <strong>man grep<\/strong> and figure out how to <em>-o<\/em>nly print \/G=<em>somegenename<\/em>, rather than the whole line.<\/li>\n<li>Pipe the results of part (2) through a <strong>cut<\/strong> command to get only everything after the '='<\/li>\n<li>Store the <strong>unique, sorted\u00a0<\/strong>results of part (3) into a file named 'terminated_genes'<\/li>\n<\/ol>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Download the file '<a href=\"ftp:\/\/ftp.imicrobe.us\/abe487\/yeast\/palinsreg.txt\" target=\"_blank\">ftp:\/\/ftp.imicrobe.us\/abe487\/yeast\/palinsreg.txt<\/a>'<\/p>\n<p>\u00a0<\/p>\n<ol>\n<li>These are detected terminator sequences in the <em>E. coli<\/em> genome (using the program <a href=\"http:\/\/nar.oxfordjournals.org\/content\/30\/3\/675.long\" target=\"_blank\">GeSTer<\/a>, if you're curious).<\/li>\n<li>The command <strong>grep '\/G=[^ ]*' somefile<\/strong> will find all lines that match \/G=<em>somegenename<\/em>, where somegenename is a sequence of non-blank characters. Read the output of <strong>man grep<\/strong> and figure out how to <em>-o<\/em>nly print \/G=<em>somegenename<\/em>, rather than the whole line.<\/li>\n<li>Pipe the results of part (2) through a <strong>cut<\/strong> command to get only everything after the '='<\/li>\n<li>Store the <strong>unique, sorted\u00a0<\/strong>results of part (3) into a file named 'terminated_genes'<\/li>\n<\/ol>"},"is_project":0}]},{"id":"174415","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"504C076873DA422CA8C42C2B8D098EA4","previous_guid":"80C21CCEA2A64685B516A83D4884CF25","previous_id":"174413","last_modified":"1502718910","components":[{"component_id":"985579","previous_id":0,"original_id":"0","guid":"BE5D004D333B47C493071A9BC1C29F68","previous_guid":null,"component_type_id":"6","data_id":null,"data":null,"order_id":"0","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":null},"is_project":0},{"component_id":"204192","previous_id":"985579","original_id":"0","guid":"8EAD5CAF3369461490D9DC50A5076226","previous_guid":"BE5D004D333B47C493071A9BC1C29F68","component_type_id":"1","data_id":"0","data":"<p>Add your Makefile to your Git repo and push it. \u00a0<strong>DO NOT ADD ANYTHING ELSE (e.g., the FASTA files)!!!<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>\u00a0 $ git add Makefile<\/p>\n<p>\u00a0 $ git commit -m 'adding Makefile for C_HW2' Makefile<\/p>\n<p>\u00a0 $ git push<\/p>\n<p>\u00a0<\/p>\n<p>Confirm that you can see \"problems\/yeast\/Makefile\" in your web browser when you look at your Github repo. \u00a0I will \"git pull\" this, execute 'make,' and run a test to check that all the files exist and have the correct answers.<\/p>","order_id":"1","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Add your Makefile to your Git repo and push it. \u00a0<strong>DO NOT ADD ANYTHING ELSE (e.g., the FASTA files)!!!<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>\u00a0 $ git add Makefile<\/p>\n<p>\u00a0 $ git commit -m 'adding Makefile for C_HW2' Makefile<\/p>\n<p>\u00a0 $ git push<\/p>\n<p>\u00a0<\/p>\n<p>Confirm that you can see \"problems\/yeast\/Makefile\" in your web browser when you look at your Github repo. \u00a0I will \"git pull\" this, execute 'make,' and run a test to check that all the files exist and have the correct answers.<\/p>"},"is_project":0}]}]}