{"id":17622,"title":"SYSB 3036 W02: Parsing FASTA files","title_html":"SYSB 3036 W02: Parsing FASTA files","image":{"source":"https:\/\/www.protocols.io\/img\/default_protocol.png","placeholder":"https:\/\/www.protocols.io\/img\/default_protocol.png"},"doi":"dx.doi.org\/10.17504\/protocols.io.vfwe3pe","doi_status":2,"uri":"sysb-3036-w02-parsing-fasta-files-vfwe3pe","type_id":1,"published_on":1543180319,"version_id":0,"created_on":1541714408,"categories":null,"creator":{"name":"Frank Aylward","affiliation":"Virginia Tech","username":"frank-aylward","link":null,"image":{"source":"https:\/\/s3.amazonaws.com\/pr-journal\/v39jtte.png","placeholder":"https:\/\/s3.amazonaws.com\/pr-journal\/v39jtte.png"},"badges":[{"id":4,"image":{"source":"\/img\/badges\/gold.svg","placeholder":"\/img\/badges\/gold.svg"},"name":"Gold power author!"}],"research_interests":null},"journal":null,"journal_name":null,"journal_link":null,"public":1,"has_versions":0,"link":null,"number_of_steps":13,"authors":[{"name":"Frank Aylward","affiliation":"Virginia Tech","username":"frank-aylward","link":null,"image":{"source":"https:\/\/s3.amazonaws.com\/pr-journal\/v39jtte.png","placeholder":"https:\/\/s3.amazonaws.com\/pr-journal\/v39jtte.png"},"badges":[],"research_interests":null}],"versions":[],"groups":[],"has_subprotocols":0,"is_subprotocol":0,"is_bookmarked":0,"forks_count":{"private":0,"public":0},"steps":[{"id":680970,"guid":"CDD99A30E3A111E8A2F9277C43095C53","previous_id":null,"previous_guid":null,"modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"3EDB4E39BEA84914B9D6517827856CC0","order_id":1,"type_id":6,"title":"Section","source":{"title":null}},{"id":1054723,"guid":"D33879A2C54142D9BFCB3F39661A8A62","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Today we will be looking at the genome of Yersinia pestis, which can be found on NCBI at this location<\/div><div class = \"text-block\"><a style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">ftp:\/\/ftp.ncbi.nlm.nih.gov\/genomes\/all\/GCA\/000\/009\/065\/GCA_000009065.1_ASM906v1<\/span><\/a><\/div><div class = \"text-block\">Copy this URL into your browser and take a look at the files. These are publicly-available files that are made available from the National Center for Biotechnology Information (NCBI). <\/div><div class = \"text-block\">Note that many of the files are in a compressed .gz format. <\/div><div class = \"text-block\">.fna files are Fasta Nucleic Acid (chromosome or gene sequences)<\/div><div class = \"text-block\">.faa files are Fasta Amino Acid   (protein sequences)<\/div><div class = \"text-block\">Today we will be most interested in the gene and chromosome files.<\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":null},{"id":680971,"guid":"23F92DE0E3A211E8A2F9277C43095C53","previous_id":680970,"previous_guid":"CDD99A30E3A111E8A2F9277C43095C53","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"89C542F738CD42DCB5F64C13316F647B","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054723,"guid":"F50123BEB99444E8AAC0CDE7155B313D","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">To get started let's download the main genome FASTA file for Yersinia Pestis CO92<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">wget <\/span><\/div><div class = \"text-block\"><a style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">ftp:\/\/ftp.ncbi.nlm.nih.gov\/genomes\/all\/GCA\/000\/009\/065\/GCA_000009065.1_ASM906v1\/GCA_000009065.1_ASM906v1_genomic.<\/span><\/a><\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">fna.gz<\/span><\/div><div class = \"text-block\">This command uses the common Unix utility \"wget\", which will download a file directy to the folder in which you are located. After doing this you should see the .fna.gz file in your folder. You can check this with the \"ls\" command. <\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#A492FF"},{"id":680972,"guid":"6658C1A0E3A211E8A2F9277C43095C53","previous_id":680971,"previous_guid":"23F92DE0E3A211E8A2F9277C43095C53","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"AFA727A9CADD477DA0A952D667B12910","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054723,"guid":"647706DBFC354E70A7FFE451E93DFC8A","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Because this file is compressed, we must first uncompress it with the \"gunzip\" command (another common Unix utility). <\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">gunzip GCA_000009065.1_ASM906v1_genomic.fna.gz<\/span><\/div><div class = \"text-block\">After this you should see the exact same file, only without the .gz ending. You can check this with the \"ls\" command. <\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#A492FF"},{"id":680973,"guid":"CADA6E80E3A211E8A2F9277C43095C53","previous_id":680972,"previous_guid":"6658C1A0E3A211E8A2F9277C43095C53","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"2543E4BEA25F45B895B251AC3D8A1371","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054723,"guid":"944D35381C5A446588F6292A002FC63E","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Now to start analyzing this FASTA file we first want to check on the formatting. <\/div><div class = \"text-block\">Sometimes genome files can be quite large, so we don't want to open the entire file with a text editor. Instead we can just check the first and last few lines to see what the format looks like. For this we can use the \"head\" and \"tail\" Unix commands. <\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">head<\/span><span style = \"font-weight:bold;font-weight:bold;\"> <\/span><span style = \"font-weight:bold;\">GCA_000009065.1_ASM906v1_genomic.fna<\/span><\/div><div class = \"text-block\">and<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">tail GCA_000009065.1_ASM906v1_genomic.fna<\/span><\/div><div class = \"text-block\">You should see a pretty typical FASTA format. Header lines start with a \">\" and provide names and descriptions, and subsequent lines have the actual sequence information (in this case ATGCs since the sequence is DNA). <\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#A492FF"},{"id":680974,"guid":"3DF8CC90E3A311E8A2F9277C43095C53","previous_id":680973,"previous_guid":"CADA6E80E3A211E8A2F9277C43095C53","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"CA58D455705A4993A72F785876258EDE","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054723,"guid":"4234E54BA5174E9BA6C078CD4D92676F","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Now that we have confirmed this is a typical FASTA file, we can start analyzing it with the \"seqkit\" tool. <\/div><div class = \"text-block\">The home page for seqkit with instructions for use is here: <\/div><div class = \"text-block\"><a style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">https:\/\/github.com\/shenwei356\/seqkit<\/span><\/a><\/div><div class = \"text-block\">You can also get a list of instructions by typing:<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">seqkit --help <\/span><\/div><div class = \"text-block\">seqkit is a very versatile tools and it has a large number of sub-commands. We will primarily be using the \"stats\" and \"fx2tab\" commands, so check out the help menu for those with:<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">seqkit stats --help<\/span><\/div><div class = \"text-block\">and <\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">seqkit fx2tab --help<\/span><\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#A492FF"},{"id":680975,"guid":"AE9CF0F0E3A511E8A2F9277C43095C53","previous_id":680974,"previous_guid":"3DF8CC90E3A311E8A2F9277C43095C53","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"9C27B1415BF144A58785BD7988A79EC0","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054723,"guid":"7AB3B9879EE54463BF7D8EB77CA9B381","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Now let's use the \"stats\" subcommand in seqkit to get some genome statistics for Yersinia pestis:<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">seqkit stats GCA_000009065.1_ASM906v1_cds_from_genomic.fna<\/span><\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#A492FF"},{"id":680977,"guid":"38D43DF0E3A611E8A2F9277C43095C53","previous_id":680975,"previous_guid":"AE9CF0F0E3A511E8A2F9277C43095C53","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"30012DFCF13842268CBC7349B9C5355E","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054723,"guid":"D8E542738C3B4C72A85129B329A75EC5","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Now let's get some stats for the individual sequences in the file using the \"fx2tab\" sub-command:<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">seqkit fx2tab -g -l -n GCA_000009065.1_ASM906v1_genomic.fna<\/span><\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#A492FF"},{"id":680980,"guid":"6F00CD80E3A611E8A2F9277C43095C53","previous_id":680977,"previous_guid":"38D43DF0E3A611E8A2F9277C43095C53","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"5C0F4BC4D2F8408CAD0206EACD41C77F","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054723,"guid":"AA0C5D11D16E47FA81735A1CE48B9CED","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Now let's download and analyze the individual genes present in the Yersinia pestis genome:<\/div><div class = \"text-block\">We will download and unzip the \"cds_from_genomic.fna.gz\" file from the FTP site in Step 1:<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">wget <\/span><\/div><div class = \"text-block\"><a style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">ftp:\/\/ftp.ncbi.nlm.nih.gov\/genomes\/all\/GCA\/000\/009\/065\/GCA_000009065.1_ASM906v1\/GCA_000009065.1_ASM906v1_cds_from_genomic.fna.gz<\/span><\/a><\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">gunzip GCA_000009065.1_ASM906v1_cds_from_genomic.fna.gz<\/span><\/div><div class = \"text-block\">Don't forget to use the \"ls\" command afterwards to make sure the files are there. <\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#A492FF"},{"id":680984,"guid":"BEEB0630E3A611E8A2F9277C43095C53","previous_id":680980,"previous_guid":"6F00CD80E3A611E8A2F9277C43095C53","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"7846B8A2D58F4AEE9129188260459D5A","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054723,"guid":"40DC0F54FE7B42508A0520A83E4461C2","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Now let's get some basic stats about the genes with the \"stats\" command. <\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">seqkit stats GCA_000009065.1_ASM906v1_cds_from_genomic.fna<\/span><\/div><div class = \"text-block\">How does the total length of the protein-coding genes compare to the total length of the whole genome?<\/div><div class = \"text-block\">What is the range of gene lengths?<\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#A492FF"},{"id":680987,"guid":"36B07E20E3A711E8A2F9277C43095C53","previous_id":680984,"previous_guid":"BEEB0630E3A611E8A2F9277C43095C53","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"9997776046F8482B98F360855DA5699A","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054723,"guid":"361F43F11CF446B3A5E0DED0753CD85E","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Let's look at some stats from individual genes using the \"fx2tab\" command:<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">seqkit fx2tab -a -i -g -l -n GCA_000009065.1_ASM906v1_cds_from_genomic.fna | head<\/span><\/div><div class = \"text-block\">Note that we are piping the command to the \"head\" command here, so that only the first 10 lines are shown. Otherwise thousands of entries would flood our terminal, which is always difficult to interpret (and may cause it to crash). <\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#A492FF"},{"id":680988,"guid":"77F61660E3A711E8A2F9277C43095C53","previous_id":680987,"previous_guid":"36B07E20E3A711E8A2F9277C43095C53","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"D729D58D79C54820BC7F01620912DDEA","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054723,"guid":"5C06527CDA504CE2AF5D707DA31AD6DC","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Now let's try to sort the genes based on their length, so that we can find the names of the longest and shortest genes:<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">seqkit fx2tab -a -i -g -l -n GCA_000009065.1_ASM906v1_cds_from_genomic.fna | sort -r -n -k 2,2 | head<\/span><\/div><div class = \"text-block\">This should return the longest 10 genes. The \"sort\" command uses several flags. <\/div><div class = \"text-block\">-r indicates a reverse sort (default is from low to high. <\/div><div class = \"text-block\">-n indicates a numeric sort (default is alphabetical). <\/div><div class = \"text-block\">-k denotes the columns to sort by. The \"2,2\" means we are sorting only by the second column. Note that all whitespace counts as a single tab here, so the second column is the length (it would be the 4th if we exported the results to a file). <\/div><div class = \"text-block\">We can do the same with \"tail\" instead of head to find the names of the shortest genes. <\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#A492FF"},{"id":680995,"guid":"22CE0CA0E3A811E8A2F9277C43095C53","previous_id":680988,"previous_guid":"77F61660E3A711E8A2F9277C43095C53","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"2751D95A778446ECA4EF94B0819040C8","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054723,"guid":"80ECC2218C5941C9BEAFCA9F27D40ED3","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">We can use the same logic as above to find the genes with the highest and lowest %GC content. For this we need to sort by the third column. <\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">seqkit fx2tab -H -a -i -g -l -n GCA_000009065.1_ASM906v1_cds_from_genomic.fna | sort -rn -k 3,3 | head <\/span><\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#A492FF"},{"id":681060,"guid":"92790950E3BD11E8A2F9277C43095C53","previous_id":680995,"previous_guid":"22CE0CA0E3A811E8A2F9277C43095C53","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"758F1AB553204A8481080C8547304CAE","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054723,"guid":"5DD9754510504776B611FACABB9FFC31","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Now let's say we want to retrieve the actual DNA sequence of the gene with the highest %GC content. We can do this by using a \"seqkit fx2tab\" command and piping the results to a \"grep\" command. <\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">seqkit fx2tab -H -a -i -g -l GCA_000009065.1_ASM906v1_cds_from_genomic.fna | grep \"lcl|AL590842.1_cds_CAL20117.1_1427\"<\/span><\/div><div class = \"text-block\">Note that we did not use the \"-n\" flag in the seqkit fx2tab command, since this time we wanted the sequence (before we just wanted the statistics). <\/div><\/div>"}}],"cases":null,"data":null,"section":null,"section_color":"#A492FF"}],"materials":[],"description":"<div class = \"text-blocks\"><div class = \"text-block\">Week 1<\/div><div class = \"text-block\">Introduction to parsing FASTA files.<\/div><div class = \"text-block\">Commands to be entered into the command line are in bold. <\/div><div class = \"text-block\">Here we will be using various base Unix commands such as head, tail, sort, wget, and others. <\/div><div class = \"text-block\">We will also be using the seqkit tool to process FASTA files. The main page for seqkit is here:<\/div><div class = \"text-block\"><a style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">https:\/\/github.com\/shenwei356\/seqkit<\/span><\/a><\/div><\/div>"}