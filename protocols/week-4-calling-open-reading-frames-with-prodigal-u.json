{"uri":"week-4-calling-open-reading-frames-with-prodigal-u-gz3bx8n","version_id":"0","protocol_name":"Week 4: Calling open reading frames with Prodigal, using BLAST, annotating genes with Interproscan","protocol_name_html":"Week 4: Calling open reading frames with Prodigal, using BLAST, annotating genes with Interproscan","is_prepublished":"0","can_edit":"0","parent_id":null,"api_version":"2","is_new_mode":"1","last_modified":"1522131061","type_id":"1","link":"","fork_id":"","public_fork_note":null,"number_of_steps":"39","has_versions":"1","first_published_date":"1493935377","publish_date":"2017-05-04 22:02:57","documents":null,"have_protocol_in_step":"0","is_protocol_in_step":"0","vendor_name":"Contributed by users","vendor_link":"https:\/\/www.protocols.io","vendor_logo":"\/img\/vendors\/1.png","mod_mins":"-45","mod_secs":"1","description":"<p>Now that we've learned how to assemble our sequences, we'll next learn how to identify genes (or open reading frames) on our new assemblies. We'll do that using a software program called Prodigal. After we've identified ORFs, we will compare those ORFs to other sequences using a variety of algorithms within the BLAST suite, as well as other sequence comparison tools.<\/p>\n<p>\u00a0<\/p>\n<p><em>A note: it is <strong><u>extremely important<\/u><\/strong> that you keep careful track of where you are putting your files, or you may lose them. This is especially the case for your projects. I recommend keeping a careful list, either in a notebook or on a document on your computer, that keeps track of where all of your important files are and what directories they are in. <\/em><\/p>","is_bookmarked":"0","can_reassign":"1","before_start":"","has_guidelines":"0","materials":[],"warning":"","version_class":"4891","public":"1","is_owner":"1","is_original_owner":"1","created_on":"1484865235","protocol_affiliation":"","affiliation":null,"doi":"dx.doi.org\/10.17504\/protocols.io.gz3bx8n","doi_status":"2","changed_fork_steps":null,"profile_url":"w2237433u2","protocol_img":"https:\/\/www.protocols.io\/img\/default_protocol.png","profile_image":"\/img\/avatars\/004.png","full_name":"Rika Anderson","created_by":"Rika Anderson","private_link":"01C8B0A5B466F2A2C7753151020442FB","original_img":"1","username":"rika-anderson","is_retracted":"0","retraction_reason":null,"plos_id":null,"manuscript_citation":null,"journal_name":null,"is_donations_disabled":"0","is_donations_disabled_by_user":"9","item_record_id":233553,"fork_info":[],"compare_forks":[],"protocols":[],"groups":[],"number_of_shared_runs":[],"ownership_history":[],"keywords":"","transfer_to_user":[],"sub_transfer":false,"is_transfer_pending":false,"number_of_bookmarks":"1","collections":[{"protocol_name":"Genomics and Bioinformatics Carleton 2017","protocol_name_html":"Genomics and Bioinformatics Carleton 2017","uri":"genomics-and-bioinformatics-carleton-2017-hudb6s6","username":"rika-anderson","profile_image":"\/img\/avatars\/004.png","protocol_img":"https:\/\/www.protocols.io\/img\/default_protocol.png","full_name":"Rika Anderson"}],"tags":[],"archived":0,"sub_authors":[],"sub_protocols_number":0,"can_edit_shared":0,"shared_runs":[],"is_shared_run":0,"is_shared":1,"banner":null,"contact_badges":[{"badge_id":"3","badge_image":"\/img\/badges\/silver.svg","badge_description":"Power author!"},{"badge_id":"5","badge_image":"\/img\/badges\/earlyadopter.svg","badge_description":"Early adopter"}],"number_of_comments":0,"is_locked":0,"is_locked_by":false,"authors":"","authors_list":[],"user":{"profile_image":"\/img\/avatars\/004.png","username":"rika-anderson","full_name":"Rika Anderson","created_by":"Rika Anderson"},"access":{"can_view":"1","can_remove":"0","can_add":"0","can_edit":0,"can_publish":0,"can_get_doi":0,"can_share":"0","can_move":"1","can_transfer":"1","can_download":"1","is_locked":"0"},"is_contact_suspended":0,"guidelines":"","status_id":"1","is_research":"1","status_info":null,"steps":[{"id":"269758","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"B282FDF1D1254D408A03DE5678CB2992","previous_guid":null,"previous_id":"0","last_modified":"1484865307","components":[{"component_id":"378582","previous_id":0,"original_id":"0","guid":"4A839EC4DE774846A1951107FD54BF89","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Boot as a Mac on the lab computer.<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Boot as a Mac on the lab computer.<\/p>"},"is_project":0},{"component_id":"378577","previous_id":"378582","original_id":"0","guid":"42647B0E74E0434EBF6DDA159652798D","previous_guid":"4A839EC4DE774846A1951107FD54BF89","component_type_id":"6","data_id":"0","data":"Logging in to liverpool","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Logging in to liverpool"},"is_project":0}]},{"id":"269779","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"441BCD9E97BC49BDB20B1679B56A942A","previous_guid":"B282FDF1D1254D408A03DE5678CB2992","previous_id":"269758","last_modified":"1484865339","components":[{"component_id":"378617","previous_id":0,"original_id":"0","guid":"4535351CFC4340609B5058D7EB24D9F3","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Find and open the Terminal application (Applications\/Utilities).<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Find and open the Terminal application (Applications\/Utilities).<\/p>"},"is_project":0},{"component_id":"378612","previous_id":"378617","original_id":"0","guid":"93275F06F87E42609DB97B2298466E54","previous_guid":"4535351CFC4340609B5058D7EB24D9F3","component_type_id":"6","data_id":"0","data":"Logging in to liverpool","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Logging in to liverpool"},"is_project":0}]},{"id":"269798","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"CCCE7D66E2754400B4654A78D63E456F","previous_guid":"441BCD9E97BC49BDB20B1679B56A942A","previous_id":"269779","last_modified":"1484865376","components":[{"component_id":"378644","previous_id":0,"original_id":"0","guid":"3D15714F208F4ABBA9CFC72ED9902EDD","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Log on to the server using your Carleton username and password.<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Log on to the server using your Carleton username and password.<\/p>"},"is_project":0},{"component_id":"378643","previous_id":"378644","original_id":"0","guid":"DE496223EB9D4DBE96EC72AABCBF58D7","previous_guid":"3D15714F208F4ABBA9CFC72ED9902EDD","component_type_id":"6","data_id":"0","data":"Logging in to liverpool","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Logging in to liverpool"},"is_project":0},{"component_id":"378672","previous_id":"378643","original_id":"0","guid":"BEDFF698581E483F87000B0C58BF016E","previous_guid":"DE496223EB9D4DBE96EC72AABCBF58D7","component_type_id":"15","data_id":"1528","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"ssh [username]@liverpool.its.carleton.edu","description":"","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"269814","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"9C21BA4E7E6C4EB9BBE69F272DD349D7","previous_guid":"CCCE7D66E2754400B4654A78D63E456F","previous_id":"269798","last_modified":"1485128468","components":[{"component_id":"378681","previous_id":0,"original_id":"0","guid":"CA55F3759302484C8EB5F369F91D7F2A","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>First, we're going to learn how to identify open reading frames (ORFs) on your assembled toy dataset from last week. To do that, we\u2019ll use a program called Prodigal. There are lots of programs that can identify ORFs,\u00a0and there are strong distinctions between ORF callers for eukaryotes versus bacteria\/archaea\/viruses.\u00a0Prodigal is one of the best ORF callers for microbial genomes and it is free, so that\u2019s what we\u2019re using today. If you find yourself wanting to identify ORFs on some sequence in the future, most ORF callers should work in a similar manner to Prodigal.<\/p>\n<p>\u00a0<\/p>\n<p>Go to your toy dataset directory:<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>First, we're going to learn how to identify open reading frames (ORFs) on your assembled toy dataset from last week. To do that, we\u2019ll use a program called Prodigal. There are lots of programs that can identify ORFs,\u00a0and there are strong distinctions between ORF callers for eukaryotes versus bacteria\/archaea\/viruses.\u00a0Prodigal is one of the best ORF callers for microbial genomes and it is free, so that\u2019s what we\u2019re using today. If you find yourself wanting to identify ORFs on some sequence in the future, most ORF callers should work in a similar manner to Prodigal.<\/p>\n<p>\u00a0<\/p>\n<p>Go to your toy dataset directory:<\/p>"},"is_project":0},{"component_id":"378675","previous_id":"378681","original_id":"0","guid":"06D1B7E6CEC54DB2975DA2F7C5C39A3E","previous_guid":"CA55F3759302484C8EB5F369F91D7F2A","component_type_id":"6","data_id":"0","data":"Searching for open reading frames","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Searching for open reading frames"},"is_project":0},{"component_id":"378699","previous_id":"378675","original_id":"0","guid":"9E2DA1F7496045D58B1F246478D8C7A9","previous_guid":"06D1B7E6CEC54DB2975DA2F7C5C39A3E","component_type_id":"15","data_id":"1529","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"cd ~\/toy_dataset_directory","description":"","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"269863","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"967D3AF8E1564C54A27D771CCED5915D","previous_guid":"9C21BA4E7E6C4EB9BBE69F272DD349D7","previous_id":"269814","last_modified":"1484882444","components":[{"component_id":"378755","previous_id":0,"original_id":"0","guid":"AA4BD2F0FA2D40A6B6FA15780A9ABF83","previous_guid":null,"component_type_id":"1","data_id":"0","data":"We're going to try out Prodigal on your assembled dataset. However, rather than running it on your full dataset, we're going to run it on a subset of it because otherwise some downstream processes would take forever. So, copy toy_dataset_assembled_subsample.fa into your toy_assembly directory:","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"We're going to try out Prodigal on your assembled dataset. However, rather than running it on your full dataset, we're going to run it on a subset of it because otherwise some downstream processes would take forever. So, copy toy_dataset_assembled_subsample.fa into your toy_assembly directory:"},"is_project":0},{"component_id":"378756","previous_id":"378755","original_id":"0","guid":"7E4F0B387FFF4050A9DDA8F4E8E82B52","previous_guid":"AA4BD2F0FA2D40A6B6FA15780A9ABF83","component_type_id":"6","data_id":"0","data":"Searching for open reading frames","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Searching for open reading frames"},"is_project":0},{"component_id":"378760","previous_id":"378756","original_id":"0","guid":"44A08EEBCF2E486791E98A2842336125","previous_guid":"7E4F0B387FFF4050A9DDA8F4E8E82B52","component_type_id":"15","data_id":"1530","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"cp \/usr\/local\/data\/toy_dataset_assembly_subsample.fa toy_assembly","description":"","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"269868","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"50BD51C469D443A0A1FDC66B539BE28F","previous_guid":"967D3AF8E1564C54A27D771CCED5915D","previous_id":"269863","last_modified":"1485220496","components":[{"component_id":"378764","previous_id":0,"original_id":"0","guid":"8C8AFBE2EA6F4A799A7162BA898F1900","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Now that you're in the toy dataset directory, make a new directory and change into it.<\/p>\n<p>\u00a0<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Now that you're in the toy dataset directory, make a new directory and change into it.<\/p>\n<p>\u00a0<\/p>"},"is_project":0},{"component_id":"378765","previous_id":"378764","original_id":"0","guid":"E6C25F28D29340A7A4D95D9D247E3BFC","previous_guid":"8C8AFBE2EA6F4A799A7162BA898F1900","component_type_id":"6","data_id":"0","data":"Searching for open reading frames","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Searching for open reading frames"},"is_project":0},{"component_id":"378769","previous_id":"378765","original_id":"0","guid":"9BC71671A7B343309536D34E5560585B","previous_guid":"E6C25F28D29340A7A4D95D9D247E3BFC","component_type_id":"15","data_id":"1531","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"mkdir ORF_finding\ncd ORF_finding","description":"","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"269874","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"C315D41EA18942E2B9CB58406C4CCEC5","previous_guid":"50BD51C469D443A0A1FDC66B539BE28F","previous_id":"269868","last_modified":"1484884700","components":[{"component_id":"378779","previous_id":0,"original_id":"0","guid":"FB776AD880D34785AF54878C9EA477B0","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Now run Prodigal on your toy assembly subsample:<\/p>\n<ol>\n<li>The \u201c-i\u201d flag gives the input file, which is the assembly you just made.<\/li>\n<li>The \u201c-o\u201d flag gives the output file in Genbank format<\/li>\n<li>The \u2018-a\u201d flag gives the output file in fasta format<\/li>\n<li>The \u201c-p\u201d flag states which procedure you\u2019re using: whether this is a single genome or a metagenome. This toy dataset is a single genome so we are using \u2013p single, but for your project dataset, you will use \u2013p meta.<\/li>\n<\/ol>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Now run Prodigal on your toy assembly subsample:<\/p>\n<ol>\n<li>The \u201c-i\u201d flag gives the input file, which is the assembly you just made.<\/li>\n<li>The \u201c-o\u201d flag gives the output file in Genbank format<\/li>\n<li>The \u2018-a\u201d flag gives the output file in fasta format<\/li>\n<li>The \u201c-p\u201d flag states which procedure you\u2019re using: whether this is a single genome or a metagenome. This toy dataset is a single genome so we are using \u2013p single, but for your project dataset, you will use \u2013p meta.<\/li>\n<\/ol>"},"is_project":0},{"component_id":"378778","previous_id":"378779","original_id":"0","guid":"99B123532D644C62B72B796430D86D89","previous_guid":"FB776AD880D34785AF54878C9EA477B0","component_type_id":"6","data_id":"0","data":"Searching for open reading frames","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Searching for open reading frames"},"is_project":0},{"component_id":"378789","previous_id":"378778","original_id":"0","guid":"EEEAF356336F406A97E67ED8C85F4E56","previous_guid":"99B123532D644C62B72B796430D86D89","component_type_id":"15","data_id":"1532","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"prodigal -i ..\/toy_assembly\/toy_dataset_assembly_subsample.fa -o toy_assembly_ORFs.gbk -a toy_assembly_ORFs.faa -p single","description":"","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"269881","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"422A78B21CC24D3D8C0C5863D8E4FAE2","previous_guid":"C315D41EA18942E2B9CB58406C4CCEC5","previous_id":"269874","last_modified":"1484882556","components":[{"component_id":"378793","previous_id":0,"original_id":"0","guid":"09ADEAF9AFD043A4B38B2B077AC2EE89","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>You should see two files, one called \u201ctoy_assembly_ORFs.gbk\u201d and one called \u201ctoy_assembly_ORFs.faa.\u201d Use the program less to look at toy_assembly_ORFs.faa.<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>You should see two files, one called \u201ctoy_assembly_ORFs.gbk\u201d and one called \u201ctoy_assembly_ORFs.faa.\u201d Use the program less to look at toy_assembly_ORFs.faa.<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>"},"is_project":0},{"component_id":"378792","previous_id":"378793","original_id":"0","guid":"6D84C45B54D34595A7EC7BEA8E976AD8","previous_guid":"09ADEAF9AFD043A4B38B2B077AC2EE89","component_type_id":"6","data_id":"0","data":"Searching for open reading frames","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Searching for open reading frames"},"is_project":0},{"component_id":"378799","previous_id":"378792","original_id":"0","guid":"DF0F337C324D4477916BE183914D6E72","previous_guid":"6D84C45B54D34595A7EC7BEA8E976AD8","component_type_id":"15","data_id":"1533","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"less toy_assembly_ORFs.faa","description":"","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"269888","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"55A765A4B2FD4316B7190C6569A74BB3","previous_guid":"422A78B21CC24D3D8C0C5863D8E4FAE2","previous_id":"269881","last_modified":"1485128649","components":[{"component_id":"378810","previous_id":0,"original_id":"0","guid":"42C42E4F9E034A83AC0D9D52E0F17834","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Now we have all of these nice open reading frames, but we don\u2019t know what their function is. So we have to compare them to gene databases. There are lots of them out there. First, we will\u00a0use BLAST and compare against the National Center for Biotechnology Information (NCBI) non-redundant database of all proteins. This is a repository where biologists are required to submit their sequence data when they publish a paper. It is very comprehensive and well-curated.<\/p>\n<p>\u00a0<\/p>\n<p>Take a look at your Prodigal file again using the program less (see above). Copy the sequence of the first ORF in your file. You can include the first line that includes the &gt; symbol.<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Now we have all of these nice open reading frames, but we don\u2019t know what their function is. So we have to compare them to gene databases. There are lots of them out there. First, we will\u00a0use BLAST and compare against the National Center for Biotechnology Information (NCBI) non-redundant database of all proteins. This is a repository where biologists are required to submit their sequence data when they publish a paper. It is very comprehensive and well-curated.<\/p>\n<p>\u00a0<\/p>\n<p>Take a look at your Prodigal file again using the program less (see above). Copy the sequence of the first ORF in your file. You can include the first line that includes the &gt; symbol.<\/p>"},"is_project":0},{"component_id":"378808","previous_id":"378810","original_id":"0","guid":"182BAC574E094B098EAAC0D8D55A872F","previous_guid":"42C42E4F9E034A83AC0D9D52E0F17834","component_type_id":"6","data_id":"0","data":"Finding the function of our open reading frames\/genes\/proteins","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Finding the function of our open reading frames\/genes\/proteins"},"is_project":0}]},{"id":"269897","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"46F6A7CD56644971BFE3FDEF328293AE","previous_guid":"55A765A4B2FD4316B7190C6569A74BB3","previous_id":"269888","last_modified":"1495033616","components":[{"component_id":"378822","previous_id":0,"original_id":"0","guid":"00EBE1AE6FA045F5943D6FC0EE626D9F","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Navigate your browser to the BLAST suite at: https:\/\/blast.ncbi.nlm.nih.gov\/Blast.cgi. Select Protein BLAST (blastp).<\/p>\n<p>\u00a0<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Navigate your browser to the BLAST suite at: https:\/\/blast.ncbi.nlm.nih.gov\/Blast.cgi. Select Protein BLAST (blastp).<\/p>\n<p>\u00a0<\/p>"},"is_project":0},{"component_id":"378823","previous_id":"378822","original_id":"0","guid":"6BC64BED66594B7A9CAE246E2656BF27","previous_guid":"00EBE1AE6FA045F5943D6FC0EE626D9F","component_type_id":"6","data_id":"0","data":"Finding the function of our open reading frames\/genes\/proteins","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Finding the function of our open reading frames\/genes\/proteins"},"is_project":0},{"component_id":"379393","previous_id":"378823","original_id":"0","guid":"52EB416516CC406AB34735BBB574E741","previous_guid":"6BC64BED66594B7A9CAE246E2656BF27","component_type_id":"7","data_id":"11","data":"https:\/\/blast.ncbi.nlm.nih.gov\/Blast.cgi","order_id":"2","name":"External Link","data_by_id":"1","type_id":"7","source_data":{"link":"https:\/\/blast.ncbi.nlm.nih.gov\/Blast.cgi"},"is_project":0}]},{"id":"269898","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"CAB9376D0D6243889C8E9B76E93033F8","previous_guid":"46F6A7CD56644971BFE3FDEF328293AE","previous_id":"269897","last_modified":"1484882624","components":[{"component_id":"378824","previous_id":0,"original_id":"0","guid":"610F7EB8A80245EA8D74F54F46F9F6E9","previous_guid":null,"component_type_id":"1","data_id":"0","data":"Copy your sequence in to the box at the top of the page, and then scroll to the bottom and click \u201cBLAST.\u201d Give it a few minutes to think about it. <p>\u00a0<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"Copy your sequence in to the box at the top of the page, and then scroll to the bottom and click \u201cBLAST.\u201d Give it a few minutes to think about it. <p>\u00a0<\/p>"},"is_project":0},{"component_id":"378825","previous_id":"378824","original_id":"0","guid":"CCCF95DBA2204C5CB3F4FF03D977E171","previous_guid":"610F7EB8A80245EA8D74F54F46F9F6E9","component_type_id":"6","data_id":"0","data":"Finding the function of our open reading frames\/genes\/proteins","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Finding the function of our open reading frames\/genes\/proteins"},"is_project":0}]},{"id":"269899","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"8F5627A2501845F1A9572D7D6E95DECF","previous_guid":"CAB9376D0D6243889C8E9B76E93033F8","previous_id":"269898","last_modified":"1492573831","components":[{"component_id":"378826","previous_id":0,"original_id":"0","guid":"3A2569AA9FD74002992C9AE7DACE1211","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>While that's running, go back to the BLAST suite home page and try blasting your protein using tblastn instead of blastp.<\/p>\n<p>\u00a0<\/p>\n<p><em>What\u2019s the difference? <\/em><\/p>\n<p><strong>blastp<\/strong> is a protein-protein blast. When you run it online like this, you are comparing your protein sequence against the National Centers for Biotechnology Information (NCBI) non-redundant protein database, which is a giant database of protein sequences that is \u201cnon-redundant\u201d\u2014that is, each protein should be represented only once. In contrast, <strong>tblastn<\/strong> is a translated nucleotide blast. You are blasting your protein sequence against a translated nucleotide database. When you run it online like this, you are comparing your protein sequence against the NCBI non-redundant nucleotide database, which is a giant database of nucleotide sequnces, which can include whole genomes.<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>Isn't this a BLAST?!?<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>Yeah, ok, that wasn't funny.<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>While that's running, go back to the BLAST suite home page and try blasting your protein using tblastn instead of blastp.<\/p>\n<p>\u00a0<\/p>\n<p><em>What\u2019s the difference? <\/em><\/p>\n<p><strong>blastp<\/strong> is a protein-protein blast. When you run it online like this, you are comparing your protein sequence against the National Centers for Biotechnology Information (NCBI) non-redundant protein database, which is a giant database of protein sequences that is \u201cnon-redundant\u201d\u2014that is, each protein should be represented only once. In contrast, <strong>tblastn<\/strong> is a translated nucleotide blast. You are blasting your protein sequence against a translated nucleotide database. When you run it online like this, you are comparing your protein sequence against the NCBI non-redundant nucleotide database, which is a giant database of nucleotide sequnces, which can include whole genomes.<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>Isn't this a BLAST?!?<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>\n<p>Yeah, ok, that wasn't funny.<\/p>"},"is_project":0},{"component_id":"378827","previous_id":"378826","original_id":"0","guid":"8AA97E2F10B545AABEE0BF63F7521362","previous_guid":"3A2569AA9FD74002992C9AE7DACE1211","component_type_id":"6","data_id":"0","data":"Finding the function of our open reading frames\/genes\/proteins","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Finding the function of our open reading frames\/genes\/proteins"},"is_project":0}]},{"id":"269901","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"94BEBA92AF784AA794E0C5F2C52635F8","previous_guid":"8F5627A2501845F1A9572D7D6E95DECF","previous_id":"269899","last_modified":"1484893052","components":[{"component_id":"378830","previous_id":0,"original_id":"0","guid":"6C7C6F7F0BE44CACA76D1ED26AFC965D","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p><strong>Answer the following questions in a Word document that you will upload to the Moodle:<\/strong><\/p>\n<p>1. For both your blastp and tblastn results, list:<br \/>\u00a0 \u00a0 \u00a0 \u00a0 -The top hit for each of your database searches<\/p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 -The e-value and percent identity of the top hit<br \/>\u00a0 \u00a0 \u00a0 \u00a0 -What kind of protein it matched<br \/>\u00a0 \u00a0 \u00a0 \u00a0 -What kind of organism it comes from<br \/>2. Take a look at the list of hits below the top hit.<\/p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 -Do they have the same function?<br \/>\u00a0 \u00a0 \u00a0 \u00a0 -Do think you can confidently state what type of protein this gene encodes? Explain.<br \/>\u00a0 \u00a0 \u00a0 \u00a0 -Describe the difference in your tblastn and blastp results, and explain in what scenarios you might choose to use one over the other.<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Answer the following questions in a Word document that you will upload to the Moodle:<\/strong><\/p>\n<p>1. For both your blastp and tblastn results, list:<br \/>\u00a0 \u00a0 \u00a0 \u00a0 -The top hit for each of your database searches<\/p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 -The e-value and percent identity of the top hit<br \/>\u00a0 \u00a0 \u00a0 \u00a0 -What kind of protein it matched<br \/>\u00a0 \u00a0 \u00a0 \u00a0 -What kind of organism it comes from<br \/>2. Take a look at the list of hits below the top hit.<\/p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 -Do they have the same function?<br \/>\u00a0 \u00a0 \u00a0 \u00a0 -Do think you can confidently state what type of protein this gene encodes? Explain.<br \/>\u00a0 \u00a0 \u00a0 \u00a0 -Describe the difference in your tblastn and blastp results, and explain in what scenarios you might choose to use one over the other.<\/p>"},"is_project":0},{"component_id":"378829","previous_id":"378830","original_id":"0","guid":"8B8C7464371F4B47AFD5C9C24D44A460","previous_guid":"6C7C6F7F0BE44CACA76D1ED26AFC965D","component_type_id":"6","data_id":"0","data":"Finding the function of our open reading frames\/genes\/proteins","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Finding the function of our open reading frames\/genes\/proteins"},"is_project":0}]},{"id":"269914","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"259DC1AC7DFB4A1CB21FA9B10FCBF5D5","previous_guid":"94BEBA92AF784AA794E0C5F2C52635F8","previous_id":"269901","last_modified":"1485127456","components":[{"component_id":"378856","previous_id":0,"original_id":"0","guid":"0168C88DCC1C4817ADE6703D1E92DCF2","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>This works well for a few proteins, but it would be exhausting to do it for every single one of the thousands of proteins you will likely have in your dataset. We are going to use software called Interproscan to more efficiently and effectively annotate your proteins. It compares your open reading frames against several protein databases and looks for protein \"signatures,\" or regions that are highly conserved among proteins, and uses that to annotate your open reading frames. It will do this for every single open reading frame in your dataset, if it can find a match.<\/p>\n<p>\u00a0<\/p>\n<p>Interproscan takes a long time to run. With a big dataset, it could run for hours. So let's open a screen session. (Note: for your toy dataset, this will take minutes, not hours, so screen isn't entirely necessary. But it's good to practice-- and for your project datasets, you will definitely want to be in screen.)<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>This works well for a few proteins, but it would be exhausting to do it for every single one of the thousands of proteins you will likely have in your dataset. We are going to use software called Interproscan to more efficiently and effectively annotate your proteins. It compares your open reading frames against several protein databases and looks for protein \"signatures,\" or regions that are highly conserved among proteins, and uses that to annotate your open reading frames. It will do this for every single open reading frame in your dataset, if it can find a match.<\/p>\n<p>\u00a0<\/p>\n<p>Interproscan takes a long time to run. With a big dataset, it could run for hours. So let's open a screen session. (Note: for your toy dataset, this will take minutes, not hours, so screen isn't entirely necessary. But it's good to practice-- and for your project datasets, you will definitely want to be in screen.)<\/p>"},"is_project":0},{"component_id":"378855","previous_id":"378856","original_id":"0","guid":"8EF2BFD77C4C448E9AE8BBC11306EA23","previous_guid":"0168C88DCC1C4817ADE6703D1E92DCF2","component_type_id":"6","data_id":"0","data":"Finding the function of our open reading frames\/genes\/proteins","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Finding the function of our open reading frames\/genes\/proteins"},"is_project":0},{"component_id":"378865","previous_id":"378855","original_id":"0","guid":"A43F1CD0677A48528000206198EBEABF","previous_guid":"8EF2BFD77C4C448E9AE8BBC11306EA23","component_type_id":"15","data_id":"1534","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"screen","description":"","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"269920","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"F619E16E38B840479B9C311A3F1094A0","previous_guid":"259DC1AC7DFB4A1CB21FA9B10FCBF5D5","previous_id":"269914","last_modified":"1484882814","components":[{"component_id":"378870","previous_id":0,"original_id":"0","guid":"6F101D467B524E4B868434B09E874C1D","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Interproscan doesn\u2019t like all of the asterisks that Prodigal adds to the ends of its proteins. So get rid of them by typing this:<\/p>\n<p>\u00a0<\/p>\n<p><em>Explanation: \u201csed\u201d is another Unix command. It is short for \u201cstream editor\u201d and it is handy for editing files on occasion, like when you\u2019re trying to do a \u201cfind\/replace\u201d operation like you might do in Word. Here, we\u2019re using sed to replace all of the asterisks with nothing.<\/em><\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Interproscan doesn\u2019t like all of the asterisks that Prodigal adds to the ends of its proteins. So get rid of them by typing this:<\/p>\n<p>\u00a0<\/p>\n<p><em>Explanation: \u201csed\u201d is another Unix command. It is short for \u201cstream editor\u201d and it is handy for editing files on occasion, like when you\u2019re trying to do a \u201cfind\/replace\u201d operation like you might do in Word. Here, we\u2019re using sed to replace all of the asterisks with nothing.<\/em><\/p>"},"is_project":0},{"component_id":"378868","previous_id":"378870","original_id":"0","guid":"E1E7C89AAA504473AEE09430CADA9768","previous_guid":"6F101D467B524E4B868434B09E874C1D","component_type_id":"6","data_id":"0","data":"Finding the function of our open reading frames\/genes\/proteins","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Finding the function of our open reading frames\/genes\/proteins"},"is_project":0},{"component_id":"378874","previous_id":"378868","original_id":"0","guid":"C6075312E48D4407B6C1F4F1E053744A","previous_guid":"E1E7C89AAA504473AEE09430CADA9768","component_type_id":"15","data_id":"1535","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"sed 's\/\\*\/\/g' toy_assembly_ORFs.faa > toy_assembly_ORFs.noasterisks.faa","description":"","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"269928","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"91D3B2FF38DD428AABEDC5B5663EC30E","previous_guid":"F619E16E38B840479B9C311A3F1094A0","previous_id":"269920","last_modified":"1484882834","components":[{"component_id":"378887","previous_id":0,"original_id":"0","guid":"D032B6169197411EBD7F2C02E558D057","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Now run interproscan.<\/p>\n<ol>\n<li>The \u201c-i\u201d flag gives the input file, which is your file with ORF sequences identified by Prodigal, with the asterisks removed.<\/li>\n<li>The \u201c-f\u201d flag tells Interproscan that the format you want is a tab-separated vars, or \u201ctsv,\u201d file.<\/li>\n<\/ol>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Now run interproscan.<\/p>\n<ol>\n<li>The \u201c-i\u201d flag gives the input file, which is your file with ORF sequences identified by Prodigal, with the asterisks removed.<\/li>\n<li>The \u201c-f\u201d flag tells Interproscan that the format you want is a tab-separated vars, or \u201ctsv,\u201d file.<\/li>\n<\/ol>"},"is_project":0},{"component_id":"378886","previous_id":"378887","original_id":"0","guid":"052C9DB60FDF4D54B46670D51AD6F5D0","previous_guid":"D032B6169197411EBD7F2C02E558D057","component_type_id":"6","data_id":"0","data":"Finding the function of our open reading frames\/genes\/proteins","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Finding the function of our open reading frames\/genes\/proteins"},"is_project":0},{"component_id":"378893","previous_id":"378886","original_id":"0","guid":"94467ED4327E4910A84BAC543E12770C","previous_guid":"052C9DB60FDF4D54B46670D51AD6F5D0","component_type_id":"15","data_id":"1536","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"interproscan.sh -i toy_assembly_ORFs.noasterisks.faa -f tsv","description":"","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"269933","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"F61B0370552C489F9B27ECCAB9FB37A3","previous_guid":"08D5DF475709423E9E0F22B3D12E1DC6","previous_id":"270195","last_modified":"1484892287","components":[{"component_id":"378897","previous_id":0,"original_id":"0","guid":"E9EE91D969974370B9E0998403BC9291","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Now let's take a look at the results. The output should be called \u201ctoy_assembly_ORFs.noasterisks.faa.tsv\u201d. The output is a text file that's most easily visualized in a spreadsheet application like Excel. The easiest way to do that is to copy this file from the server to your own desktop and look at it with Excel. We're going to learn how to use <strong>FileZilla<\/strong> to do that.<\/p>\n<p>\u00a0<\/p>\n<p>Locate FileZilla in the Applications folder on your computer and open it. Enter the following:<\/p>\n<ol>\n<li>For the Host: sftp:\/\/liverpool.its.carleton.edu<\/li>\n<li>For the Username: your Carleton username<\/li>\n<li>For the password: your Carleton password<\/li>\n<li>For the Port: 22<\/li>\n<li>Then click QuickConnect.<\/li>\n<\/ol>\n<p>\u00a0<\/p>\n<p>The left side shows files in the local computer you're using. The right side shows files on liverpool. On the left side, navigate to whatever location you want your files to go to on the local computer. On the right side, navigate to the directory where you put your Interproscan results. (\/Accounts\/yourusername\/toy_dataset_directory\/ORF_finding\/toy_assembly_ORFs.noasterisks.faa.tsv) All you have to do is double-click on the file you want to transfer, and over it goes!<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Now let's take a look at the results. The output should be called \u201ctoy_assembly_ORFs.noasterisks.faa.tsv\u201d. The output is a text file that's most easily visualized in a spreadsheet application like Excel. The easiest way to do that is to copy this file from the server to your own desktop and look at it with Excel. We're going to learn how to use <strong>FileZilla<\/strong> to do that.<\/p>\n<p>\u00a0<\/p>\n<p>Locate FileZilla in the Applications folder on your computer and open it. Enter the following:<\/p>\n<ol>\n<li>For the Host: sftp:\/\/liverpool.its.carleton.edu<\/li>\n<li>For the Username: your Carleton username<\/li>\n<li>For the password: your Carleton password<\/li>\n<li>For the Port: 22<\/li>\n<li>Then click QuickConnect.<\/li>\n<\/ol>\n<p>\u00a0<\/p>\n<p>The left side shows files in the local computer you're using. The right side shows files on liverpool. On the left side, navigate to whatever location you want your files to go to on the local computer. On the right side, navigate to the directory where you put your Interproscan results. (\/Accounts\/yourusername\/toy_dataset_directory\/ORF_finding\/toy_assembly_ORFs.noasterisks.faa.tsv) All you have to do is double-click on the file you want to transfer, and over it goes!<\/p>"},"is_project":0},{"component_id":"378896","previous_id":"378897","original_id":"0","guid":"807D9EF3A0A14F48958F1AAF54CA8337","previous_guid":"E9EE91D969974370B9E0998403BC9291","component_type_id":"6","data_id":"0","data":"Finding the function of our open reading frames\/genes\/proteins","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Finding the function of our open reading frames\/genes\/proteins"},"is_project":0}]},{"id":"269948","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"54A261ED16CA4049B034813F9DF5F6CF","previous_guid":"F61B0370552C489F9B27ECCAB9FB37A3","previous_id":"269933","last_modified":"1484884956","components":[{"component_id":"378927","previous_id":0,"original_id":"0","guid":"04EB6B290C9748ACBD7C554F760BA986","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Find your file on your local computer, and open your .tsv file in Excel. The column headers are in columns as follows, left to right:<\/p>\n<ol>\n<ol>\n<li>Protein Accession (e.g. P51587)<\/li>\n<li>Sequence MD5 digest (e.g. 14086411a2cdf1c4cba63020e1622579)<\/li>\n<li>Sequence Length (e.g. 3418)<\/li>\n<li>Analysis (e.g. database name-- Pfam \/ PRINTS \/ Gene3D)<\/li>\n<li>Signature Accession Number (e.g. PF09103 \/ G3DSA:2.40.50.140)<\/li>\n<li>Signature Description (e.g. BRCA2 repeat profile)<\/li>\n<li>Start location<\/li>\n<li>Stop location<\/li>\n<li>Score - is the e-value of the match reported by member database method (e.g. 3.1E-52)<\/li>\n<li>Status - is the status of the match (T: true)<\/li>\n<li>Date - is the date of the run<\/li>\n<\/ol>\n<\/ol>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Find your file on your local computer, and open your .tsv file in Excel. The column headers are in columns as follows, left to right:<\/p>\n<ol>\n<ol>\n<li>Protein Accession (e.g. P51587)<\/li>\n<li>Sequence MD5 digest (e.g. 14086411a2cdf1c4cba63020e1622579)<\/li>\n<li>Sequence Length (e.g. 3418)<\/li>\n<li>Analysis (e.g. database name-- Pfam \/ PRINTS \/ Gene3D)<\/li>\n<li>Signature Accession Number (e.g. PF09103 \/ G3DSA:2.40.50.140)<\/li>\n<li>Signature Description (e.g. BRCA2 repeat profile)<\/li>\n<li>Start location<\/li>\n<li>Stop location<\/li>\n<li>Score - is the e-value of the match reported by member database method (e.g. 3.1E-52)<\/li>\n<li>Status - is the status of the match (T: true)<\/li>\n<li>Date - is the date of the run<\/li>\n<\/ol>\n<\/ol>"},"is_project":0},{"component_id":"378925","previous_id":"378927","original_id":"0","guid":"F32B32A96F054FB5980B03B8142BD0D0","previous_guid":"04EB6B290C9748ACBD7C554F760BA986","component_type_id":"6","data_id":"0","data":"Finding the function of our open reading frames\/genes\/proteins","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Finding the function of our open reading frames\/genes\/proteins"},"is_project":0}]},{"id":"269955","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"3EC23DE106B84EF49BDE7A01013CDE04","previous_guid":"54A261ED16CA4049B034813F9DF5F6CF","previous_id":"269948","last_modified":"1485131915","components":[{"component_id":"378938","previous_id":0,"original_id":"0","guid":"209FA2E85E884F04AD0BFF5683EB2234","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Answer the following question on the Word document you will submit to the Moodle:<\/p>\n<p>\u00a0<\/p>\n<p>4. Take a look at the annotation of the contig you BLASTed earlier. If there is more than one hit, that's because Interproscan is returning hits from multiple protein databases. What is the description of the hit with the best score, according to Interproscan? (Remember, Google can be a handy resource sometimes.) Does that match your BLAST results?<\/p>\n<p>\u00a0<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Answer the following question on the Word document you will submit to the Moodle:<\/p>\n<p>\u00a0<\/p>\n<p>4. Take a look at the annotation of the contig you BLASTed earlier. If there is more than one hit, that's because Interproscan is returning hits from multiple protein databases. What is the description of the hit with the best score, according to Interproscan? (Remember, Google can be a handy resource sometimes.) Does that match your BLAST results?<\/p>\n<p>\u00a0<\/p>"},"is_project":0},{"component_id":"378937","previous_id":"378938","original_id":"0","guid":"94B14F47CED045C6AD8B17FD01740CD9","previous_guid":"209FA2E85E884F04AD0BFF5683EB2234","component_type_id":"6","data_id":"0","data":"Finding the function of our open reading frames\/genes\/proteins","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Finding the function of our open reading frames\/genes\/proteins"},"is_project":0}]},{"id":"269968","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"F357BA0104034F739CFDECC78B0A5BFA","previous_guid":"3EC23DE106B84EF49BDE7A01013CDE04","previous_id":"269955","last_modified":"1485127667","components":[{"component_id":"378964","previous_id":0,"original_id":"0","guid":"A37377DA07054C1D8DE4823DCEBBFC13","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>We just learned how to compare <strong>all<\/strong> of the proteins within your dataset against publicly available databases. This will be handy later on, because it gives you a nice list of all of the proteins in your assembly. But you may also wish to choose a specific protein of interest and see if you can find a match within your dataset. Why? There are a few reasons why you might do this. For example, you may have a gene you\u2019re interested in that\u2019s not available in public databases, or is relatively unknown. It won\u2019t show up in the Interproscan results. Or maybe you want to know of any of the ORFs or contigs in your dataset have a match to a particular sequence, even if it isn't the top hit that Interproscan found.<\/p>\n<p>\u00a0<\/p>\n<p>We will learn how to use BLAST to search for a gene, using your own dataset as the databse to search against.<\/p>\n<p>\u00a0<\/p>\n<p>First, make sure you are in the correct directory.<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>We just learned how to compare <strong>all<\/strong> of the proteins within your dataset against publicly available databases. This will be handy later on, because it gives you a nice list of all of the proteins in your assembly. But you may also wish to choose a specific protein of interest and see if you can find a match within your dataset. Why? There are a few reasons why you might do this. For example, you may have a gene you\u2019re interested in that\u2019s not available in public databases, or is relatively unknown. It won\u2019t show up in the Interproscan results. Or maybe you want to know of any of the ORFs or contigs in your dataset have a match to a particular sequence, even if it isn't the top hit that Interproscan found.<\/p>\n<p>\u00a0<\/p>\n<p>We will learn how to use BLAST to search for a gene, using your own dataset as the databse to search against.<\/p>\n<p>\u00a0<\/p>\n<p>First, make sure you are in the correct directory.<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>"},"is_project":0},{"component_id":"378963","previous_id":"378964","original_id":"0","guid":"0BBEABF4A4D1427EA3CD79A546BF6E66","previous_guid":"A37377DA07054C1D8DE4823DCEBBFC13","component_type_id":"6","data_id":"0","data":"Searching for matches within your own database","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Searching for matches within your own database"},"is_project":0},{"component_id":"379212","previous_id":"378963","original_id":"0","guid":"3E879FFB63BB43F786F47A2DB19A74F0","previous_guid":"0BBEABF4A4D1427EA3CD79A546BF6E66","component_type_id":"15","data_id":"1544","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"pwd\n\/Accounts\/[your username]\/toy_dataset_directory\/ORF_finding","description":"","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"269975","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"1ACD40F25FCE456C9CF6552308D719CF","previous_guid":"F357BA0104034F739CFDECC78B0A5BFA","previous_id":"269968","last_modified":"1485103177","components":[{"component_id":"378978","previous_id":0,"original_id":"0","guid":"E336F5A530984BF2A66EA16608F42510","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Turn your ORF dataset into a BLAST database. Here is what the flags mean:<\/p>\n<ol>\n<li>makeblastdb invokes the command to make a BLAST database from your data<\/li>\n<li>-in defines the file that you wish to turn into a BLAST database<\/li>\n<li>-dbtype: choices are \"prot\" for protein and \"nucl\" for nucleotide.<\/li>\n<\/ol>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Turn your ORF dataset into a BLAST database. Here is what the flags mean:<\/p>\n<ol>\n<li>makeblastdb invokes the command to make a BLAST database from your data<\/li>\n<li>-in defines the file that you wish to turn into a BLAST database<\/li>\n<li>-dbtype: choices are \"prot\" for protein and \"nucl\" for nucleotide.<\/li>\n<\/ol>"},"is_project":0},{"component_id":"378976","previous_id":"378978","original_id":"0","guid":"AC830C6CECA246908A0EAC93EA5D5EC4","previous_guid":"E336F5A530984BF2A66EA16608F42510","component_type_id":"6","data_id":"0","data":"Searching for matches within your own database","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Searching for matches within your own database"},"is_project":0},{"component_id":"378982","previous_id":"378976","original_id":"0","guid":"705BDEB7BE7243B38C63683A61D821D8","previous_guid":"AC830C6CECA246908A0EAC93EA5D5EC4","component_type_id":"15","data_id":"1537","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"makeblastdb -in toy_assembly_ORFs.faa -dbtype prot","description":"","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"269981","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"8779F24DF1D04EBDBC72061144D09AA0","previous_guid":"1ACD40F25FCE456C9CF6552308D719CF","previous_id":"269975","last_modified":"1495033616","components":[{"component_id":"378986","previous_id":0,"original_id":"0","guid":"D99A19F51E4245A399F6C86C26B645DA","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Now your proteins are ready to be BLASTed. Now we need a protein of interest to search for. Let's say you are interested in whether there are any close matches to CRISPR proteins in this dataset. The Pfam database is a handy place to find 'seed' sequences that represent your protein of interest. Navigate your browser to:<\/p>\n<p>\u00a0<\/p>\n<p>http:\/\/pfam.xfam.org\/family\/PF03787.<\/p>\n<p>\u00a0<\/p>\n<p>This takes you to a page with information about the RAMP family of proteins, the \"Repair Associated Mysterious Proteins.\" While indeed mysterious, they\u00a0turn out to be CRISPR-related proteins.<\/p>\n<p>\u00a0<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Now your proteins are ready to be BLASTed. Now we need a protein of interest to search for. Let's say you are interested in whether there are any close matches to CRISPR proteins in this dataset. The Pfam database is a handy place to find 'seed' sequences that represent your protein of interest. Navigate your browser to:<\/p>\n<p>\u00a0<\/p>\n<p>http:\/\/pfam.xfam.org\/family\/PF03787.<\/p>\n<p>\u00a0<\/p>\n<p>This takes you to a page with information about the RAMP family of proteins, the \"Repair Associated Mysterious Proteins.\" While indeed mysterious, they\u00a0turn out to be CRISPR-related proteins.<\/p>\n<p>\u00a0<\/p>"},"is_project":0},{"component_id":"378987","previous_id":"378986","original_id":"0","guid":"4FCC3123B3B04C56BACABABACC10D259","previous_guid":"D99A19F51E4245A399F6C86C26B645DA","component_type_id":"6","data_id":"0","data":"Searching for matches within your own database","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Searching for matches within your own database"},"is_project":0},{"component_id":"379555","previous_id":"378987","original_id":"0","guid":"416493F44B214A7ABDD1376569653851","previous_guid":"4FCC3123B3B04C56BACABABACC10D259","component_type_id":"7","data_id":"17","data":"http:\/\/pfam.xfam.org\/family\/PF03787","order_id":"2","name":"External Link","data_by_id":"1","type_id":"7","source_data":{"link":"http:\/\/pfam.xfam.org\/family\/PF03787"},"is_project":0}]},{"id":"269982","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"16D8B9971B004D529401E2749F6D7E73","previous_guid":"8779F24DF1D04EBDBC72061144D09AA0","previous_id":"269981","last_modified":"1484883074","components":[{"component_id":"378988","previous_id":0,"original_id":"0","guid":"ED8BEF432486426CADC188DC77C886E9","previous_guid":null,"component_type_id":"1","data_id":"0","data":"Click on \"1319 sequences\" near the top. <p>\u00a0<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"Click on \"1319 sequences\" near the top. <p>\u00a0<\/p>"},"is_project":0},{"component_id":"378989","previous_id":"378988","original_id":"0","guid":"7370BC00EFF34DF8815D05A0FFE475EC","previous_guid":"ED8BEF432486426CADC188DC77C886E9","component_type_id":"6","data_id":"0","data":"Searching for matches within your own database","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Searching for matches within your own database"},"is_project":0}]},{"id":"269983","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"4FEF2C020D1F4503AE0E037FC2B62BFE","previous_guid":"16D8B9971B004D529401E2749F6D7E73","previous_id":"269982","last_modified":"1484883074","components":[{"component_id":"378990","previous_id":0,"original_id":"0","guid":"8B875ADBD2204B93BF5AE7EFC0249B31","previous_guid":null,"component_type_id":"1","data_id":"0","data":"Under \"format an alignment,\" select your format as \"FASTA\" from the drop-down menu, and select gaps as \"No gaps (unaligned)\" from the drop-down menu. Click \"Generate.\" <p>\u00a0<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"Under \"format an alignment,\" select your format as \"FASTA\" from the drop-down menu, and select gaps as \"No gaps (unaligned)\" from the drop-down menu. Click \"Generate.\" <p>\u00a0<\/p>"},"is_project":0},{"component_id":"378991","previous_id":"378990","original_id":"0","guid":"20438A8638E340FAA1A3C55CE2E52780","previous_guid":"8B875ADBD2204B93BF5AE7EFC0249B31","component_type_id":"6","data_id":"0","data":"Searching for matches within your own database","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Searching for matches within your own database"},"is_project":0}]},{"id":"269984","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"65BA4D78604A4206A66D2D2FD6F9FECB","previous_guid":"4FEF2C020D1F4503AE0E037FC2B62BFE","previous_id":"269983","last_modified":"1484883074","components":[{"component_id":"378992","previous_id":0,"original_id":"0","guid":"7D8766C66DC34714A17B3325CE283F23","previous_guid":null,"component_type_id":"1","data_id":"0","data":"Use FileZilla to transfer this file to your ORF_finding directory on liverpool. <p>\u00a0<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"Use FileZilla to transfer this file to your ORF_finding directory on liverpool. <p>\u00a0<\/p>"},"is_project":0},{"component_id":"378993","previous_id":"378992","original_id":"0","guid":"BBEC1339721D481580EA82FC3D39BB68","previous_guid":"7D8766C66DC34714A17B3325CE283F23","component_type_id":"6","data_id":"0","data":"Searching for matches within your own database","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Searching for matches within your own database"},"is_project":0}]},{"id":"269985","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"33D05030377943B980BE5C921FF05BD3","previous_guid":"65BA4D78604A4206A66D2D2FD6F9FECB","previous_id":"269984","last_modified":"1495033616","components":[{"component_id":"378994","previous_id":0,"original_id":"0","guid":"A47EE956AFD74B86837D0A4015819DC8","previous_guid":null,"component_type_id":"1","data_id":"0","data":"Take a look at the Pfam file using less or using a text editing tool on the local computer. It is a FASTA file with a bunch of \u201cseed\u201d sequences that represent a specific protein family from different organisms. If you want to learn more about a specific sequence, you can take the first part of the fasta title (i.e. \u201cQ2RY06_RHORT\u201d) and go to this website: <a href=\"http:\/\/www.uniprot.org\/uploadlists\/\">http:\/\/www.uniprot.org\/uploadlists\/<\/a> and paste it in the box. Then select from \u201cUniProt KB AC\/ID\u201d to \u201cUniProtKB\u201d in the drop-down menu on the bottom. You will get a table with information about your protein and which organism it comes from (in this case, a type of bacterium called <em>Rhodospirillum<\/em>).","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"Take a look at the Pfam file using less or using a text editing tool on the local computer. It is a FASTA file with a bunch of \u201cseed\u201d sequences that represent a specific protein family from different organisms. If you want to learn more about a specific sequence, you can take the first part of the fasta title (i.e. \u201cQ2RY06_RHORT\u201d) and go to this website: <a href=\"http:\/\/www.uniprot.org\/uploadlists\/\">http:\/\/www.uniprot.org\/uploadlists\/<\/a> and paste it in the box. Then select from \u201cUniProt KB AC\/ID\u201d to \u201cUniProtKB\u201d in the drop-down menu on the bottom. You will get a table with information about your protein and which organism it comes from (in this case, a type of bacterium called <em>Rhodospirillum<\/em>)."},"is_project":0},{"component_id":"378995","previous_id":"378994","original_id":"0","guid":"0FEB1A0BACC24E528EDAFC4B05D8F34C","previous_guid":"A47EE956AFD74B86837D0A4015819DC8","component_type_id":"6","data_id":"0","data":"Searching for matches within your own database","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Searching for matches within your own database"},"is_project":0},{"component_id":"379424","previous_id":"378995","original_id":"0","guid":"B891096485DC4D408F921AEDBA29BA69","previous_guid":"0FEB1A0BACC24E528EDAFC4B05D8F34C","component_type_id":"7","data_id":"10","data":"http:\/\/www.uniprot.org\/uploadlists\/","order_id":"2","name":"External Link","data_by_id":"1","type_id":"7","source_data":{"link":"http:\/\/www.uniprot.org\/uploadlists\/"},"is_project":0}]},{"id":"269989","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"15754D00D424430FBA1FF8993E819CAA","previous_guid":"33D05030377943B980BE5C921FF05BD3","previous_id":"269985","last_modified":"1485314160","components":[{"component_id":"379002","previous_id":0,"original_id":"0","guid":"DA53ACCB93EB4078B6AFAD171538F58C","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Now, BLAST it! There are many parameters you can set. The following command illustrates some common parameters.<\/p>\n<ol>\n<li>blastp invokes the program within the blast suite that you want. (other choices are blastn, blastx, tblastn, tblastx.)<\/li>\n<li>-query defines your blast query-- in this case, the Pfam seed sequences for the CRISPR RAMP proteins.<\/li>\n<li>-db defines your database-- in this case, the toy assembly ORFs.<\/li>\n<li>-evalue defines your maximum\u00a0e-value, in this case 1x10<sup>-5<\/sup><\/li>\n<li>-outfmt defines the output format of your blast results. option 6 is common; you can check out https:\/\/www.ncbi.nlm.nih.gov\/books\/NBK279675\/ for other options.<\/li>\n<li>-out defines the name of your output file. I like to title mine with the general format 'query_vs_db.blastp' or something similar.<\/li>\n<\/ol>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Now, BLAST it! There are many parameters you can set. The following command illustrates some common parameters.<\/p>\n<ol>\n<li>blastp invokes the program within the blast suite that you want. (other choices are blastn, blastx, tblastn, tblastx.)<\/li>\n<li>-query defines your blast query-- in this case, the Pfam seed sequences for the CRISPR RAMP proteins.<\/li>\n<li>-db defines your database-- in this case, the toy assembly ORFs.<\/li>\n<li>-evalue defines your maximum\u00a0e-value, in this case 1x10<sup>-5<\/sup><\/li>\n<li>-outfmt defines the output format of your blast results. option 6 is common; you can check out https:\/\/www.ncbi.nlm.nih.gov\/books\/NBK279675\/ for other options.<\/li>\n<li>-out defines the name of your output file. I like to title mine with the general format 'query_vs_db.blastp' or something similar.<\/li>\n<\/ol>"},"is_project":0},{"component_id":"379001","previous_id":"379002","original_id":"0","guid":"A6EBF347D78B4C33B8E53586E1B9A7DE","previous_guid":"DA53ACCB93EB4078B6AFAD171538F58C","component_type_id":"6","data_id":"0","data":"Searching for matches within your own database","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Searching for matches within your own database"},"is_project":0},{"component_id":"379007","previous_id":"379001","original_id":"0","guid":"12EDD7B15B5945E5896897C24A8EEDD3","previous_guid":"A6EBF347D78B4C33B8E53586E1B9A7DE","component_type_id":"15","data_id":"1538","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"blastp -query PF03787_seed.txt -db toy_assembly_ORFs.faa -evalue 1e-05 -outfmt 6 -out PF03787_vs_prodigal_ORFs_toy.blastp","description":"","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"269993","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"A1C79A71D8144EAF87A57F9A38BB6371","previous_guid":"15754D00D424430FBA1FF8993E819CAA","previous_id":"269989","last_modified":"1484883146","components":[{"component_id":"379011","previous_id":0,"original_id":"0","guid":"3B2611E83BCF4C7AA9A1C0924741C824","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Now let's check out your blast results. Take a look at your output file using less. (For easier visualization, you can also either copy your results (if it\u2019s a small file) and paste in Excel, or transfer the file using FileZilla and open it in Excel.)<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Now let's check out your blast results. Take a look at your output file using less. (For easier visualization, you can also either copy your results (if it\u2019s a small file) and paste in Excel, or transfer the file using FileZilla and open it in Excel.)<\/p>"},"is_project":0},{"component_id":"379010","previous_id":"379011","original_id":"0","guid":"31B92B1FBEED4806A72CD769142DAD04","previous_guid":"3B2611E83BCF4C7AA9A1C0924741C824","component_type_id":"6","data_id":"0","data":"Searching for matches within your own database","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Searching for matches within your own database"},"is_project":0}]},{"id":"269996","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"5D1E156E414A4AFF92C06B661A4EDEDB","previous_guid":"A1C79A71D8144EAF87A57F9A38BB6371","previous_id":"269993","last_modified":"1484883157","components":[{"component_id":"379016","previous_id":0,"original_id":"0","guid":"A495003733494B7D9783FCCA3BFFD901","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Each blast hit is listed in a separate line. The columns are tabulated as follows, from left to right:<\/p>\n<ol>\n<li>query sequence name<\/li>\n<li>database sequence name<\/li>\n<li>percent identity<\/li>\n<li>alignment length<\/li>\n<li>number of mismatches<\/li>\n<li>number of gaps<\/li>\n<li>query start coordinates<\/li>\n<li>query end coordinates<\/li>\n<li>subject start coordinates<\/li>\n<li>subject end coordinates<\/li>\n<li>e-value<\/li>\n<li>bitscore<\/li>\n<\/ol>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Each blast hit is listed in a separate line. The columns are tabulated as follows, from left to right:<\/p>\n<ol>\n<li>query sequence name<\/li>\n<li>database sequence name<\/li>\n<li>percent identity<\/li>\n<li>alignment length<\/li>\n<li>number of mismatches<\/li>\n<li>number of gaps<\/li>\n<li>query start coordinates<\/li>\n<li>query end coordinates<\/li>\n<li>subject start coordinates<\/li>\n<li>subject end coordinates<\/li>\n<li>e-value<\/li>\n<li>bitscore<\/li>\n<\/ol>"},"is_project":0},{"component_id":"379015","previous_id":"379016","original_id":"0","guid":"473D0591D7874B64A07B908FFF0CB7E7","previous_guid":"A495003733494B7D9783FCCA3BFFD901","component_type_id":"6","data_id":"0","data":"Searching for matches within your own database","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Searching for matches within your own database"},"is_project":0}]},{"id":"269999","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"F92F3B6F46E94CBDB6CD21699DE7601A","previous_guid":"5D1E156E414A4AFF92C06B661A4EDEDB","previous_id":"269996","last_modified":"1485128121","components":[{"component_id":"379021","previous_id":0,"original_id":"0","guid":"E9304DD71AFD467FB36BC52C06A1B18F","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p><strong>\u00a0Take a look at your BLAST results and answer the following questions for the Word document you will submit on the Moodle.<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>5a. Which protein among your Pfam query sequences had the best hit?<\/p>\n<p>5b. What was the percent identity?<\/p>\n<p>5c. What organism does the matching Pfam protien query sequence\u00a0come from?\u00a0<\/p>\n<p>5d. Which of your ORFs did it match?<\/p>\n<p>5e. Does this ORF have hits to other sequences within your query file? What do you think this means?<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>\u00a0Take a look at your BLAST results and answer the following questions for the Word document you will submit on the Moodle.<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>5a. Which protein among your Pfam query sequences had the best hit?<\/p>\n<p>5b. What was the percent identity?<\/p>\n<p>5c. What organism does the matching Pfam protien query sequence\u00a0come from?\u00a0<\/p>\n<p>5d. Which of your ORFs did it match?<\/p>\n<p>5e. Does this ORF have hits to other sequences within your query file? What do you think this means?<\/p>"},"is_project":0},{"component_id":"379020","previous_id":"379021","original_id":"0","guid":"0B9FAC024E414708929B8780382D8B37","previous_guid":"E9304DD71AFD467FB36BC52C06A1B18F","component_type_id":"6","data_id":"0","data":"Searching for matches within your own database","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Searching for matches within your own database"},"is_project":0}]},{"id":"270011","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"5FFF0B8333F2403AA4B1639ED2661FEA","previous_guid":"F92F3B6F46E94CBDB6CD21699DE7601A","previous_id":"269999","last_modified":"1485128149","components":[{"component_id":"379045","previous_id":0,"original_id":"0","guid":"0BC1FBB28FA44AE8BD7816AE91614E43","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Let\u2019s try this another way. Run your blast again, but this time use a lower e-value cutoff.<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Let\u2019s try this another way. Run your blast again, but this time use a lower e-value cutoff.<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>"},"is_project":0},{"component_id":"379044","previous_id":"379045","original_id":"0","guid":"4CE3A105CD8F4B6487876F4335F4F199","previous_guid":"0BC1FBB28FA44AE8BD7816AE91614E43","component_type_id":"6","data_id":"0","data":"Searching for matches within your own database","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Searching for matches within your own database"},"is_project":0},{"component_id":"379050","previous_id":"379044","original_id":"0","guid":"9D9121EBA8064F9DA813AEA4C2B33582","previous_guid":"4CE3A105CD8F4B6487876F4335F4F199","component_type_id":"15","data_id":"1539","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"blastp -query PF03787_seed.txt -db toy_assembly_ORFs.faa -evalue 1e-02 -outfmt 6 -out PF03787_vs_prodigal_ORFs_toy_evalue1e02.blastp","description":"","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"270015","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"631AD9D4B54C4552857CBACA9DBCAE0B","previous_guid":"DFA3C92DEB194CCE9C2480D9C83C6A00","previous_id":"270145","last_modified":"1495033616","components":[{"component_id":"379054","previous_id":0,"original_id":"0","guid":"DA5ECD76C1E74B19AC161E01BF06011A","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Now let\u2019s try a different gene. Pfam is a good place to find general protein sequences that are grouped by sequence structure, with representatives from many different species. Let\u2019s say you\u2019re interested in finding a specific sequence instead.<\/p>\n<ol>\n<li>Go to <a href=\"https:\/\/www.ncbi.nlm.nih.gov\/protein\/\" target=\"_blank\">https:\/\/www.ncbi.nlm.nih.gov\/protein\/<\/a><\/li>\n<li>Let\u2019s look for the DNA polymerase from <em>Thermus aquaticus<\/em>, the famous DNA polymerase that is used in PCR. Type \u201cDNA polymerase Thermus aquaticus\u2019 in the search bar at the top.<\/li>\n<li>Click on the first hit you get. You\u2019ll see lots of information related to that sequence.<\/li>\n<li>Click on \u201cFASTA\u201d near the top. It will give you the FASTA sequence for that protein (protein rather than DNA).<\/li>\n<li>Copy that sequence and paste it into a new file on liverpool. Here is one way to do that: use nano to create a new file (see command). Once in nano, paste your sequence into the file. Type Ctrl+O, Enter, and then Ctrl+X.<\/li>\n<\/ol>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Now let\u2019s try a different gene. Pfam is a good place to find general protein sequences that are grouped by sequence structure, with representatives from many different species. Let\u2019s say you\u2019re interested in finding a specific sequence instead.<\/p>\n<ol>\n<li>Go to <a href=\"https:\/\/www.ncbi.nlm.nih.gov\/protein\/\" target=\"_blank\">https:\/\/www.ncbi.nlm.nih.gov\/protein\/<\/a><\/li>\n<li>Let\u2019s look for the DNA polymerase from <em>Thermus aquaticus<\/em>, the famous DNA polymerase that is used in PCR. Type \u201cDNA polymerase Thermus aquaticus\u2019 in the search bar at the top.<\/li>\n<li>Click on the first hit you get. You\u2019ll see lots of information related to that sequence.<\/li>\n<li>Click on \u201cFASTA\u201d near the top. It will give you the FASTA sequence for that protein (protein rather than DNA).<\/li>\n<li>Copy that sequence and paste it into a new file on liverpool. Here is one way to do that: use nano to create a new file (see command). Once in nano, paste your sequence into the file. Type Ctrl+O, Enter, and then Ctrl+X.<\/li>\n<\/ol>"},"is_project":0},{"component_id":"379053","previous_id":"379054","original_id":"0","guid":"7902D6CA6EC34FB69562F548E844C089","previous_guid":"DA5ECD76C1E74B19AC161E01BF06011A","component_type_id":"6","data_id":"0","data":"Searching for matches within your own database","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Searching for matches within your own database"},"is_project":0},{"component_id":"379439","previous_id":"379053","original_id":"0","guid":"7D871781977F49E1BBC1C3C64E36999F","previous_guid":"7902D6CA6EC34FB69562F548E844C089","component_type_id":"7","data_id":"279","data":"http:\/\/www.ncbi.nlm.nih.gov\/protein\/","order_id":"2","name":"External Link","data_by_id":"1","type_id":"7","source_data":{"link":"http:\/\/www.ncbi.nlm.nih.gov\/protein\/"},"is_project":0},{"component_id":"379062","previous_id":"379439","original_id":"0","guid":"C96FEAB8BD304C3EBB19692FE3912334","previous_guid":"7D871781977F49E1BBC1C3C64E36999F","component_type_id":"15","data_id":"1540","data":"","order_id":"3","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"nano DNA_pol_T_aquaticus.faa","description":"","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"270019","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"4B569195EA8142E992A37E720344C29A","previous_guid":"631AD9D4B54C4552857CBACA9DBCAE0B","previous_id":"270015","last_modified":"1485128306","components":[{"component_id":"379093","previous_id":0,"original_id":"0","guid":"8620A51A401D4861867FE76A113838C4","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Now you have a sequence file called \u201cDNA_pol_T_aquaticus.faa\u201d. BLAST it against your toy dataset:<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Now you have a sequence file called \u201cDNA_pol_T_aquaticus.faa\u201d. BLAST it against your toy dataset:<\/p>"},"is_project":0},{"component_id":"379060","previous_id":"379093","original_id":"0","guid":"ED199E5F3E5D4FD39921D9152DD3626C","previous_guid":"8620A51A401D4861867FE76A113838C4","component_type_id":"6","data_id":"0","data":"Searching for matches within your own database","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Searching for matches within your own database"},"is_project":0},{"component_id":"379099","previous_id":"379060","original_id":"0","guid":"E230CC4D8AA14F16A561B95DCEE5A482","previous_guid":"ED199E5F3E5D4FD39921D9152DD3626C","component_type_id":"15","data_id":"1541","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"blastp -query DNA_pol_T_aquaticus.faa -db toy_assembly_ORFs.faa -outfmt 6 -out DNA_pol_T_aq_vs_prodigal_ORFs_toy.blastp","description":"","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"270035","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"B26713EEF7A44A9CA170258A4913842B","previous_guid":"4B569195EA8142E992A37E720344C29A","previous_id":"270019","last_modified":"1484883332","components":[{"component_id":"379103","previous_id":0,"original_id":"0","guid":"D8C7774828504B4FBC2A3AD477CB98D6","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Take a look at your blastp output using less. Notice the e-value column, second from left. Most of your e-values for this range between 2.4 (at best) and 7.7 (at worst). These e-values are TERRIBLE. This means you probably didn\u2019t have very good hits to this protein in your dataset. (What constitutes a \u201cgood\u201d e-value is debatable and depends on your application, but usually you want it to be at least 0.001 or lower, as a general rule of thumb.)<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Take a look at your blastp output using less. Notice the e-value column, second from left. Most of your e-values for this range between 2.4 (at best) and 7.7 (at worst). These e-values are TERRIBLE. This means you probably didn\u2019t have very good hits to this protein in your dataset. (What constitutes a \u201cgood\u201d e-value is debatable and depends on your application, but usually you want it to be at least 0.001 or lower, as a general rule of thumb.)<\/p>"},"is_project":0},{"component_id":"379102","previous_id":"379103","original_id":"0","guid":"B910335FD45F45DF9E6965B0F9019B40","previous_guid":"D8C7774828504B4FBC2A3AD477CB98D6","component_type_id":"6","data_id":"0","data":"Searching for matches within your own database","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Searching for matches within your own database"},"is_project":0}]},{"id":"270039","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"EDE5376A42544CDC9A20EA2273DF8D59","previous_guid":"B26713EEF7A44A9CA170258A4913842B","previous_id":"270035","last_modified":"1485128904","components":[{"component_id":"379110","previous_id":0,"original_id":"0","guid":"4A25C71533184697A351F3261B71608B","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Now choose your own protein and BLAST it against your dataset. <strong>Answer the following questions on the Moodle Word document:<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>7. Describe the protein you chose and how you found the sequence for that protein.<\/p>\n<p>8. Show the command you executed for the blast.<\/p>\n<p>9. Where there any matches? If so, which contig was the best match?<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Now choose your own protein and BLAST it against your dataset. <strong>Answer the following questions on the Moodle Word document:<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>7. Describe the protein you chose and how you found the sequence for that protein.<\/p>\n<p>8. Show the command you executed for the blast.<\/p>\n<p>9. Where there any matches? If so, which contig was the best match?<\/p>"},"is_project":0},{"component_id":"379109","previous_id":"379110","original_id":"0","guid":"C624895D769547F2A583201F0D8A36E6","previous_guid":"4A25C71533184697A351F3261B71608B","component_type_id":"6","data_id":"0","data":"Searching for matches within your own database","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Searching for matches within your own database"},"is_project":0}]},{"id":"270050","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"E3D76D25225548C788988AF0D72B0308","previous_guid":"EDE5376A42544CDC9A20EA2273DF8D59","previous_id":"270039","last_modified":"1485444491","components":[{"component_id":"379136","previous_id":0,"original_id":"0","guid":"563CAE70505C46A78992561C3DA2B44E","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Now we\u2019re going to apply these analyses to your own datasets for your projects.<\/p>\n<p>\u00a0<\/p>\n<p>Identify open reading frames on your project assembly using Prodigal, then determine their functions using Interproscan. Use this lab handout for reference. <strong>Don't forget to use the 'fixed' version of your contigs<\/strong> (the version that has been run throuh 'anvi-script-reformat-fasta.') Your TAs and I are here to help if you have questions or get stuck\u2014usually the problem is a typo or you\u2019re in the wrong directory, so check that first! <strong>Your Interproscan runs will take several hours. Be sure to run them on screen so they can run overnight.<\/strong><\/p>\n<p>\u00a0<\/p>\n<p><strong>**Running Inteproscan on your large project datasets will be\u00a0extremely computationally intensive. Please stagger your runs so that we are not all running it at the same time: for Thursday lab, 5 people should start in lab today, and 4 people should log on tomorrow and start their runs once the others have finished.**<\/strong><\/p>\n<p>\u00a0<\/p>\n<p><strong>When you are finished<\/strong>, copy your assembly, your ORFs, and your Interproscan results to your group's shared folder. For example, if your Interproscan results are called 'ERR598966_assembly_ORFs.noasterisks.faa.tsv' and you are in the Arabian Sea group, copy them over\u00a0like this:<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Now we\u2019re going to apply these analyses to your own datasets for your projects.<\/p>\n<p>\u00a0<\/p>\n<p>Identify open reading frames on your project assembly using Prodigal, then determine their functions using Interproscan. Use this lab handout for reference. <strong>Don't forget to use the 'fixed' version of your contigs<\/strong> (the version that has been run throuh 'anvi-script-reformat-fasta.') Your TAs and I are here to help if you have questions or get stuck\u2014usually the problem is a typo or you\u2019re in the wrong directory, so check that first! <strong>Your Interproscan runs will take several hours. Be sure to run them on screen so they can run overnight.<\/strong><\/p>\n<p>\u00a0<\/p>\n<p><strong>**Running Inteproscan on your large project datasets will be\u00a0extremely computationally intensive. Please stagger your runs so that we are not all running it at the same time: for Thursday lab, 5 people should start in lab today, and 4 people should log on tomorrow and start their runs once the others have finished.**<\/strong><\/p>\n<p>\u00a0<\/p>\n<p><strong>When you are finished<\/strong>, copy your assembly, your ORFs, and your Interproscan results to your group's shared folder. For example, if your Interproscan results are called 'ERR598966_assembly_ORFs.noasterisks.faa.tsv' and you are in the Arabian Sea group, copy them over\u00a0like this:<\/p>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>"},"is_project":0},{"component_id":"379131","previous_id":"379136","original_id":"0","guid":"193E60852D54404CB92FAEEA879BE838","previous_guid":"563CAE70505C46A78992561C3DA2B44E","component_type_id":"6","data_id":"0","data":"Applying these analyses to your project datasets","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Applying these analyses to your project datasets"},"is_project":0},{"component_id":"379146","previous_id":"379131","original_id":"0","guid":"9732F36A6CFF4AA6B86CBD6FCEFAC2C6","previous_guid":"193E60852D54404CB92FAEEA879BE838","component_type_id":"15","data_id":"1543","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"cp ERR598966_assembly _ORFs.noasterisks.faa.tsv \/usr\/local\/data\/Tara_datasets\/Arabian_Sea","description":"","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"270145","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"DFA3C92DEB194CCE9C2480D9C83C6A00","previous_guid":"5FFF0B8333F2403AA4B1639ED2661FEA","previous_id":"270011","last_modified":"1485128162","components":[{"component_id":"379337","previous_id":0,"original_id":"0","guid":"EF316A5ACA744B808E8EEBF6A04A38F5","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p><strong>Answer the following question on the Word document you will submit to the Moodle:<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>6. \u00a0How do these BLAST results differ from your previous BLAST? Explain why.<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p><strong>Answer the following question on the Word document you will submit to the Moodle:<\/strong><\/p>\n<p>\u00a0<\/p>\n<p>6. \u00a0How do these BLAST results differ from your previous BLAST? Explain why.<\/p>"},"is_project":0},{"component_id":"379333","previous_id":"379337","original_id":"0","guid":"937A450E25DC4FB9A617B3655D41D5A5","previous_guid":"EF316A5ACA744B808E8EEBF6A04A38F5","component_type_id":"6","data_id":"0","data":"Searching for matches within your own database","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Searching for matches within your own database"},"is_project":0}]},{"id":"270195","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"08D5DF475709423E9E0F22B3D12E1DC6","previous_guid":"91D3B2FF38DD428AABEDC5B5663EC30E","previous_id":"269928","last_modified":"1484892379","components":[{"component_id":"379454","previous_id":0,"original_id":"0","guid":"AA34FAC3986641ACAD894C04FC44DA80","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>When it's done, terminate your screen session.<\/p>\n<p>\u00a0<\/p>\n<p>(You could also try Ctrl + A + k)<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>When it's done, terminate your screen session.<\/p>\n<p>\u00a0<\/p>\n<p>(You could also try Ctrl + A + k)<\/p>"},"is_project":0},{"component_id":"379453","previous_id":"379454","original_id":"0","guid":"3B06F1E8E1374126A25B09141C4B4A11","previous_guid":"AA34FAC3986641ACAD894C04FC44DA80","component_type_id":"6","data_id":"0","data":"Finding the function of our open reading frames\/genes\/proteins","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Finding the function of our open reading frames\/genes\/proteins"},"is_project":0},{"component_id":"379465","previous_id":"379453","original_id":"0","guid":"F50CEC5BD5984F069FF1318D659FEA18","previous_guid":"3B06F1E8E1374126A25B09141C4B4A11","component_type_id":"15","data_id":"1547","data":"","order_id":"2","name":"Command","data_by_id":"1","type_id":"15","source_data":{"name":"exit","description":"","os_name":"","os_version":"","can_edit":"1"},"is_project":0}]},{"id":"273983","is_changed":"0","original_id":"0","is_skipped":"0","is_checked":"0","guid":"1A0A651637264434BBC53C66399A1323","previous_guid":"E3D76D25225548C788988AF0D72B0308","previous_id":"270050","last_modified":"1485128917","components":[{"component_id":"386710","previous_id":0,"original_id":"0","guid":"1AC516EC16F84A4FB271B83237DC8B72","previous_guid":null,"component_type_id":"1","data_id":"0","data":"<p>Compile all of the Moodle questions above into a single document. There are nine\u00a0questions listed above.<\/p>\n<p>\u00a0<\/p>\n<p>Finally,\u00a0develop a question about your project dataset that you can answer using BLAST or using your Interproscan results. Remember that you can search for specific genes in your own dataset, or you can use the NCBI BLAST website to compare your own contigs to the NCBI non-redundant database, or you can search through your Interproscan results. For example, your\u00a0question could be something like: 'how many <em>different<\/em> open reading frames in my dataset have a match to photosystem II?' or 'what genes in the NCBI non-redundant\u00a0database have the best match to my longest contig?' Describe your question, explain how you went about answering it, and describe your results.<\/p>\n<p>\u00a0<\/p>\n<p>Compile all of this together into a Word (or similar) document and submit via Moodle by lab next week.<\/p>","order_id":"0","name":"Description","data_by_id":"0","type_id":"1","source_data":{"description":"<p>Compile all of the Moodle questions above into a single document. There are nine\u00a0questions listed above.<\/p>\n<p>\u00a0<\/p>\n<p>Finally,\u00a0develop a question about your project dataset that you can answer using BLAST or using your Interproscan results. Remember that you can search for specific genes in your own dataset, or you can use the NCBI BLAST website to compare your own contigs to the NCBI non-redundant database, or you can search through your Interproscan results. For example, your\u00a0question could be something like: 'how many <em>different<\/em> open reading frames in my dataset have a match to photosystem II?' or 'what genes in the NCBI non-redundant\u00a0database have the best match to my longest contig?' Describe your question, explain how you went about answering it, and describe your results.<\/p>\n<p>\u00a0<\/p>\n<p>Compile all of this together into a Word (or similar) document and submit via Moodle by lab next week.<\/p>"},"is_project":0},{"component_id":"386709","previous_id":"386710","original_id":"0","guid":"111274398D83454F8070EFE0375EA936","previous_guid":"1AC516EC16F84A4FB271B83237DC8B72","component_type_id":"6","data_id":"0","data":"Applying these analyses to your project datasets","order_id":"1","name":"Section","data_by_id":"0","type_id":"6","source_data":{"section":"Applying these analyses to your project datasets"},"is_project":0}]}]}